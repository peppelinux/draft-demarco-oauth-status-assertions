{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2024-08-01T00:59:00.271271+00:00",
  "repo": "peppelinux/draft-demarco-oauth-status-assertions",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    },
    {
      "name": "out-of-scope",
      "description": "",
      "color": "E6C656"
    },
    {
      "name": "breaking-change",
      "description": "",
      "color": "D7340C"
    },
    {
      "name": "under-discussion",
      "description": "",
      "color": "C6D808"
    },
    {
      "name": "ietf-comments",
      "description": "",
      "color": "6EF83A"
    },
    {
      "name": "pr-ready",
      "description": "",
      "color": "BAE7B3"
    }
  ],
  "issues": [
    {
      "number": 3,
      "id": "I_kwDOK4XJ0s5-J5yj",
      "title": "Credential jwt in the status attestation request",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/issues/3",
      "state": "CLOSED",
      "author": "fmarino-ipzs",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "fmarino-ipzs"
      ],
      "labels": [],
      "body": "For privacy and security reasons, we should remove the credential jwt from the status attestation request. \nThe credential_pop value should be a unique identifier of the credential, for example the hash value of the credential.\nThe credential issuer is able to get the credential from the hash value, check the status and return the status attestation. ",
      "createdAt": "2024-02-03T15:11:07Z",
      "updatedAt": "2024-02-23T17:47:38Z",
      "closedAt": "2024-02-23T17:47:38Z",
      "comments": [
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "If we proceed with the approach of not accessing the credential in secure storage (thus not requiring user consent), the unique identifier would not be derived from the credential attributes. This means there could be JWTs without a jti or other credential formats lacking unique identifiers. \r\n\r\nConsequently, to uniquely identify a credential, it would be necessary to use a hash of the credential itself. For a JWT, this would involve hashing the JWT; for an mDoc in CBOR format, it would involve hashing its base64 representation, and so forth.",
          "createdAt": "2024-02-03T15:16:02Z",
          "updatedAt": "2024-02-03T22:49:39Z"
        }
      ]
    },
    {
      "number": 4,
      "id": "I_kwDOK4XJ0s5-io_4",
      "title": "todo: privacy considerations section",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/issues/4",
      "state": "CLOSED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [
        "peppelinux"
      ],
      "labels": [],
      "body": "it is really required and also requested be ppl from the IETF ML",
      "createdAt": "2024-02-07T13:13:09Z",
      "updatedAt": "2024-02-14T14:08:32Z",
      "closedAt": "2024-02-14T14:08:31Z",
      "comments": [
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "> IMO, neither the \"Token Status List\", nor to the \"OAuth Status Attestations\" are the right way to address two privacy considerations: \"Unlinkability between verifiers\" and \"Untrackability by digital credential issuers\".\r\n\r\nhere my notes\r\n\r\n**Unlinkability between verifiers**\r\nStatus Attestations are designed to be privacy-preserving by not requiring verifiers to gather any additional information from third-party entities. This means that each verifier independently verifies the status of a digital credential, though the status attestation, without needing to interact with or reveal information to other verifiers or third-party status list providers. This approach ensures that actions performed by one verifier cannot be linked to actions performed by another verifier, maintaining unlinkability between them.\r\n\r\n**Untrackability by digital credential issuers**\r\nSince Status Attestations can be verified statically without further communication with the credential issuer or any other party, the issuer cannot track when or where the digital credential is being verified. This is in contrast to models where the verifier must query a central status list or the issuer directly, which would allow the issuer to track the usage of the digital credential. By providing all necessary information within the Status Attestation itself, it ensures that the issuer cannot track the verification activities related to a specific digital credential.",
          "createdAt": "2024-02-07T13:40:31Z",
          "updatedAt": "2024-02-07T13:40:42Z"
        }
      ]
    },
    {
      "number": 5,
      "id": "I_kwDOK4XJ0s5-ipmt",
      "title": "Change draft name",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/issues/5",
      "state": "CLOSED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [
        "SaraConsoliACN"
      ],
      "labels": [],
      "body": "> it would be good to avoid the term \"attestations\" because it is already used for a different purpose (in the IETF).\r\n\r\nCould it be \"status tokens\" or \"status assertions\"?",
      "createdAt": "2024-02-07T13:14:29Z",
      "updatedAt": "2024-05-09T16:42:18Z",
      "closedAt": "2024-05-09T16:42:18Z",
      "comments": [
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "What about Status Evidence?\r\n\r\nThis would be close to the Wallet Trust Evidence we have for eIDAS",
          "createdAt": "2024-02-20T11:43:26Z",
          "updatedAt": "2024-02-20T11:43:26Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "I suggest we have a chat with RATS about this... they use these terms a lot, and will be very unhappy if we do not attempt to foster alignment... as will I : )",
          "createdAt": "2024-02-28T14:43:29Z",
          "updatedAt": "2024-02-28T14:43:29Z"
        },
        {
          "author": "bc-pi",
          "authorAssociation": "NONE",
          "body": "\"status assertions\" seems reasonably good/appropriate here. The term \"attestation\" is just quite popular right now and carries some assumptions/connotations due to wide use in a different context. The term \"assertion\" is overloaded too (as are most terms) but less problematically so. And I think \"assertion\" does nicely convey the intent. ",
          "createdAt": "2024-02-28T17:46:07Z",
          "updatedAt": "2024-02-28T17:46:07Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "I suddenly realized that \"status $something\" misses the subject, the name would therefore be \"Digital Credential Status Assertions\"\r\n\r\nThis specification excludes its use with traditional OAuth 2.0/OIDC tokens. While the OAuth Status List shares some similarities, the OAuth 2.0 Introspection endpoint is deemed sufficient for such tokens due to several key differences:\r\n\r\n- **Interaction**: Parties interact differently in the context of traditional tokens compared to this specification.\r\n- **Privacy**: Distinct privacy requirements apply to each scenario.\r\n- **Offline usage**: Offline use cases, which necessitate this specification, are not a requirement for legacy infrastructures utilizing traditional tokens.",
          "createdAt": "2024-02-29T09:52:21Z",
          "updatedAt": "2024-02-29T09:52:33Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "@marinaado Interesting reference: https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/227/files#diff-585fb424519b79cf000445f3425fa56d328cbaca5d2a622740ddc4e5ca91dbe1R936",
          "createdAt": "2024-04-19T12:59:03Z",
          "updatedAt": "2024-04-19T12:59:03Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "Following the Architecture for Trustworthy and Transparent Digital Supply Chains (SCITT), this looks pretty close to the purpose of this specs\r\n\r\n````\r\n{{NIST.SP.800-63-3}} defines \"assertion\" as \"A statement from a verifier to an RP that contains information about a subscriber.\r\nAssertions may also contain verified attributes.\"\r\n````\r\n\r\n@SaraConsoliACN could you please create a PR with the proposal of the specification name change?",
          "createdAt": "2024-04-30T09:55:20Z",
          "updatedAt": "2024-04-30T09:55:20Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "Resolved by https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/38",
          "createdAt": "2024-05-09T16:42:18Z",
          "updatedAt": "2024-05-09T16:42:18Z"
        }
      ]
    },
    {
      "number": 7,
      "id": "I_kwDOK4XJ0s5_BrbI",
      "title": "Error Codes",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/issues/7",
      "state": "CLOSED",
      "author": "fmarino-ipzs",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "peppelinux"
      ],
      "labels": [],
      "body": "If the Status Attestation is requested for a non-existent, expired, revoked, or invalid Digital Credential, or the HTTP Request is not valid (missing or invalid parameters) the Credential Issuer MUST respond with an HTTP Response including the following parameters:\r\n\r\n- error: The proper error code\r\n- error_description: Human-readable text providing additional information, used to assist the Wallet Instance in understanding the error that occurred (e.g. some attributes are changed, revocation reason, etc.)\r\n\r\n```\r\n HTTP/1.1 400 Bad Request\r\n     Content-Type: application/json;charset=UTF-8\r\n     Cache-Control: no-store\r\n     Pragma: no-cache\r\n\r\n     {\r\n       \"error\":\"invalid_request\"\r\n       \"error_description\": \"The signature of credential_pop JWT is not valid\"\r\n     }\r\n```\r\n\r\nIt could be useful to add an error code section.",
      "createdAt": "2024-02-12T23:06:15Z",
      "updatedAt": "2024-02-14T14:04:11Z",
      "closedAt": "2024-02-14T14:04:11Z",
      "comments": []
    },
    {
      "number": 11,
      "id": "I_kwDOK4XJ0s5_H--N",
      "title": "Define Proof of Possession of a Credential",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/issues/11",
      "state": "CLOSED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "peppelinux"
      ],
      "labels": [],
      "body": "Does it mean just having the bytes?\r\n\r\nDoes it mean having the bytes, and controlling a private key for use with `cnf` ?",
      "createdAt": "2024-02-13T17:13:00Z",
      "updatedAt": "2024-02-28T14:08:09Z",
      "closedAt": "2024-02-28T14:08:08Z",
      "comments": []
    },
    {
      "number": 13,
      "id": "I_kwDOK4XJ0s5_NVbM",
      "title": "implementation requirement",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/issues/13",
      "state": "CLOSED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "when the VCI issues a credential it must store an hash for the comparison when the status attestation request happen",
      "createdAt": "2024-02-14T12:01:09Z",
      "updatedAt": "2024-02-23T17:47:38Z",
      "closedAt": "2024-02-23T17:47:38Z",
      "comments": []
    },
    {
      "number": 14,
      "id": "I_kwDOK4XJ0s5_ONSn",
      "title": "extended error codes",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/issues/14",
      "state": "CLOSED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [
        "SaraConsoliACN"
      ],
      "labels": [],
      "body": "For the sake of clarity, I explicitly would provide a list of error codes that are useful in this specification. For example, it is not clear how to handle the case of an error response due to a Credential revocation. I don't see a clear error code in the RFC6749 that is clear for this scenario. We could put this in an issue and postpone this discussion if you want.\r\n\r\n_Originally posted by @fmarino-ipzs in https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/10#discussion_r1489337287_\r\n            ",
      "createdAt": "2024-02-14T14:03:32Z",
      "updatedAt": "2024-06-10T20:09:00Z",
      "closedAt": "2024-06-10T20:09:00Z",
      "comments": [
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "Resolved by https://github.com/peppelinux/draft-demarco-oauth-status-assertions/pull/37",
          "createdAt": "2024-06-10T20:09:00Z",
          "updatedAt": "2024-06-10T20:09:00Z"
        }
      ]
    },
    {
      "number": 15,
      "id": "I_kwDOK4XJ0s5_OPc6",
      "title": "editorial - privacy considerations",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/issues/15",
      "state": "CLOSED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "from \r\n```\r\nThese privacy considerations are integral to the design of Status Attestations \r\nand reflect a deliberate effort to balance security and privacy needs in the \r\ndigital credential ecosystem. By adhering to these principles, Status Attestations \r\ncontribute to a more secure and privacy-respecting digital world.\r\n````\r\nto\r\n```\r\nStatus Attestations are based on a privacy-by-design approach, reflecting a \r\ndeliberate effort to balance security and privacy needs in the digital credential ecosystem.\r\n```\r\n\r\n_Originally posted by @fmarino-ipzs in https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/9#discussion_r1489361569_\r\n            ",
      "createdAt": "2024-02-14T14:08:13Z",
      "updatedAt": "2024-02-28T20:47:04Z",
      "closedAt": "2024-02-28T20:47:03Z",
      "comments": []
    },
    {
      "number": 16,
      "id": "I_kwDOK4XJ0s6AMWMS",
      "title": "IANA named hash registry, and make sha-256 mandatory to implement.",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/issues/16",
      "state": "CLOSED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "lets use the IANA named hash registry, and make sha-256 mandatory to implement.\r\n\r\nhttps://www.iana.org/assignments/named-information/named-information.xhtml#hash-alg\r\n\r\nAlternatively, we can use the cose registry which includes hash algorithms:\r\n\r\nhttps://www.iana.org/assignments/cose/cose.xhtml#algorithms\r\n\r\nthe \"COSE\" style for this kind of thing would be:\r\n\r\n```\r\ncredential_hash: [alg, hash]\r\n```\r\n\r\n_Originally posted by @OR13 in https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/6#discussion_r1487916459_\r\n            ",
      "createdAt": "2024-02-23T09:40:49Z",
      "updatedAt": "2024-02-23T17:47:38Z",
      "closedAt": "2024-02-23T17:47:37Z",
      "comments": [
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "see also https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/6#discussion_r1487918496",
          "createdAt": "2024-02-23T09:42:19Z",
          "updatedAt": "2024-02-23T09:42:19Z"
        }
      ]
    },
    {
      "number": 19,
      "id": "I_kwDOK4XJ0s6AQ42s",
      "title": "credential_pop kid",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/issues/19",
      "state": "CLOSED",
      "author": "fmarino-ipzs",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "SaraConsoliACN"
      ],
      "labels": [],
      "body": "We should generalize the key identifier by adding:\r\n\r\n- jwk\r\n- x5c\r\n\r\nOnly one of them MUST be used. ",
      "createdAt": "2024-02-23T22:39:25Z",
      "updatedAt": "2024-06-10T20:09:57Z",
      "closedAt": "2024-06-10T20:09:57Z",
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "Not info info on this issue to fully follow the request.\r\n\r\nwhen using `cnf` claim in the COSE or JOSE Payload, typically you would have:\r\n\r\nMUST support `\"cnf\": { \"jwk\": ...}}`\r\nMAY support `\"cnf\": { \"kid\": ...}}`\r\n\r\nWhen referring to the issuer's signing keys for the credential in the protected header, typically you would have:\r\n\r\nMUST support `\"kid\":  ...`\r\nMAY support `\"x5t\":  ...`\r\nMAY support `\"jwk\":  ...`\r\n\r\nI would not recommend `x5c`  in protected headers at this point, for new specs.",
          "createdAt": "2024-02-28T14:16:15Z",
          "updatedAt": "2024-02-28T14:16:15Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "Resolved by https://github.com/peppelinux/draft-demarco-oauth-status-assertions/pull/56/files",
          "createdAt": "2024-06-10T20:09:57Z",
          "updatedAt": "2024-06-10T20:09:57Z"
        }
      ]
    },
    {
      "number": 20,
      "id": "I_kwDOK4XJ0s6ARKN9",
      "title": "credential_pop typ",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/issues/20",
      "state": "CLOSED",
      "author": "fmarino-ipzs",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "SaraConsoliACN"
      ],
      "labels": [],
      "body": "The credential_pop is a JWT. I would consider `typ` as OPTIONAL and value it with `jwt`.\r\nIf omitted by default it is assumed to be `jwt`.",
      "createdAt": "2024-02-24T00:16:16Z",
      "updatedAt": "2024-05-20T15:17:40Z",
      "closedAt": "2024-05-20T15:17:40Z",
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "We might consider addressing the CWT case at the same time here.\r\n\r\nIts against the JWT BCP to omit typ at this point: https://datatracker.ietf.org/doc/html/rfc8725#name-use-explicit-typing\r\n\r\nI'd propose the following:\r\n\r\ncredential_pop MUST be a JWT or CWT.\r\n\r\nThe typ protected header parameter SHOULD be \"kb+jwt\" or \"kb+cwt\".\r\n\r\n",
          "createdAt": "2024-02-28T14:11:20Z",
          "updatedAt": "2024-02-28T14:11:20Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "I and @fmarino-ipzs agreed with you, please open a PR if possibile\r\n\r\nthis issue is tagged under the milestone 01",
          "createdAt": "2024-02-28T14:22:30Z",
          "updatedAt": "2024-02-28T14:22:30Z"
        },
        {
          "author": "SaraConsoliACN",
          "authorAssociation": "COLLABORATOR",
          "body": "This issue has been resolved by PR #37.",
          "createdAt": "2024-05-20T15:17:40Z",
          "updatedAt": "2024-05-20T15:17:40Z"
        }
      ]
    },
    {
      "number": 22,
      "id": "I_kwDOK4XJ0s6AtPRa",
      "title": "Define Mechanism for Verifiers to Request Fresh Status Attestations",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/issues/22",
      "state": "OPEN",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [
        "enhancement",
        "wontfix",
        "out-of-scope"
      ],
      "body": "In the current implementation of the Status Attestation process, there is a need to introduce a mechanism that allows verifiers to specify how recent (in minutes) a Status Attestation needs to be. This requirement stems from scenarios where the verifier of a digital credential necessitates the Status Attestation to be exceptionally fresh to ensure the highest level of accuracy and security.\r\n\r\nTo accommodate this, we propose the development of a feature within the Status Attestation request protocol that enables verifiers to indicate a maximum age (N minutes) for the Status Attestation. This will ensure that the attestation provided is no older than the specified timeframe, meeting the verifier's requirements for freshness.\r\n\r\nThis feature necessitates the Wallet Instance to have an active internet connection to obtain the most up-to-date Status Attestation from the Credential Issuer, as per the verifier's request. \r\n\r\nThis information should be statically provided, per credential type, within the presentation request or within the presentation definition in the verifier's metadata.",
      "createdAt": "2024-02-28T16:21:03Z",
      "updatedAt": "2024-02-29T09:35:03Z",
      "closedAt": null,
      "comments": [
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "This is out of scope for this draft, just an issue for our awareness related to RP's requirements and claims",
          "createdAt": "2024-02-28T20:47:53Z",
          "updatedAt": "2024-02-28T20:47:53Z"
        }
      ]
    },
    {
      "number": 23,
      "id": "I_kwDOK4XJ0s6AyvFE",
      "title": "aud parameter in credential_pop",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/issues/23",
      "state": "CLOSED",
      "author": "fmarino-ipzs",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "`aud` parameter should be set to the endpoint at which the credential_pop is used. ",
      "createdAt": "2024-02-29T09:19:33Z",
      "updatedAt": "2024-03-04T15:37:20Z",
      "closedAt": "2024-03-04T15:37:20Z",
      "comments": [
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "Already there\r\nhttps://github.com/peppelinux/draft-demarco-oauth-status-attestations/blob/main/draft-demarco-oauth-status-attestations.md?plain=1#L316",
          "createdAt": "2024-02-29T09:34:29Z",
          "updatedAt": "2024-02-29T09:34:29Z"
        }
      ]
    },
    {
      "number": 26,
      "id": "I_kwDOK4XJ0s6BvULj",
      "title": "Need privacy considerations for issuer tracking",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/issues/26",
      "state": "CLOSED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Requiring continuous credential pop from a wallet so a status attestation is available also impacts holder privacy.\r\n\r\nThere should be privacy considerations that compare the trade offs associated this approach when compared to requesting status lists anonymously",
      "createdAt": "2024-03-08T19:41:14Z",
      "updatedAt": "2024-04-29T12:14:24Z",
      "closedAt": "2024-04-29T12:14:24Z",
      "comments": [
        {
          "author": "SaraConsoliACN",
          "authorAssociation": "COLLABORATOR",
          "body": "\r\n@OR13 Can we consider this issue closed now that we have dedicated a chapter to privacy considerations?",
          "createdAt": "2024-04-29T10:09:17Z",
          "updatedAt": "2024-04-29T10:09:17Z"
        }
      ]
    },
    {
      "number": 27,
      "id": "I_kwDOK4XJ0s6C0sac",
      "title": "OID4VCI metadata should not be defined in a standalone draft",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/issues/27",
      "state": "OPEN",
      "author": "awoie",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "IMO, OID4VCI metadata should not be defined in a separate document. At least as long there is no IANA registry for that.",
      "createdAt": "2024-03-19T12:33:37Z",
      "updatedAt": "2024-03-19T12:33:37Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 28,
      "id": "I_kwDOK4XJ0s6C0vdZ",
      "title": "Define use case for this status attestation mechanism",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/issues/28",
      "state": "OPEN",
      "author": "awoie",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "question",
        "wontfix"
      ],
      "body": "It is not clear to me why other status mechanisms cannot be used instead of the proposed one. It would be good to understand under which circumstances the proposed status mechanism has clear benefits. I believe it is mostly saving HTTP requests for RPs, right?\r\n\r\nI don't necessarily agree with the statements made on privacy and trust model that are included in the document. IMO, OAuth Status List is privacy preserving and the trust model could be the same as for the proposed option. In fact, some people are implementing Status List using the existing issuer trust model.",
      "createdAt": "2024-03-19T12:39:56Z",
      "updatedAt": "2024-05-23T08:46:10Z",
      "closedAt": null,
      "comments": [
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "@awoie Does the status list prevent the monitoring of the credential status over time, outside the scope of the authentication?\r\n\r\nCould you please provide which part of the privacy and trust model statements you don't agree?\r\n\r\nthis specification enables an OCSP stapling like approach, nothing prevents to merge this approach within the status list specification (as proposed before the born of this specs)",
          "createdAt": "2024-03-19T13:27:50Z",
          "updatedAt": "2024-03-19T13:27:50Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "@awoie I think the main benefit is probably presentation size, and verifier complexity.\n\nIt's true a holder could present a reasonably fresh signed CRL instead of use OCSP.\n\nIt's also true that the status attestation refresh window could impose some connectivity limits on the holder.\n\nAs a general rule, many systems are forbidden from calling out to check status, and transmitting an entire CRL only to support a single certificate validation is wasteful from the holder perspective... It also communicates status changes for previously transmitted credentials, or yet to be received credentials... So it leaks information regarding other transactions.",
          "createdAt": "2024-03-19T21:17:35Z",
          "updatedAt": "2024-03-19T21:17:35Z"
        }
      ]
    },
    {
      "number": 29,
      "id": "I_kwDOK4XJ0s6C1OoJ",
      "title": "Missing validation steps for verifiers",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/issues/29",
      "state": "OPEN",
      "author": "awoie",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "It is not clear what happens if the verifier encounters a credential with a status attestation method in the `status` field but does not receive a status attestation. \r\n\r\nThree questions:\r\n- Should the verifier reject a credential presentation if the wallet did not provide a status attestation?\r\n- How does the holder know whether the verifier requires a status attestation?\r\n- Why would a holder ever present a credential along with a revoked status attestation?",
      "createdAt": "2024-03-19T13:33:40Z",
      "updatedAt": "2024-03-19T13:43:26Z",
      "closedAt": null,
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "NONE",
          "body": "> * Should the verifier reject a credential presentation if the wallet did not provide a status attestation?\r\n\r\nThis is especially important if the holder is not able to request a valid status attestation anymore and the credential became invalid.",
          "createdAt": "2024-03-19T13:37:16Z",
          "updatedAt": "2024-03-19T13:37:16Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "A credential might have more than a single status validation mechanism. The scope of the status attestation method in the status object is the evidence that this credential - and its issuer -  supports the status attestation. This enables the coesistence of status lsit and status attestation in the same credential and the use of status attestation for offline flows\r\n\r\nIf a verifier gets the status.status_attestation within a presented credential without obtaining within the vp_token a status attestation token, according to its policies, decides if the revocation check is required or not and if other revocation check mechanism are available.\r\n\r\n> Should the verifier reject a credential presentation if the wallet did not provide a status attestation?\r\n\r\nIt depends on the RP's policies.\r\n\r\n  - This is especially important if the holder is not able to request a valid status attestation anymore and the credential became invalid.\r\n  \r\n  that would be a proof that the holder unsatisfies the requirement of providing the proof that the credential is still valid. The RP behaviour depends on its policies.\r\n  \r\n\r\n> How does the holder know whether the verifier requires a status attestation?\r\n\r\nIt doesn't. When the credential is issued and contains a status.status_attestation, the holder should provide in the vp_token the status attestation related to each credential supporting this. We can expand this use case as well with community contributions.\r\n\r\n> Why would a holder ever present a credential along with a revoked status attestation?\r\n\r\nit might depend by the use cases. At the current stage the status attestation is intended for unrevoked credentials. We can expand this use case as well with community contributions.",
          "createdAt": "2024-03-19T13:43:25Z",
          "updatedAt": "2024-03-19T13:43:25Z"
        }
      ]
    },
    {
      "number": 30,
      "id": "I_kwDOK4XJ0s6DWoAb",
      "title": "Status Attestation in batch",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/issues/30",
      "state": "CLOSED",
      "author": "fmarino-ipzs",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "enhancement"
      ],
      "body": "If the Wallet Instance has several Credentials issued by the same Issuer, we could introduce a mechanism to request all the Status attestations referring to the Credentials. Probably, this could be achieved by allowing the `credential_pop` to be an array.",
      "createdAt": "2024-03-23T07:21:57Z",
      "updatedAt": "2024-05-20T07:54:38Z",
      "closedAt": "2024-05-20T07:54:38Z",
      "comments": [
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "Resolved by https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/36",
          "createdAt": "2024-05-20T07:54:38Z",
          "updatedAt": "2024-05-20T07:54:38Z"
        }
      ]
    },
    {
      "number": 31,
      "id": "I_kwDOK4XJ0s6EWDFN",
      "title": "eIDAS II Regulation requirements from Art. 5a(16)",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/issues/31",
      "state": "OPEN",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Art. 5a(16). The technical framework of the European Digital Identity Wallet shall:\r\n\r\n(a) not allow providers of electronic attestations of attributes or any other party, after the issuance of the attestation of attributes, to obtain data that allows transactions or user behaviour to be tracked, linked or correlated, or knowledge of transactions or user behaviour to beotherwise obtained, unless explicitly authorised by the user;\r\n\r\nAt the current stage, the status attestation are completely in line with this.",
      "createdAt": "2024-04-02T12:18:28Z",
      "updatedAt": "2024-04-02T12:18:28Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 32,
      "id": "I_kwDOK4XJ0s6FZMvq",
      "title": "Reconsider PoP mechanism to get a new status attestation",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/issues/32",
      "state": "OPEN",
      "author": "paulbastian",
      "authorAssociation": "NONE",
      "assignees": [
        "peppelinux"
      ],
      "labels": [],
      "body": "PoP of Credential cnf key hould not be used, instead an api-key exchanged between wallet and Issuer.\r\n\r\nAdvantages are:\r\n- enables claim-based bound credentials\r\n- does not require user interaction as the PoP key may be bound to PIN/Biometrics but the api-key does not, as it is provided by the Issuer during issuance",
      "createdAt": "2024-04-11T15:10:52Z",
      "updatedAt": "2024-06-12T19:57:11Z",
      "closedAt": null,
      "comments": [
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "I see the benefits @paulbastian and I believe that these should be further discussed, here some additional considerations:\r\n\r\n1. how it would enable claim-based bound credentials?\r\n2. this depends by impl. We connsider that the attestations are fetched when the user activate/execute the wallet, therefore asap after the local authentication",
          "createdAt": "2024-04-17T12:33:38Z",
          "updatedAt": "2024-04-17T12:33:38Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "perhaps we say \"issuer MUST authenticate the wallet\", and MUST support PoP and MAY support other mechanisms, and briefly describe them?",
          "createdAt": "2024-04-30T12:31:35Z",
          "updatedAt": "2024-04-30T12:31:35Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "NONE",
          "body": "As discussed today, Oliver proposed to use a dpop key to get this at a /status endpoint. That would enable to use Referenced Token that don't have cnf claim",
          "createdAt": "2024-06-11T16:48:37Z",
          "updatedAt": "2024-06-11T16:48:37Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "@paulbastian we can do this and it is resonable, we can protect the endpoint also with DPoP using a key specialized for this purpose,\r\n\r\nthank you\r\n",
          "createdAt": "2024-06-12T07:37:25Z",
          "updatedAt": "2024-06-12T19:57:11Z"
        }
      ]
    },
    {
      "number": 39,
      "id": "I_kwDOK4XJ0s6IW2bh",
      "title": "status assertion request kid",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/issues/39",
      "state": "CLOSED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [
        "SaraConsoliACN"
      ],
      "labels": [],
      "body": "1. `kid` should be intended as required when `x5c` is not present, where at least one of them MUST be present and related to the cryptogric public key of the related credential\r\n",
      "createdAt": "2024-05-09T13:22:44Z",
      "updatedAt": "2024-05-25T14:42:14Z",
      "closedAt": "2024-05-25T14:42:14Z",
      "comments": [
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "Resolved by https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/56",
          "createdAt": "2024-05-25T14:42:14Z",
          "updatedAt": "2024-05-25T14:42:14Z"
        }
      ]
    },
    {
      "number": 40,
      "id": "I_kwDOK4XJ0s6IW4c6",
      "title": "status assertion credential binding",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/issues/40",
      "state": "CLOSED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [
        "SaraConsoliACN"
      ],
      "labels": [],
      "body": "the binding of the status assertion with the credential is made with the credential hash, signed within the status assertion.\r\n\r\nin the current text, there is also the `cnf.jwk` claim, privinding the binding with the cryptograohic material included in the credential. \r\nthis latter represent an additional binding and this require additional elements to guide the implementors in how to behave when one of the provided binding is not aligned with the credential (assertion invalidation, I would say).\r\n\r\nAt the same time, there may be cases when the related credential doesn't have any cryptographic key binding, in these cases the claim `cnf.jwj` doersn't have any reason to exists, therefore any reason to be considered as a mandatory claim within the status assertion payload.\r\n\r\nThe proposal of the current issue is to generalize this behaviour by saying that there might be several ways to bind a credential to a status assertion, and therefore proving this during the presentation phase.\r\n\r\n````\r\n{\r\n    \"alg\": \"ES256\",\r\n    \"typ\": \"status-attestation+jwt\",\r\n    \"kid\": $ISSUER-JWKID\r\n}\r\n.\r\n{\r\n    \"iss\": \"https://issuer.example.org\",\r\n    \"iat\": 1504699136,\r\n    \"exp\": 1504700136,\r\n    \"credential_hash\": $CREDENTIAL-HASH,\r\n    \"credential_hash_alg\": \"sha-256\",\r\n    \"cnf\": {\r\n        \"jwk\": {...}\r\n    }\r\n}\r\n````",
      "createdAt": "2024-05-09T13:27:17Z",
      "updatedAt": "2024-05-22T12:48:01Z",
      "closedAt": "2024-05-22T12:48:01Z",
      "comments": [
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "This issues seems to be resolved by https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/36\r\n\r\nan additional check is required to include or not any further comments about how to generalize the confirmation method and the credential binding",
          "createdAt": "2024-05-19T21:36:08Z",
          "updatedAt": "2024-05-19T21:36:08Z"
        }
      ]
    },
    {
      "number": 41,
      "id": "I_kwDOK4XJ0s6IW5Q9",
      "title": "history/changelog section",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/issues/41",
      "state": "CLOSED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [
        "SaraConsoliACN"
      ],
      "labels": [],
      "body": "create an history/changelog section to track all the changes in the draft",
      "createdAt": "2024-05-09T13:29:07Z",
      "updatedAt": "2024-05-09T16:42:38Z",
      "closedAt": "2024-05-09T16:42:38Z",
      "comments": [
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "Resolved by https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/38",
          "createdAt": "2024-05-09T16:42:38Z",
          "updatedAt": "2024-05-09T16:42:38Z"
        }
      ]
    },
    {
      "number": 43,
      "id": "I_kwDOK4XJ0s6Ip9Tp",
      "title": "Assertions related to a credential that had a confirmation claim.",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/issues/43",
      "state": "CLOSED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [
        "OR13"
      ],
      "labels": [],
      "body": "@OR13 's\r\nI wonder if these are all really \"credentials\"... or are they simply assertions related to a credential that had a confirmation claim?\r\n\r\n- https://datatracker.ietf.org/doc/html/rfc7800#section-3.1\r\n- https://datatracker.ietf.org/doc/html/rfc8747#section-3.1\r\n\r\nNow that its an array, can each of these items demonstrate possession of a different key?\r\n\r\nCan methods be mixed, for example, cred-1 uses COSE Key, cred-2 use JKT ?\r\n\r\n_Originally posted by @OR13 in https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/36#discussion_r1591006026_\r\n            ",
      "createdAt": "2024-05-13T12:35:09Z",
      "updatedAt": "2024-06-12T19:58:00Z",
      "closedAt": "2024-06-12T19:58:00Z",
      "comments": [
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "@OR13 I suppose that this issue is resolved by https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/36\r\n\r\nwhere a further generalization was introduced about the use of the confirmation method",
          "createdAt": "2024-05-20T07:57:06Z",
          "updatedAt": "2024-05-20T07:57:06Z"
        }
      ]
    },
    {
      "number": 44,
      "id": "I_kwDOK4XJ0s6Ix-sR",
      "title": "Move ECHR and GDP links to informative references",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/issues/44",
      "state": "OPEN",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "we should move these to informative references\r\n\r\n_Originally posted by @OR13 in https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/42#discussion_r1598509544_\r\n            ",
      "createdAt": "2024-05-14T08:33:21Z",
      "updatedAt": "2024-05-14T08:33:21Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 46,
      "id": "I_kwDOK4XJ0s6JLOYi",
      "title": "PR needed for status assertion response errors.",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/issues/46",
      "state": "CLOSED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [
        "SaraConsoliACN"
      ],
      "labels": [],
      "body": "A separate PR will be needed thought for status assertion response error objects.\r\n\r\n_Originally posted by @marinaado in https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/36#pullrequestreview-2060386287_\r\n            ",
      "createdAt": "2024-05-16T21:53:04Z",
      "updatedAt": "2024-05-25T14:42:53Z",
      "closedAt": "2024-05-25T14:42:53Z",
      "comments": [
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "Resolved by https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/53",
          "createdAt": "2024-05-25T14:42:53Z",
          "updatedAt": "2024-05-25T14:42:53Z"
        }
      ]
    },
    {
      "number": 47,
      "id": "I_kwDOK4XJ0s6JQJsl",
      "title": "better generalization about the confirmation method",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/issues/47",
      "state": "CLOSED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [
        "SaraConsoliACN"
      ],
      "labels": [],
      "body": "in the section proof of possession we still have strict requirements about the cryptographic bindinds\r\n\r\n2. Controlling a private key that corresponds to a public key associated\r\nwith the Credential, often indicated within the Credential's cnf\r\n(confirmation) claim or through a similar mechanism.\r\n\r\nThe essence of requiring control over the private key and its\r\ndemonstration through a cryptographic operation\r\n(e.g., signing a challenge or a token) is to ensure that the entity in\r\npossession of the Credential can execute actions exclusively reserved\r\nfor the legitimate subject. The dual-layered approach of requiring both\r\npossession of the Credential and control over the corresponding private\r\nkey indeed reinforces the security and integrity of the status assertion\r\nprocess. It also ensures that the entity requesting a Status Attestation\r\nis indeed the same entity to which the Credential was originally issued,\r\naffirming the authenticity and rightful possession of the Credential.",
      "createdAt": "2024-05-17T13:08:41Z",
      "updatedAt": "2024-05-25T14:43:29Z",
      "closedAt": "2024-05-25T14:43:28Z",
      "comments": [
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "Resolved by https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/55",
          "createdAt": "2024-05-25T14:43:28Z",
          "updatedAt": "2024-05-25T14:43:28Z"
        }
      ]
    },
    {
      "number": 49,
      "id": "I_kwDOK4XJ0s6JX7WD",
      "title": "is there interest in suspension, revocation or other dynamic state? see https://w3c.github.io/vc-bitstring-status-list/#example-example-statuslistcredential-using-more-complex-entries",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/issues/49",
      "state": "CLOSED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "is there interest in suspension, revocation or other dynamic state? see https://w3c.github.io/vc-bitstring-status-list/#example-example-statuslistcredential-using-more-complex-entries\r\n\r\nSome parties have use cases that include dynamic state that is an enumeration instead of a boolean.\r\n\r\n_Originally posted by @OR13 in https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/37#discussion_r1605537791_\r\n            ",
      "createdAt": "2024-05-19T19:35:00Z",
      "updatedAt": "2024-05-25T14:44:22Z",
      "closedAt": "2024-05-25T14:44:22Z",
      "comments": [
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "This discussion is moved to #60  ",
          "createdAt": "2024-05-25T14:44:22Z",
          "updatedAt": "2024-05-25T14:44:22Z"
        }
      ]
    },
    {
      "number": 50,
      "id": "I_kwDOK4XJ0s6JZ0Pi",
      "title": "Move all the comparison with Status List in an issue and remove them from the specs",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/issues/50",
      "state": "OPEN",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [
        "peppelinux"
      ],
      "labels": [],
      "body": "All those comparisons will be held in this thread unless an informational RFC will be created about both the status lists and the status assertions",
      "createdAt": "2024-05-20T06:53:44Z",
      "updatedAt": "2024-05-24T13:07:32Z",
      "closedAt": null,
      "comments": [
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "OAuth Status Lists [@!I-D.looker-oauth-jwt-cwt-status-list] are suitable\r\nfor specific scenarios, especially when the Verifier needs to verify the\r\nstatus of a Digital Credential at a later time after the User has presented the\r\nDigital Credential.\r\n\r\n\r\nIn scenarios where the Verifier, Credential Issuer, and OAuth Status List\r\nProvider are all part of the same domain or operate within a context where\r\na high level of trust exists between them and the End-User, the OAuth\r\nStatus List is the optimal solution; while there might be other cases\r\nwhere the OAuth Status List facilitates the exposure to the following\r\nprivacy risks:\r\n\r\n- An OAuth Status List Provider might know the association between a specific\r\nstatus list and a Credential Issuer, especially if the latter issues a\r\nsingle type of Digital Credential. This could inadvertently reveal the\r\nOAusth Status List Provider information about how a Digital Credential\r\ncorresponds to a status list.\r\n- A Verifier retrieves an OAuth Status List by establishing a TCP/IP connection\r\nwith an OAuth Status List Provider. This allows the OAuth Status List Provider to\r\nobtain the IP address of the Verifier and potentially link it to a specific\r\nDigital Credential type and Credential Issuer associated with that OAuth Status List.\r\nA malicious OAuth Status List Provider could use internet diagnostic tools, such as Whois\r\nor GeoIP lookup, to gather additional information about the Verifier.\r\nThis could inadvertently disclose to the OAuth Status List Provider which\r\nDigital Credential the requester is using and from which Credential Issuer,\r\ninformation that should remain confidential.\r\n\r\nStatus Assertions differ significantly from OAuth Status Lists in several ways:\r\n\r\n1. **Privacy**: Status Assertions are designed to be privacy-preserving.\r\nVerifier exchanges the Status Assertions directly with the Holder,\r\nnot requiring the Verifier to gather any additional information\r\nfrom third-party entities. Once a Status Assertion is issued,\r\nit can be verified without any further\r\ncommunication with the Credential Issuer or any other party,\r\nthus preventing potential privacy leaks.\r\n\r\n2. **Static Verification**: Status Assertions are designed to be\r\nstatically provided to Verifiers by Wallet Instance.\r\n\r\n3. **Digital Credentials Formats**: Status Assertions are agnostic from the\r\nDigital Credential format to which they are bound.\r\n\r\n4. **Trust Model**: Status Assertions operate under a model where\r\nthe Verifier trusts the Credential Issuer to provide accurate status information,\r\nwhile the OAuth Status Lists operate under a model where the Verifier\r\ntrusts the Status List Provider to maintain an accurate and up-to-date\r\nlist of statuses.\r\n\r\n5. **Offline flow**: OAuth Status List can be accessed by a Verifier when\r\nan internet connection is present. At the same time,\r\nOAuth Status List defines\r\nhow to download an entire Status List or a Status List Token.\r\nIn the Status List Token, the `status_list` and `sub` members are mandatory.\r\nThey provide the URL and the index of the revocation entry for the Digital Credential,\r\nenabling a Verifier to check the status of the Digital Credential\r\nwhen a broadband connection becomes available.\r\nEven if similar to\r\nthe OAuth Status List Token, the Status Assertions enable the User to\r\npersistently use their preexistent Digital Credentials,\r\nwithout disclosing a status URL or any remote reference to it, as long as\r\nthe linked Status Assertion is available and presented to the\r\nVerifier, and not expired.\r\n\r\n6. **Real-time validation**: OAuth Status Lists provide the possibility\r\nto do real-time validation of the Digital Credential status. To support\r\nthe real-time status validation use cases, a Wallet MAY implement strategy\r\nto request a new Status Assertion before sending it to the Verifier.",
          "createdAt": "2024-05-20T08:33:19Z",
          "updatedAt": "2024-05-20T08:33:19Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "other points: \r\n\r\n- the bitstring status list hugely increases over time and cannot be reduced, untill all the block will be free, even when the related credential are expired. this creates huge impacts within an it infrastructure\r\n\r\n- the Status List URL mixed with the index uniquely identify the credential, representing a sort of super-cookie\r\n\r\n",
          "createdAt": "2024-05-24T12:59:19Z",
          "updatedAt": "2024-05-24T12:59:19Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "- communicating the list by the holder (stapling) also forces the holder to disclose new status for credentials the verifier has previously seen or might see in the future",
          "createdAt": "2024-05-24T13:07:31Z",
          "updatedAt": "2024-05-24T13:07:31Z"
        }
      ]
    },
    {
      "number": 52,
      "id": "I_kwDOK4XJ0s6Jc1tA",
      "title": "Align Terminology with OAuth",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/issues/52",
      "state": "CLOSED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "peppelinux",
        "SaraConsoliACN"
      ],
      "labels": [],
      "body": "Where possible, we should align terms, especially regarding \"wallet and client\".\r\n\r\nOriginal comment :\r\n\r\nhttps://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/51/files#r1606667394",
      "createdAt": "2024-05-20T13:45:28Z",
      "updatedAt": "2024-05-22T12:32:17Z",
      "closedAt": "2024-05-22T12:32:16Z",
      "comments": [
        {
          "author": "SaraConsoliACN",
          "authorAssociation": "COLLABORATOR",
          "body": "The PR that aims to resolve, even if partially, this issue is: ~https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/54~ https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/51/files",
          "createdAt": "2024-05-21T13:32:42Z",
          "updatedAt": "2024-05-22T12:31:36Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "Resolved by https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/51/files",
          "createdAt": "2024-05-22T12:32:16Z",
          "updatedAt": "2024-05-22T12:32:16Z"
        }
      ]
    },
    {
      "number": 57,
      "id": "I_kwDOK4XJ0s6J3r6H",
      "title": "Status Asssertion Error object needs to be protected",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/issues/57",
      "state": "CLOSED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "I wonder why the error needs to be protected... why not just use https://datatracker.ietf.org/doc/html/rfc7807 ?\r\n\r\n_Originally posted by @OR13 in https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/54#discussion_r1609902950_\r\n            ",
      "createdAt": "2024-05-23T14:28:08Z",
      "updatedAt": "2024-05-25T14:41:29Z",
      "closedAt": "2024-05-25T14:41:29Z",
      "comments": [
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "Resolved by https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/53/files#diff-6018989306b8996e79d471eb123fc3b59796d1635384b6faac8cdb36cd5f49ccR444",
          "createdAt": "2024-05-25T14:41:29Z",
          "updatedAt": "2024-05-25T14:41:29Z"
        }
      ]
    },
    {
      "number": 60,
      "id": "I_kwDOK4XJ0s6KGYiG",
      "title": "[Requirements] Multiple status assertion for a single credential",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/issues/60",
      "state": "OPEN",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "I might leave off the validity alignment that's implied in the current requirements section about the validity of the assertion and the validity of the credential, since there could be subject to different verifier policies.... There might be multiple status assertion for a single credential, and a policy would accept m of n.\r\n\r\n_Originally posted by @OR13 in https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/58#discussion_r1614101016_\r\n            ",
      "createdAt": "2024-05-25T10:57:24Z",
      "updatedAt": "2024-05-25T10:57:24Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 62,
      "id": "I_kwDOK4XJ0s6KG1pv",
      "title": "Status Assertion Error Audience",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/issues/62",
      "state": "CLOSED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [
        "peppelinux"
      ],
      "labels": [],
      "body": "the status assertion error doesn't have the verifier as audience but only the client that has requested it. I should say this. Therefore it is not usable during a presentation\r\n",
      "createdAt": "2024-05-25T14:08:28Z",
      "updatedAt": "2024-06-10T20:03:36Z",
      "closedAt": "2024-06-10T20:03:36Z",
      "comments": []
    },
    {
      "number": 64,
      "id": "I_kwDOK4XJ0s6Lwr5L",
      "title": "editorial: Missing defined term Verifiable Presentations",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/issues/64",
      "state": "CLOSED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "The term \"Verifiable Presentation\" is used in the text without any definition or references to external docs where it is defined.",
      "createdAt": "2024-06-10T20:45:23Z",
      "updatedAt": "2024-06-12T07:49:36Z",
      "closedAt": "2024-06-12T07:49:36Z",
      "comments": [
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "Resolved by https://github.com/peppelinux/draft-demarco-oauth-status-assertions/pull/65/files#diff-5d020e30744d84333706d7fc81458a1eb63049ac91ac32b39e00d669e9873ae2R115",
          "createdAt": "2024-06-10T21:16:51Z",
          "updatedAt": "2024-06-10T21:16:51Z"
        }
      ]
    },
    {
      "number": 66,
      "id": "I_kwDOK4XJ0s6L1umE",
      "title": "credential_hash within the status.status_assertion",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/issues/66",
      "state": "OPEN",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [
        "peppelinux"
      ],
      "labels": [
        "invalid"
      ],
      "body": "to simplify the implementation we may think to add the credential_hash directly in the status object representing the support of status assertion\r\n\r\nthis would avoid the calculation of the hash by the wallet instance that may only validate the computed hash\r\n\r\n\r\n````\r\n{\r\n    \"vct\": \"https://credentials.example.com/identity_credential\",\r\n    \"given_name\": \"John\",\r\n    \"family_name\": \"Doe\",\r\n    \"email\": \"johndoe@example.com\",\r\n    \"phone_number\": \"+1-202-555-0101\",\r\n    \"address\": {\r\n      \"street_address\": \"123 Main St\",\r\n      \"locality\": \"Anytown\",\r\n      \"region\": \"Anystate\",\r\n      \"country\": \"US\"\r\n    },\r\n    \"birthdate\": \"1940-01-01\",\r\n    \"is_over_18\": true,\r\n    \"is_over_21\": true,\r\n    \"is_over_65\": true,\r\n    \"status\": {\r\n       \"status_assertion\": {\r\n           \"credential_hash_alg\": \"sha-256\",\r\n           \"credential_hash\": ..........,\r\n       }\r\n    }\r\n   }\r\n````",
      "createdAt": "2024-06-11T11:00:20Z",
      "updatedAt": "2024-06-11T13:21:58Z",
      "closedAt": null,
      "comments": [
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "as discussed with @OR13 this cannot be done and this reminds us why we didn't make it\r\n\r\nwe cannot evaluate an hash and put its value about something that is contained in the payload where the hash must be evaluated from\r\n\r\na circular dependency breaks the approach",
          "createdAt": "2024-06-11T13:21:52Z",
          "updatedAt": "2024-06-11T13:21:52Z"
        }
      ]
    },
    {
      "number": 68,
      "id": "I_kwDOK4XJ0s6L13-q",
      "title": "why cnf is required in the status assertion object?",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/issues/68",
      "state": "OPEN",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [
        "peppelinux"
      ],
      "labels": [
        "under-discussion"
      ],
      "body": "Clarify the value and the requirement of having cnf.jwk within the status assertion.\r\n\r\nif any, remove cnf from the data schema",
      "createdAt": "2024-06-11T11:19:25Z",
      "updatedAt": "2024-06-12T07:51:32Z",
      "closedAt": null,
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "The only reason I see for keeping `cnf` in the status assertion, is if the holder wants to prove they have a status, without revealing the credential it is for... if the `cnf` is in the credential, and the credential includes status, a verifier should reject the credential without confirmation or status.",
          "createdAt": "2024-06-12T00:35:44Z",
          "updatedAt": "2024-06-12T00:35:44Z"
        }
      ]
    },
    {
      "number": 69,
      "id": "I_kwDOK4XJ0s6L27Ip",
      "title": "Sequence Diagram",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/issues/69",
      "state": "OPEN",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "documentation"
      ],
      "body": "```mermaid\r\nsequenceDiagram\r\n    Issuer-->>Holder: (credential issuance out of scope)\r\n    Holder->>Issuer: application/status-assertion-request+jwt\r\n    Issuer ->> Issuer : Status Check\r\n    Issuer ->> Holder: application/status-assertion+jwt\r\n    Holder -->> Verifier: (credential presentation out of scope)\r\n```\r\n\r\n[editable-link](https://mermaid.live/edit#pako:eNp9UTtPxDAM_iuWJxCt2DPcAgMMTCcxoCxW4nLh2iTnOELodP-dtFXFSyLTJ-d7-HFGlzyjwcKnytHxfaBXoclGaO-xlMrS97vdQxo9i4ErJ-w5aqARQvulJoFUFdIAxaXM16ty5TfhamGAch6DIw0p3hYlraWnUljmQi9zeNGbt3f9HgxNv0ED-0UFdwd2xz-srb__Yr7sVzbMg8EzSxjC79mycGlwMfo5H3Y4sUwUfNvaefazqAee2KJp0JMcLdp4aTyqmvYf0aFRqdxhzZ502zCagcbSquyDJnlaz7Bco8NM8SWljXP5BBcrkiI)",
      "createdAt": "2024-06-11T13:23:48Z",
      "updatedAt": "2024-06-12T00:02:07Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 70,
      "id": "I_kwDOK4XJ0s6L7J2U",
      "title": "Detailed Validity Periods",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/issues/70",
      "state": "OPEN",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "pr-ready"
      ],
      "body": "Perhaps the biggest challenge with multiple credential / assertion presentations is managing overlapping, or disjoint, or unbounded validity periods.\r\n\r\nFor each signed object, the following fields can be present  `iat`, `nbf`, `exp`.\r\n\r\nThese fields are typically optional, so by default they could remain optional.\r\n\r\nHowever we currently have normative language that attempts to align them and constrain them, for example that a status should not be issued before a credential, or that a status should not expire after a credential expires.\r\n\r\nThere are cases where a credential might be issues, and then status used to incrementally extend its expiration, for example:\r\n\r\nvc: { iat: 0 }, sa: { iat: 1, exp: 2 } ... sa: { iat: 3, exp: 5 } ....\r\n\r\nThere are cases where a status can only be requested for the validity period of the credential:\r\n\r\nvc: { iat: 0, exp: 10 }, sa: { iat: 1, exp: 2 } ... sa: { iat: 3, exp: 5 } .... (will never have exp greater than 10)\r\n\r\nThere are cases where issuance time and activation time are not the same (like post data checks):\r\n\r\nvc: { iat: 0, nbf: 5, exp: 10 }, sa: { iat: 1, exp: 2 }  (appears valid, but nbf 5 is after exp 2, so this status will not be valid)",
      "createdAt": "2024-06-12T00:44:55Z",
      "updatedAt": "2024-07-16T10:03:51Z",
      "closedAt": null,
      "comments": [
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "This [PR](https://github.com/peppelinux/draft-demarco-oauth-status-assertions/pull/61) closes this issue",
          "createdAt": "2024-07-16T10:03:36Z",
          "updatedAt": "2024-07-16T10:03:36Z"
        }
      ]
    },
    {
      "number": 71,
      "id": "I_kwDOK4XJ0s6L7OZF",
      "title": "Not all credentials expire.",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/issues/71",
      "state": "OPEN",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Not all credentials expire.\r\n\r\nI think we should provide examples for all cases of vc + sa with `iat` and `exp`.\r\n\r\nThere is also `nbf` which could interact negatively with `iat` and `exp`.\r\n\r\n_Originally posted by @OR13 in https://github.com/peppelinux/draft-demarco-oauth-status-assertions/pull/65#discussion_r1635625370_\r\n            ",
      "createdAt": "2024-06-12T01:08:58Z",
      "updatedAt": "2024-07-16T10:03:00Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 72,
      "id": "I_kwDOK4XJ0s6L7O3l",
      "title": "CBOR structure",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/issues/72",
      "state": "OPEN",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "in CBOR, this structure might be a better solution for this:\r\n\r\n```\r\nCOSE_X509 = bstr / [ 2*certs: bstr ]\r\nCOSE_CertHash = [ hashAlg: (int / tstr), hashValue: bstr ]\r\n```\r\n\r\nSee https://datatracker.ietf.org/doc/html/rfc9360\r\n\r\n_Originally posted by @OR13 in https://github.com/peppelinux/draft-demarco-oauth-status-assertions/pull/65#discussion_r1635626847_\r\n            ",
      "createdAt": "2024-06-12T01:11:21Z",
      "updatedAt": "2024-06-12T02:51:02Z",
      "closedAt": null,
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "currently the draft would require us to register 2 new CWT claims for credential_hash_alg, and credential_hash.\r\n\r\n\r\nbut in CBOR, you can register a single claim like:\r\n\r\ncredential_hash, and set it to be an array where the first element is a COSE alg for a hash, like -16 for sha-256, and the second element is the hash value.\r\n\r\nin CDDL:\r\n\r\n```\r\nCWT_Claims = {\r\n  &(iss: 1) => tstr\r\n  &(sub: 2) => tstr\r\n  &(credential_hash: TBD) => [ hashAlg: (int / tstr), hashValue: bstr ]\r\n  * int => any\r\n}\r\n\r\n```",
          "createdAt": "2024-06-12T02:51:02Z",
          "updatedAt": "2024-06-12T02:51:02Z"
        }
      ]
    },
    {
      "number": 73,
      "id": "I_kwDOK4XJ0s6L7Ptr",
      "title": "More explaination about the requirement about revocations verification",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/issues/73",
      "state": "OPEN",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [
        "ietf-comments"
      ],
      "body": "The current document is directly focusing on a technical mechanism without telling what the problems to be solved are.\r\n\r\nthank to Denis.",
      "createdAt": "2024-06-12T01:15:06Z",
      "updatedAt": "2024-07-16T10:02:29Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 74,
      "id": "I_kwDOK4XJ0s6L7Rw0",
      "title": "[Draft Name Change] OAuth vs SPICE Status Assertions",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/issues/74",
      "state": "OPEN",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [
        "ietf-comments"
      ],
      "body": "The current title of this draft is \"OAuth Status Assertions\".\r\n\r\nThe content of the draft is not specific to OAuth specifically. However, Status Assertions are specific to the use of Digital Credentials.\r\n\r\nIf a SPICE WG is created by the IESG (which should be known at the end of this week), the title of this document would become:\r\n\r\n    \"SPICE Status Assertions\". \r\n\r\nMore seriously, its title should rather be \"Credential Status Assertions\" or \"Digital Credential Status Assertions\".\r\n\r\n\r\nthanks to Denis.",
      "createdAt": "2024-06-12T01:24:50Z",
      "updatedAt": "2024-07-16T10:02:44Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 75,
      "id": "I_kwDOK4XJ0s6L7TWh",
      "title": "Unlinkability and Reusability of Status Assertions",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/issues/75",
      "state": "OPEN",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [
        "ietf-comments"
      ],
      "body": "Always Denis:\r\n\r\n\r\n    Section 15.3. Unlinkability and Reusability of Status Assertions, the text states:\r\n\r\n        This design is pivotal in ensuring unlinkability between Verifiers, where actions taken by one Verifier\r\n        cannot be correlated or linked to actions taken by another. \r\n\r\n    This sentence sounds strange. An \"action taken by one Verifier\" will be invisible to another Verifier unless the network is unprotected,\r\n    but it is assumed that TLS is being used. What is the problem for correlating \"actions\" taken by a Verifier ? This sentence would need to be reconsidered.\r\n\r\n\r\nit says that since there are no fixed audiences in the status assertions, a verifier obtainign a status assertion cannot know if that assertion was already used with another verifier or any information usefull to track its usage and or its audience\r\n \r\n\r\n    However, \"unlinkability between Verifiers\" usually means unlinkability between *colluding* Verifiers that shall not be able to know that a same end-user\r\n    made an access to a protected resource.\r\n\r\n    Using SD-JWT, such property can be supported if a SD-JWT are used only once. This should be mentioned in this section.\r\n\r\n\r\nthe same with the status assertions\r\n ",
      "createdAt": "2024-06-12T01:31:00Z",
      "updatedAt": "2024-07-16T10:02:36Z",
      "closedAt": null,
      "comments": [
        {
          "author": "Denisthemalice",
          "authorAssociation": "NONE",
          "body": "> \"the same with the status assertions\". \r\n\r\nThis is correct, but this should be mentioned in the draft and it is not mentioned",
          "createdAt": "2024-06-12T10:45:43Z",
          "updatedAt": "2024-06-12T10:45:43Z"
        }
      ]
    },
    {
      "number": 81,
      "id": "I_kwDOK4XJ0s6RDNDZ",
      "title": "Use Status List IANA Registry ",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/issues/81",
      "state": "OPEN",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Add registry entries for valid and invalid.\n\nEnable assertion to include those values along with potential credentials type specific fresh information.",
      "createdAt": "2024-07-27T16:01:20Z",
      "updatedAt": "2024-07-27T16:01:20Z",
      "closedAt": null,
      "comments": []
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "PR_kwDOK4XJ0s5hyqCy",
      "title": "Editorial Revision",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/pull/1",
      "state": "MERGED",
      "author": "asharif1990",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-12-12T13:11:45Z",
      "updatedAt": "2023-12-12T15:42:31Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "baseRefName": "main",
      "baseRefOid": "7d5de6ace0457c8275377a97406550aa5ddc88c5",
      "headRepository": "asharif1990/draft-demarco-status-attestations",
      "headRefName": "revision",
      "headRefOid": "c88a6f0e1b7056ac6aaeea596377f709a490c1f2",
      "closedAt": "2023-12-12T15:42:31Z",
      "mergedAt": "2023-12-12T15:42:31Z",
      "mergedBy": "peppelinux",
      "mergeCommit": {
        "oid": "8c668103f2c6fc0aad9268948e07cdd62d9da07f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s5p8csk",
          "commit": {
            "abbreviatedOid": "9059880"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2023-12-12T13:20:04Z",
          "updatedAt": "2023-12-12T13:22:37Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "@asharif1990 I used the defined terms after their definition, withing the dedicated section.\r\n\r\nAbstract and introduction sections doesn't define nothing\r\n\r\nI'm available to merge these but I'd like to ask you to get informed from other authors about this before merging",
              "createdAt": "2023-12-12T13:20:04Z",
              "updatedAt": "2023-12-12T13:22:37Z"
            },
            {
              "originalPosition": 80,
              "body": "here we don't have the definition of Digital Credentials for example",
              "createdAt": "2023-12-12T13:20:43Z",
              "updatedAt": "2023-12-12T13:22:37Z"
            },
            {
              "originalPosition": 346,
              "body": "it is a SHOULD since a RP may check the revocation or not, depending by different factors.\r\n\r\nthere are some credentials that even if expired doesn't mean that are not usable, eg: age over.\r\n\r\nthen for RP's viewpoint it is a SHOULD and not a MUST",
              "createdAt": "2023-12-12T13:22:25Z",
              "updatedAt": "2023-12-12T13:22:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5p8ec3",
          "commit": {
            "abbreviatedOid": "9059880"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2023-12-12T13:23:42Z",
          "updatedAt": "2023-12-12T13:26:20Z",
          "comments": [
            {
              "originalPosition": 170,
              "body": "the MUST is listed in each requirement, there may be some requirement in the future with SHOULD. That's why I prefer to use the normative language within each point",
              "createdAt": "2023-12-12T13:23:43Z",
              "updatedAt": "2023-12-12T13:26:20Z"
            },
            {
              "originalPosition": 236,
              "body": "```suggestion\r\n- The Credential Issuer MUST verify the signature of the `credential_pop` object using\r\n```",
              "createdAt": "2023-12-12T13:24:14Z",
              "updatedAt": "2023-12-12T13:26:20Z"
            },
            {
              "originalPosition": 263,
              "body": "`MUST be equal to JWK thumbprint of the key in `cnf` Claim of Wallet Instance Attestation`\r\n\r\nthis is the italian impl profile, not of interest in the IETF OAuth WG, please remove. IT is also not compatible with the DE approach, while we have achieved a compromise that I want to respect in any place.",
              "createdAt": "2023-12-12T13:25:10Z",
              "updatedAt": "2023-12-12T13:26:20Z"
            },
            {
              "originalPosition": 263,
              "body": "```suggestion\r\n| **iss** | Wallet identifier. | {{RFC9126}}, {{RFC7519}} |\r\n```",
              "createdAt": "2023-12-12T13:25:27Z",
              "updatedAt": "2023-12-12T13:26:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5p80Cw",
          "commit": {
            "abbreviatedOid": "9059880"
          },
          "author": "asharif1990",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-12T14:03:48Z",
          "updatedAt": "2023-12-12T14:03:48Z",
          "comments": [
            {
              "originalPosition": 346,
              "body": "Okay, this sounds reasonable to me. However, somehow we should include this inside the draft, otherwise having should would be strange if you agree. ",
              "createdAt": "2023-12-12T14:03:48Z",
              "updatedAt": "2023-12-12T14:03:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5p9CfR",
          "commit": {
            "abbreviatedOid": "9059880"
          },
          "author": "asharif1990",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-12T14:30:10Z",
          "updatedAt": "2023-12-12T14:30:11Z",
          "comments": [
            {
              "originalPosition": 170,
              "body": "okay. then probably, I will re-write it in a more natural way such as: \"The general requirements for the implementation of  Status Attestation are listed in this section.\"",
              "createdAt": "2023-12-12T14:30:10Z",
              "updatedAt": "2023-12-12T14:30:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5p9GEu",
          "commit": {
            "abbreviatedOid": "9059880"
          },
          "author": "asharif1990",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-12T14:36:28Z",
          "updatedAt": "2023-12-12T14:36:29Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "Okay, you are right. In the abstract and intro, it is possible to avoid them. I wasn't familiar with IETF style. we can avoid the capitalized terms in the intro and abstract then",
              "createdAt": "2023-12-12T14:36:29Z",
              "updatedAt": "2023-12-12T14:36:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5p94mM",
          "commit": {
            "abbreviatedOid": "95ccedb"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-12T15:41:57Z",
          "updatedAt": "2023-12-12T15:41:57Z",
          "comments": [
            {
              "originalPosition": 349,
              "body": "```suggestion\r\n- check the presence of `status.status_attestation` in the Digital Credential. If true, the Verifier SHOULD:\r\n```",
              "createdAt": "2023-12-12T15:41:57Z",
              "updatedAt": "2023-12-12T15:41:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5p95Ro",
          "commit": {
            "abbreviatedOid": "c88a6f0"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-12-12T15:42:23Z",
          "updatedAt": "2023-12-12T15:42:23Z",
          "comments": []
        }
      ]
    },
    {
      "number": 2,
      "id": "PR_kwDOK4XJ0s5ls8PL",
      "title": "added Orie as co-author",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/pull/2",
      "state": "MERGED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-02-01T13:36:24Z",
      "updatedAt": "2024-02-01T19:54:14Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "baseRefName": "main",
      "baseRefOid": "3202bedcfab318cf186432117e2ba8dec58f1d5a",
      "headRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "headRefName": "orie",
      "headRefOid": "c6223b86147b3b9ff5badd6b7a5c961de3459e93",
      "closedAt": "2024-02-01T19:54:13Z",
      "mergedAt": "2024-02-01T19:54:13Z",
      "mergedBy": "peppelinux",
      "mergeCommit": {
        "oid": "70bc694739ca1b7b7d5db85a3ce5a83e346cb9e5"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s5uqQVo",
          "commit": {
            "abbreviatedOid": "c6223b8"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-01T13:59:51Z",
          "updatedAt": "2024-02-01T13:59:51Z",
          "comments": []
        }
      ]
    },
    {
      "number": 6,
      "id": "PR_kwDOK4XJ0s5msEjT",
      "title": "fix: credential hash in the credential_pop",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/pull/6",
      "state": "MERGED",
      "author": "fmarino-ipzs",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This PR closes #3 \r\n",
      "createdAt": "2024-02-12T22:44:00Z",
      "updatedAt": "2024-02-23T12:18:39Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "baseRefName": "dev",
      "baseRefOid": "673a8e16ce50cc4ef409721c70279dc87db80446",
      "headRepository": "fmarino-ipzs/draft-demarco-oauth-status-attestations",
      "headRefName": "credential-pop",
      "headRefOid": "71f5b3aea48af90608f764dbd8cd4d24ec4a95ef",
      "closedAt": "2024-02-23T12:18:39Z",
      "mergedAt": "2024-02-23T12:18:39Z",
      "mergedBy": "peppelinux",
      "mergeCommit": {
        "oid": "6e5fae6800ead1fc1a49cf80de9327a74a3a2fb9"
      },
      "comments": [
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "I merge on another branch to continue working on this PR and then I reopen the PR",
          "createdAt": "2024-02-23T12:11:39Z",
          "updatedAt": "2024-02-23T12:11:39Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s5v2SmY",
          "commit": {
            "abbreviatedOid": "5315870"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-12T22:46:19Z",
          "updatedAt": "2024-02-12T22:46:19Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "@peppelinux probably we could remove the credential_format. \r\nWDYT?",
              "createdAt": "2024-02-12T22:46:19Z",
              "updatedAt": "2024-02-12T22:46:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5v7yNT",
          "commit": {
            "abbreviatedOid": "5315870"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T13:30:32Z",
          "updatedAt": "2024-02-13T13:30:32Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "yes, I'm on it\r\n",
              "createdAt": "2024-02-13T13:30:32Z",
              "updatedAt": "2024-02-13T13:30:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5v7z9h",
          "commit": {
            "abbreviatedOid": "5315870"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T13:33:00Z",
          "updatedAt": "2024-02-13T13:33:00Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-02-13T13:33:00Z",
              "updatedAt": "2024-02-13T13:33:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5v70m7",
          "commit": {
            "abbreviatedOid": "5315870"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T13:33:48Z",
          "updatedAt": "2024-02-13T13:33:48Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-02-13T13:33:48Z",
              "updatedAt": "2024-02-13T13:33:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5v71Yq",
          "commit": {
            "abbreviatedOid": "5315870"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "please merge my suggestion",
          "createdAt": "2024-02-13T13:35:25Z",
          "updatedAt": "2024-02-13T13:35:25Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s5v8Ids",
          "commit": {
            "abbreviatedOid": "5315870"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T14:03:55Z",
          "updatedAt": "2024-02-13T14:03:55Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "lets use the IANA named hash registry, and make sha-256 mandatory to implement.\r\n\r\nhttps://www.iana.org/assignments/named-information/named-information.xhtml#hash-alg\r\n\r\nAlternatively, we can use the cose registry which includes hash algorithms:\r\n\r\nhttps://www.iana.org/assignments/cose/cose.xhtml#algorithms\r\n\r\nthe \"COSE\" style for this kind of thing would be:\r\n\r\n```\r\ncredential_hash: [alg, hash]\r\n```",
              "createdAt": "2024-02-13T14:03:55Z",
              "updatedAt": "2024-02-13T14:03:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5v8JQs",
          "commit": {
            "abbreviatedOid": "5315870"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T14:05:11Z",
          "updatedAt": "2024-02-13T14:05:11Z",
          "comments": [
            {
              "originalPosition": 49,
              "body": "SD-JWT uses the IANA registry: https://datatracker.ietf.org/doc/html/draft-ietf-oauth-selective-disclosure-jwt-07#section-5.1.1",
              "createdAt": "2024-02-13T14:05:11Z",
              "updatedAt": "2024-02-13T14:05:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5v83FX",
          "commit": {
            "abbreviatedOid": "5315870"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T15:13:33Z",
          "updatedAt": "2024-02-13T15:13:33Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "seems like the `typ` or `cty` claim might be used here as well.",
              "createdAt": "2024-02-13T15:13:33Z",
              "updatedAt": "2024-02-13T15:13:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5v9m3F",
          "commit": {
            "abbreviatedOid": "5315870"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T16:23:33Z",
          "updatedAt": "2024-02-13T16:23:33Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "I don't see how having these claims would be useful. How would the Credential Issuer use this information?",
              "createdAt": "2024-02-13T16:23:33Z",
              "updatedAt": "2024-02-13T16:23:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5v9sRM",
          "commit": {
            "abbreviatedOid": "5315870"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T16:32:33Z",
          "updatedAt": "2024-02-13T16:32:33Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "Regarding the claim name I prefer the first option. \r\nWith regard to the sha-256, I suggest to make the claim OPTIONAL and if omitted we could say that the default value is sha-256. WDYT?",
              "createdAt": "2024-02-13T16:32:33Z",
              "updatedAt": "2024-02-13T16:32:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5v90TG",
          "commit": {
            "abbreviatedOid": "5315870"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T16:45:26Z",
          "updatedAt": "2024-02-13T16:45:26Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "yes, let's reduce the information about the payload of the credential for an augmented privacy",
              "createdAt": "2024-02-13T16:45:26Z",
              "updatedAt": "2024-02-13T16:45:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5v91Ix",
          "commit": {
            "abbreviatedOid": "5315870"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T16:47:04Z",
          "updatedAt": "2024-02-13T16:47:05Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "I would make it REQUIRED since I love thing explicit. If a day SHA-256 would be vulnerable and another specification woudl extend this one bringin an updated set of algs, the implementation would then always specify the alg making this aspect not ambiguous",
              "createdAt": "2024-02-13T16:47:04Z",
              "updatedAt": "2024-02-13T16:47:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5xHNwW",
          "commit": {
            "abbreviatedOid": "5315870"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-23T09:39:22Z",
          "updatedAt": "2024-02-23T09:39:23Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "@OR13 I have asked to remove the credential format, since we give only the credential hash without disclosing any information about the credential",
              "createdAt": "2024-02-23T09:39:22Z",
              "updatedAt": "2024-02-23T09:39:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5xHO5N",
          "commit": {
            "abbreviatedOid": "5315870"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-23T09:41:59Z",
          "updatedAt": "2024-02-23T09:41:59Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "@OR13 I moved your comment in a [separate issue](https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/16), to unblock this PR related to the hash \r\n\r\nA PR wil be create asap, when this PR will be merged\r\n\r\n",
              "createdAt": "2024-02-23T09:41:59Z",
              "updatedAt": "2024-02-23T09:41:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5xHPMu",
          "commit": {
            "abbreviatedOid": "5315870"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-23T09:42:39Z",
          "updatedAt": "2024-02-23T09:42:39Z",
          "comments": [
            {
              "originalPosition": 49,
              "body": "moved in the issue https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/16",
              "createdAt": "2024-02-23T09:42:39Z",
              "updatedAt": "2024-02-23T09:42:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5xH_BU",
          "commit": {
            "abbreviatedOid": "253579b"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-23T11:36:10Z",
          "updatedAt": "2024-02-23T11:36:10Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "```suggestion\r\n| **credential_hash_alg** |  The hash value of a Digital Credential is derived by computing the base64url encoded hash of the Digital Credential. | this specification |\r\n```",
              "createdAt": "2024-02-23T11:36:10Z",
              "updatedAt": "2024-02-23T11:40:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5xH_Gg",
          "commit": {
            "abbreviatedOid": "253579b"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-23T11:36:24Z",
          "updatedAt": "2024-02-23T11:36:24Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "@OR13 WDYT?^",
              "createdAt": "2024-02-23T11:36:24Z",
              "updatedAt": "2024-02-23T11:36:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5xH_PA",
          "commit": {
            "abbreviatedOid": "253579b"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-23T11:36:47Z",
          "updatedAt": "2024-02-23T11:36:47Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nThe request MUST contain the base64url hash value of the Digital Credential, for which the Status Attestation\r\n```",
              "createdAt": "2024-02-23T11:36:47Z",
              "updatedAt": "2024-02-23T11:41:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5xH_ch",
          "commit": {
            "abbreviatedOid": "253579b"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-23T11:37:19Z",
          "updatedAt": "2024-02-23T11:37:19Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "See my change suggestion in the form of comment",
              "createdAt": "2024-02-23T11:37:19Z",
              "updatedAt": "2024-02-23T11:37:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5xIAQC",
          "commit": {
            "abbreviatedOid": "253579b"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-23T11:39:34Z",
          "updatedAt": "2024-02-23T11:39:35Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "```suggestion\r\n- `credential_hash_alg_supported`. REQUIRED. The supported Algorithm used by the Wallet Instance to hash the Digital Credential for which the Status Attestation is requested,  using one of the hash algorithms listed in the [IANA - Named Information Hash Algorithm Registry](https://www.iana.org/assignments/named-information/named-information.xhtml#hash-alg).\r\n```",
              "createdAt": "2024-02-23T11:39:34Z",
              "updatedAt": "2024-02-23T11:39:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5xIAti",
          "commit": {
            "abbreviatedOid": "253579b"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-23T11:40:45Z",
          "updatedAt": "2024-02-23T11:40:45Z",
          "comments": [
            {
              "originalPosition": 60,
              "body": "```suggestion\r\n- `credential_hash_alg`. REQUIRED.  The hash value of a Digital Credential is derived by computing the base64url encoded hash of the Digital Credential using one of the hash algorithms listed in the [IANA - Named Information Hash Algorithm Registry](https://www.iana.org/assignments/named-information/named-information.xhtml#hash-alg). Among the hash algorithms, `sha-256` is recommended and SHOULD be implemented by all systems.\r\n```",
              "createdAt": "2024-02-23T11:40:45Z",
              "updatedAt": "2024-02-23T11:41:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5xIGwK",
          "commit": {
            "abbreviatedOid": "2db2c8b"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-23T11:57:26Z",
          "updatedAt": "2024-02-23T11:57:26Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "```suggestion\r\n| **credential_hash_alg** |  The hash value of a Digital Credential, derived by computing the base64url encoded hash of the Digital Credential. | this specification |\r\n```",
              "createdAt": "2024-02-23T11:57:26Z",
              "updatedAt": "2024-02-23T11:57:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5xIG7g",
          "commit": {
            "abbreviatedOid": "2db2c8b"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-23T11:57:54Z",
          "updatedAt": "2024-02-23T11:57:54Z",
          "comments": [
            {
              "originalPosition": 60,
              "body": "```suggestion\r\n- `credential_hash_alg`. REQUIRED. The hash value of a Digital Credential is derived by computing the base64url encoded hash of the Digital Credential using one of the hash algorithms listed in the [IANA - Named Information Hash Algorithm Registry](https://www.iana.org/assignments/named-information/named-information.xhtml#hash-alg). Among the hash algorithms, `sha-256` is recommended and SHOULD be implemented by all systems.\r\n```",
              "createdAt": "2024-02-23T11:57:54Z",
              "updatedAt": "2024-02-23T11:57:54Z"
            }
          ]
        }
      ]
    },
    {
      "number": 8,
      "id": "PR_kwDOK4XJ0s5mwRvT",
      "title": "OCSP stapling consideration added, distinc figures 1 regarding the flow",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/pull/8",
      "state": "MERGED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "this PR adds text about how this specification brings a similar approach experienced in ocsp stampling\r\n\r\nit also splits the flow repsentation in two distinct flows: issuance and presentation.",
      "createdAt": "2024-02-13T13:44:51Z",
      "updatedAt": "2024-02-14T14:08:46Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "baseRefName": "main",
      "baseRefOid": "650bb023e094b022588e6327cdce8c9c213ac441",
      "headRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "headRefName": "ocsp",
      "headRefOid": "0fb5eeda01022116670c1ed3645ab0af93c9d78f",
      "closedAt": "2024-02-14T14:08:46Z",
      "mergedAt": "2024-02-14T14:08:46Z",
      "mergedBy": "peppelinux",
      "mergeCommit": {
        "oid": "673a8e16ce50cc4ef409721c70279dc87db80446"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s5v83i6",
          "commit": {
            "abbreviatedOid": "0fb5eed"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-13T15:14:13Z",
          "updatedAt": "2024-02-13T15:14:13Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s5wEQd3",
          "commit": {
            "abbreviatedOid": "0fb5eed"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-14T12:33:13Z",
          "updatedAt": "2024-02-14T12:33:13Z",
          "comments": []
        }
      ]
    },
    {
      "number": 9,
      "id": "PR_kwDOK4XJ0s5mwhh1",
      "title": "Privacy Considerations",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/pull/9",
      "state": "MERGED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Resolves https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/4",
      "createdAt": "2024-02-13T14:18:19Z",
      "updatedAt": "2024-02-14T14:08:31Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "baseRefName": "main",
      "baseRefOid": "650bb023e094b022588e6327cdce8c9c213ac441",
      "headRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "headRefName": "priv",
      "headRefOid": "3eb306fa5082d25560975fd89e8a051911f0b147",
      "closedAt": "2024-02-14T14:08:31Z",
      "mergedAt": "2024-02-14T14:08:31Z",
      "mergedBy": "peppelinux",
      "mergeCommit": {
        "oid": "7ee3a052b943bdcc4becb422b2783bbf9987c7ab"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s5v9sJH",
          "commit": {
            "abbreviatedOid": "d34fc3d"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T16:32:26Z",
          "updatedAt": "2024-02-13T16:32:26Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "A hash alone is not proof of possession, imo.\r\n\r\na KBT from a public key in the credential over the hash, and a nonce from the verifier would be POP.",
              "createdAt": "2024-02-13T16:32:26Z",
              "updatedAt": "2024-02-13T16:32:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5v9t3x",
          "commit": {
            "abbreviatedOid": "d34fc3d"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T16:34:06Z",
          "updatedAt": "2024-02-13T16:34:06Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "I'd like to see us move away from \"revocation/ suspension\" and towards generic attested dynamic state... Lots of use cases for status values that are not booleans, or even enums.",
              "createdAt": "2024-02-13T16:34:06Z",
              "updatedAt": "2024-02-13T16:34:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5v9u0P",
          "commit": {
            "abbreviatedOid": "d34fc3d"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T16:35:16Z",
          "updatedAt": "2024-02-13T16:35:17Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "I think this implies Status Attestations are \"single use\" ?",
              "createdAt": "2024-02-13T16:35:17Z",
              "updatedAt": "2024-02-13T16:35:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5v9vlc",
          "commit": {
            "abbreviatedOid": "d34fc3d"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T16:36:17Z",
          "updatedAt": "2024-02-13T16:36:17Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "This is typically called the \"phone home\" problem.",
              "createdAt": "2024-02-13T16:36:17Z",
              "updatedAt": "2024-02-13T16:36:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5v9v07",
          "commit": {
            "abbreviatedOid": "d34fc3d"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T16:36:45Z",
          "updatedAt": "2024-02-13T16:36:46Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "```suggestion\r\nThe Status Attestations are designed around the data minimization principle. Data minimization ensures that only the necessary information required for the scope of attesting the non revocation status of the digital credential. This minimizes the exposure of potentially sensitive data.\r\n```",
              "createdAt": "2024-02-13T16:36:45Z",
              "updatedAt": "2024-02-13T16:36:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5v9wRT",
          "commit": {
            "abbreviatedOid": "d34fc3d"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-13T16:37:37Z",
          "updatedAt": "2024-02-13T16:37:37Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s5v9yP5",
          "commit": {
            "abbreviatedOid": "d34fc3d"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T16:41:28Z",
          "updatedAt": "2024-02-13T16:41:28Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "I wouldn not enter in this and at the same time find legitimate your question.\r\n\r\nThis specification would not prevent a batch issuance of multipel status attestation to be single-use.\r\nAt the same time, in particular for offline interaction, a single attestation would be used for many verifiers",
              "createdAt": "2024-02-13T16:41:28Z",
              "updatedAt": "2024-02-13T16:41:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5v9-vW",
          "commit": {
            "abbreviatedOid": "d34fc3d"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T17:05:06Z",
          "updatedAt": "2024-02-13T17:05:06Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "done",
              "createdAt": "2024-02-13T17:05:06Z",
              "updatedAt": "2024-02-13T17:05:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5v9-zF",
          "commit": {
            "abbreviatedOid": "d34fc3d"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T17:05:14Z",
          "updatedAt": "2024-02-13T17:05:14Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "Done",
              "createdAt": "2024-02-13T17:05:14Z",
              "updatedAt": "2024-02-13T17:05:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5v9-8F",
          "commit": {
            "abbreviatedOid": "d34fc3d"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T17:05:32Z",
          "updatedAt": "2024-02-13T17:05:32Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "I included these considerations, thank you",
              "createdAt": "2024-02-13T17:05:32Z",
              "updatedAt": "2024-02-13T17:05:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5v9_QS",
          "commit": {
            "abbreviatedOid": "d34fc3d"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T17:06:14Z",
          "updatedAt": "2024-02-13T17:06:15Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "I have expanded the text with these consideration to not limit the status attestation to some specific use cases only",
              "createdAt": "2024-02-13T17:06:14Z",
              "updatedAt": "2024-02-13T17:06:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5v-AUE",
          "commit": {
            "abbreviatedOid": "d34fc3d"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T17:08:38Z",
          "updatedAt": "2024-02-13T17:08:38Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "I have mentioned this but without mentioning any nonce provided by the Verifier (for obvious reasons). A jti can do the work but it doesn't seem useful, since the credential hash alone can be a sort of jti\r\n\r\ndynamically provisioning of the nonce could be mentioned if the status would not be used for offline flows, I'd suggest to move this to a separate issue and add some consideration about this aspect within the document",
              "createdAt": "2024-02-13T17:08:38Z",
              "updatedAt": "2024-02-13T17:08:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5v-CWn",
          "commit": {
            "abbreviatedOid": "d34fc3d"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T17:13:10Z",
          "updatedAt": "2024-02-13T17:13:10Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "Filed https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/11",
              "createdAt": "2024-02-13T17:13:10Z",
              "updatedAt": "2024-02-13T17:13:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5v-CuY",
          "commit": {
            "abbreviatedOid": "3eb306f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-13T17:13:58Z",
          "updatedAt": "2024-02-13T17:13:58Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s5wECPC",
          "commit": {
            "abbreviatedOid": "3eb306f"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-14T12:00:41Z",
          "updatedAt": "2024-02-14T12:00:42Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "```suggestion\r\nStatus Attestations are based on a privacy-by-design approach, reflecting a deliberate effort to balance security and privacy needs in the digital credential ecosystem.\r\n```",
              "createdAt": "2024-02-14T12:00:41Z",
              "updatedAt": "2024-02-14T12:00:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5wECVO",
          "commit": {
            "abbreviatedOid": "3eb306f"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-14T12:00:55Z",
          "updatedAt": "2024-02-14T12:00:55Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s5wFEj5",
          "commit": {
            "abbreviatedOid": "3eb306f"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-14T14:08:24Z",
          "updatedAt": "2024-02-14T14:08:24Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "moved to issue",
              "createdAt": "2024-02-14T14:08:24Z",
              "updatedAt": "2024-02-14T14:08:24Z"
            }
          ]
        }
      ]
    },
    {
      "number": 10,
      "id": "PR_kwDOK4XJ0s5mw6rg",
      "title": "feat: error section and added missing todo in the rationale section",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/pull/10",
      "state": "MERGED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Resolves https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/7\r\n\r\nit also adds in the rationale section a reference to the national privacy constraints that justify the requirement satisfied by this specification",
      "createdAt": "2024-02-13T15:09:45Z",
      "updatedAt": "2024-02-14T14:04:10Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "baseRefName": "main",
      "baseRefOid": "650bb023e094b022588e6327cdce8c9c213ac441",
      "headRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "headRefName": "err",
      "headRefOid": "11cf2e347f02683b03de2b494102052684873f7f",
      "closedAt": "2024-02-14T14:04:10Z",
      "mergedAt": "2024-02-14T14:04:10Z",
      "mergedBy": "peppelinux",
      "mergeCommit": {
        "oid": "6efbdf64d993c4cb668508baa94f916594aa5674"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s5v9qqE",
          "commit": {
            "abbreviatedOid": "11cf2e3"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-13T16:30:37Z",
          "updatedAt": "2024-02-13T16:30:37Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s5wD49G",
          "commit": {
            "abbreviatedOid": "11cf2e3"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-14T11:39:14Z",
          "updatedAt": "2024-02-14T11:39:14Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "For the sake of clarity, I explicitly would provide a list of error codes that are useful in this specification. For example, it is not clear how to handle the case of an error response due to a Credential revocation. I don't see a clear error code in the RFC6749 that is clear for this scenario. We could put this in an issue and postpone this discussion if you want.",
              "createdAt": "2024-02-14T11:39:14Z",
              "updatedAt": "2024-02-14T11:39:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5wD6CX",
          "commit": {
            "abbreviatedOid": "11cf2e3"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "It's fine with me, we should only better clarify which are the error codes that make sense in this context, but we can solve this in a future issue. ",
          "createdAt": "2024-02-14T11:41:44Z",
          "updatedAt": "2024-02-14T11:41:44Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s5wE_nt",
          "commit": {
            "abbreviatedOid": "11cf2e3"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-14T14:03:13Z",
          "updatedAt": "2024-02-14T14:03:13Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "in RFC6749 I see invalid_request, invalid_client, unauthorized_client ...",
              "createdAt": "2024-02-14T14:03:13Z",
              "updatedAt": "2024-02-14T14:03:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5wFAYr",
          "commit": {
            "abbreviatedOid": "11cf2e3"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-14T14:03:51Z",
          "updatedAt": "2024-02-14T14:03:51Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "moved to an issue",
              "createdAt": "2024-02-14T14:03:51Z",
              "updatedAt": "2024-02-14T14:03:51Z"
            }
          ]
        }
      ]
    },
    {
      "number": 12,
      "id": "PR_kwDOK4XJ0s5mx0kn",
      "title": "feat: what is PoP, what it can be",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/pull/12",
      "state": "MERGED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "this PR closes https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/11",
      "createdAt": "2024-02-13T17:22:02Z",
      "updatedAt": "2024-02-28T14:08:08Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "baseRefName": "main",
      "baseRefOid": "650bb023e094b022588e6327cdce8c9c213ac441",
      "headRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "headRefName": "pop",
      "headRefOid": "63ce9087351e36f411194a649a0e1b18776f4f73",
      "closedAt": "2024-02-28T14:08:08Z",
      "mergedAt": "2024-02-28T14:08:07Z",
      "mergedBy": "OR13",
      "mergeCommit": {
        "oid": "0962d686df5ffd223a105425b4633f973fe3bd8a"
      },
      "comments": [
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "@fmarino-ipzs This pull request addresses a limitation of the current specification. It currently only works with digital credentials that contain holder key binding.\r\n",
          "createdAt": "2024-02-23T21:39:16Z",
          "updatedAt": "2024-02-23T21:39:16Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s5wER-Q",
          "commit": {
            "abbreviatedOid": "44e2eee"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-14T12:36:58Z",
          "updatedAt": "2024-02-14T12:36:58Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "```suggestion\r\nThe essence of requiring control over the private key and its demonstration through a cryptographic operation (e.g., signing a challenge or a token) is to ensure that the entity in possession of the credential can execute actions exclusively reserved for the legitimate owner. This dual-layered approach not only reinforces the security and integrity of the status attestation process but also affirms that the entity requesting a status attestation is the same entity to which the credential was issued. \r\n```",
              "createdAt": "2024-02-14T12:36:58Z",
              "updatedAt": "2024-02-14T12:36:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5wETeT",
          "commit": {
            "abbreviatedOid": "44e2eee"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM.\r\nBtw, we are assuming here that the credential for which a Status Attestation is requested has a cryptographic holder-binding. Is this a right assumption? Should we generalize to cases where we have other holder binding mechanisms or even none?",
          "createdAt": "2024-02-14T12:40:18Z",
          "updatedAt": "2024-02-14T12:40:18Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s5wFCY7",
          "commit": {
            "abbreviatedOid": "44e2eee"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-14T14:05:54Z",
          "updatedAt": "2024-02-14T14:05:54Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "```suggestion\r\nThe essence of requiring control over the private key and its demonstration through a cryptographic operation (e.g., signing a challenge or a token) is to ensure that the entity in possession of the credential can execute actions exclusively reserved for the legitimate owner. The dual-layered approach of requiring both possession of the credential and control over the corresponding private key indeed reinforces the security and integrity of the status attestation process. It also ensures that the entity requesting a status attestation is indeed the same entity to which the credential was originally issued, affirming the authenticity and rightful ownership of the credential.\r\n```",
              "createdAt": "2024-02-14T14:05:54Z",
              "updatedAt": "2024-02-14T14:05:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5xn676",
          "commit": {
            "abbreviatedOid": "78a2f89"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-28T13:36:42Z",
          "updatedAt": "2024-02-28T13:36:42Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "```suggestion\r\nThe essence of requiring control over the private key and its demonstration through a cryptographic operation (e.g., signing a challenge or a token) is to ensure that the entity in possession of the credential can execute actions exclusively reserved for the legitimate subject. The dual-layered approach of requiring both possession of the credential and control over the corresponding private key indeed reinforces the security and integrity of the status attestation process. It also ensures that the entity requesting a status attestation is indeed the same entity to which the credential was originally issued, affirming the authenticity and rightful possession of the credential.\r\n```",
              "createdAt": "2024-02-28T13:36:42Z",
              "updatedAt": "2024-02-28T13:36:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5xn7VX",
          "commit": {
            "abbreviatedOid": "78a2f89"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "minor word changes, ideally we don't need to distinguish \"owner\" and \"subject\", and \"ownership\" and \"possession\".",
          "createdAt": "2024-02-28T13:37:25Z",
          "updatedAt": "2024-02-28T13:37:25Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s5xoKXm",
          "commit": {
            "abbreviatedOid": "15dbe4a"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-28T14:03:38Z",
          "updatedAt": "2024-02-28T14:05:10Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nThe concept of Proof of Possession (PoP) of a Credential within the framework of the Status Attestation specification encompasses a broader perspective than merely possessing the digital bytes of the Credential. It involves demonstrating rightful control or ownership over the Credential, which can manifest in various forms depending on the technology employed and the nature of the digital Credential itself. For instance, a Credential could be presented visually (de-visu) with a personal portrait serving as a binding element.\r\n```",
              "createdAt": "2024-02-28T14:03:38Z",
              "updatedAt": "2024-02-28T14:05:10Z"
            },
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nWhile this specification does not prescribe any additional methods for the proof of possession of the Credential, it aims to offer guidance for concrete implementations utilizing common proof of possession mechanisms. This includes, but is not limited to:\r\n```",
              "createdAt": "2024-02-28T14:04:18Z",
              "updatedAt": "2024-02-28T14:05:10Z"
            },
            {
              "originalPosition": 11,
              "body": "```suggestion\r\n2. Controlling a private key that corresponds to a public key associated with the Credential, often indicated within the Credential's cnf (confirmation) claim or through a similar mechanism.\r\n```",
              "createdAt": "2024-02-28T14:04:31Z",
              "updatedAt": "2024-02-28T14:05:10Z"
            },
            {
              "originalPosition": 13,
              "body": "```suggestion\r\nThe essence of requiring control over the private key and its demonstration through a cryptographic operation (e.g., signing a challenge or a token) is to ensure that the entity in possession of the Credential can execute actions exclusively reserved for the legitimate subject. The dual-layered approach of requiring both possession of the Credential and control over the corresponding private key indeed reinforces the security and integrity of the status attestation process. It also ensures that the entity requesting a Status Attestation is indeed the same entity to which the Credential was originally issued, affirming the authenticity and rightful possession of the Credential.\r\n```",
              "createdAt": "2024-02-28T14:05:04Z",
              "updatedAt": "2024-02-28T14:05:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5xoMy3",
          "commit": {
            "abbreviatedOid": "63ce908"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-28T14:07:42Z",
          "updatedAt": "2024-02-28T14:07:42Z",
          "comments": []
        }
      ]
    },
    {
      "number": 17,
      "id": "PR_kwDOK4XJ0s5nv-QK",
      "title": "Credential hash and VCI metadata paramenter",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/pull/17",
      "state": "MERGED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "this PR continues https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/6, it also:\r\n\r\n- closes https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/16\r\n- closes https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/3\r\n- closes https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/13",
      "createdAt": "2024-02-23T12:19:48Z",
      "updatedAt": "2024-02-23T17:47:37Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "baseRefName": "main",
      "baseRefOid": "673a8e16ce50cc4ef409721c70279dc87db80446",
      "headRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "headRefName": "dev",
      "headRefOid": "ce0d664ca0b4ca1a0d1500335f6be46b415a96fd",
      "closedAt": "2024-02-23T17:47:36Z",
      "mergedAt": "2024-02-23T17:47:36Z",
      "mergedBy": "peppelinux",
      "mergeCommit": {
        "oid": "3278cd2382cdf1ffb29d02dccb9cfa3e1dece931"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s5xJmAO",
          "commit": {
            "abbreviatedOid": "ce0d664"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-23T15:09:28Z",
          "updatedAt": "2024-02-23T15:09:28Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s5xJ-w0",
          "commit": {
            "abbreviatedOid": "ce0d664"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-23T15:59:09Z",
          "updatedAt": "2024-02-23T15:59:09Z",
          "comments": []
        }
      ]
    },
    {
      "number": 18,
      "id": "PR_kwDOK4XJ0s5nyv-E",
      "title": "editorial: intro, less word, same information",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/pull/18",
      "state": "MERGED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Rereading I realized how much the introductory text had swollen with thoughts, words and considerations.\r\n\r\nI have compressed the same information into a fifth of the previous text.",
      "createdAt": "2024-02-23T20:54:10Z",
      "updatedAt": "2024-02-23T22:39:50Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "baseRefName": "main",
      "baseRefOid": "3278cd2382cdf1ffb29d02dccb9cfa3e1dece931",
      "headRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "headRefName": "intro",
      "headRefOid": "d420251e76f6fd3a2677a70f48cd1c3a6ccbfe60",
      "closedAt": "2024-02-23T22:39:49Z",
      "mergedAt": "2024-02-23T22:39:49Z",
      "mergedBy": "peppelinux",
      "mergeCommit": {
        "oid": "516968a7b22fee30185ca758370b60c19e1efbb6"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s5xL7jK",
          "commit": {
            "abbreviatedOid": "bc5af09"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-23T21:21:18Z",
          "updatedAt": "2024-02-23T21:21:18Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s5xMDRG",
          "commit": {
            "abbreviatedOid": "bc5af09"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-23T21:40:42Z",
          "updatedAt": "2024-02-23T21:40:42Z",
          "comments": []
        }
      ]
    },
    {
      "number": 21,
      "id": "PR_kwDOK4XJ0s5oLfii",
      "title": "editorial: privacy considerations",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/pull/21",
      "state": "MERGED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Closes https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/15",
      "createdAt": "2024-02-28T14:27:50Z",
      "updatedAt": "2024-02-28T20:47:03Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "baseRefName": "main",
      "baseRefOid": "0962d686df5ffd223a105425b4633f973fe3bd8a",
      "headRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "headRefName": "pr",
      "headRefOid": "b064428285bb46c75a09f73d899a2b5a06ee4051",
      "closedAt": "2024-02-28T20:47:02Z",
      "mergedAt": "2024-02-28T20:47:02Z",
      "mergedBy": "peppelinux",
      "mergeCommit": {
        "oid": "d06f46d4bb51b6bbbea052915bcaf6a8b57354bd"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s5xojDw",
          "commit": {
            "abbreviatedOid": "313c866"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-28T14:42:11Z",
          "updatedAt": "2024-02-28T14:42:11Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nStatus Attestations are based on a privacy-by-design approach, reflecting a deliberate effort to balance security and privacy needs in the Digital Credential ecosystem.\r\n```",
              "createdAt": "2024-02-28T14:42:11Z",
              "updatedAt": "2024-02-28T14:42:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5xojQX",
          "commit": {
            "abbreviatedOid": "313c866"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-28T14:42:31Z",
          "updatedAt": "2024-02-28T14:42:31Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s5xsAGF",
          "commit": {
            "abbreviatedOid": "b064428"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-28T20:26:02Z",
          "updatedAt": "2024-02-28T20:26:02Z",
          "comments": []
        }
      ]
    },
    {
      "number": 24,
      "id": "PR_kwDOK4XJ0s5oRZfo",
      "title": "fix: aud normative value",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/pull/24",
      "state": "MERGED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Closes https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/23",
      "createdAt": "2024-02-29T09:46:30Z",
      "updatedAt": "2024-03-04T15:37:20Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "baseRefName": "main",
      "baseRefOid": "d06f46d4bb51b6bbbea052915bcaf6a8b57354bd",
      "headRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "headRefName": "aud",
      "headRefOid": "3fb3294c9be1661a5af35dc61abcc1796d34b951",
      "closedAt": "2024-03-04T15:37:19Z",
      "mergedAt": "2024-03-04T15:37:19Z",
      "mergedBy": "OR13",
      "mergeCommit": {
        "oid": "913797c95163a7129305311922dc68d61881f915"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s5xwCrg",
          "commit": {
            "abbreviatedOid": "3fb3294"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-29T09:48:19Z",
          "updatedAt": "2024-02-29T09:48:19Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s5yHxpz",
          "commit": {
            "abbreviatedOid": "3fb3294"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-03-04T15:36:27Z",
          "updatedAt": "2024-03-04T15:36:27Z",
          "comments": []
        }
      ]
    },
    {
      "number": 25,
      "id": "PR_kwDOK4XJ0s5okt5e",
      "title": "normative language in status attestation response and fix response body",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/pull/25",
      "state": "MERGED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "this PR\r\n\r\n- fixes the response description of the status attestation response, from OK to Created (201)\r\n- adds normative language about the status attestation response",
      "createdAt": "2024-03-04T10:50:43Z",
      "updatedAt": "2024-03-04T16:12:02Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "baseRefName": "main",
      "baseRefOid": "d06f46d4bb51b6bbbea052915bcaf6a8b57354bd",
      "headRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "headRefName": "201",
      "headRefOid": "aa65f1951b648a75fea6b7f063b93885ab9d29de",
      "closedAt": "2024-03-04T16:12:02Z",
      "mergedAt": "2024-03-04T16:12:02Z",
      "mergedBy": "peppelinux",
      "mergeCommit": {
        "oid": "c2c9784e048f5995149f532ebe550634dd9f309e"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s5yFVag",
          "commit": {
            "abbreviatedOid": "5ccd398"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-04T10:51:14Z",
          "updatedAt": "2024-03-04T10:51:14Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nIf the Digital Credential is valid, the Credential Issuer MUST return an HTTP status code of 201 (Created), with the content type set to `application/json`. The response MUST include a JSON object with a member named `status_attestation`, which contains the Status Attestation for the Wallet Instance, as illustrated in the following non-normative example:\r\n```",
              "createdAt": "2024-03-04T10:51:14Z",
              "updatedAt": "2024-03-04T10:51:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5yHxfV",
          "commit": {
            "abbreviatedOid": "aa65f19"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-03-04T15:36:09Z",
          "updatedAt": "2024-03-04T15:36:09Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s5yIEMX",
          "commit": {
            "abbreviatedOid": "aa65f19"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-03-04T16:07:55Z",
          "updatedAt": "2024-03-04T16:07:55Z",
          "comments": []
        }
      ]
    },
    {
      "number": 33,
      "id": "PR_kwDOK4XJ0s5uHo7t",
      "title": "Cumulative status attestation updates",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/pull/33",
      "state": "MERGED",
      "author": "SaraConsoliACN",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This PR may resolve issue #30, #20. Additionally, it is noted that the EXP timestamp MUST be superior to IAT timestamp.",
      "createdAt": "2024-04-30T09:43:35Z",
      "updatedAt": "2024-04-30T09:54:40Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "baseRefName": "main",
      "baseRefOid": "c2c9784e048f5995149f532ebe550634dd9f309e",
      "headRepository": "SaraConsoliACN/draft-demarco-oauth-status-attestations",
      "headRefName": "statusAttestationUpdates",
      "headRefOid": "4dc593ecd4d072988490ed11a23bf4d75fe8e1b7",
      "closedAt": "2024-04-30T09:54:40Z",
      "mergedAt": "2024-04-30T09:54:40Z",
      "mergedBy": "SaraConsoliACN",
      "mergeCommit": {
        "oid": "a1fd2de245cbd8689be05a844a469d7381e02a60"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s55C6Ho",
          "commit": {
            "abbreviatedOid": "9987fe4"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-30T09:46:26Z",
          "updatedAt": "2024-04-30T09:46:27Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\n| JOSE Header Parameter | Description | Reference |\r\n```",
              "createdAt": "2024-04-30T09:46:27Z",
              "updatedAt": "2024-04-30T09:46:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s55C7T-",
          "commit": {
            "abbreviatedOid": "9987fe4"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-30T09:48:52Z",
          "updatedAt": "2024-04-30T09:48:52Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "```suggestion\r\nSince the Wallet may request one or more Status Attestations, issued by the same Credential Issuer, the `credential_pop` object MUST be an array.\r\n```",
              "createdAt": "2024-04-30T09:48:52Z",
              "updatedAt": "2024-04-30T09:48:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s55C7yg",
          "commit": {
            "abbreviatedOid": "9987fe4"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-04-30T09:49:46Z",
          "updatedAt": "2024-04-30T09:50:04Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "```suggestion\r\n| **exp** | UNIX Timestamp with the expiration time of the JWT. It MUST be superior to the value set for `iat`  . | {{RFC9126}}, {{RFC7519}}, {{RFC7515}} |\r\n```",
              "createdAt": "2024-04-30T09:49:46Z",
              "updatedAt": "2024-04-30T09:50:04Z"
            }
          ]
        }
      ]
    },
    {
      "number": 34,
      "id": "PR_kwDOK4XJ0s5uH6Da",
      "title": "Revert \"Cumulative status attestation updates\"",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/pull/34",
      "state": "MERGED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Reverts peppelinux/draft-demarco-oauth-status-attestations#33",
      "createdAt": "2024-04-30T10:20:10Z",
      "updatedAt": "2024-04-30T10:20:28Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "baseRefName": "main",
      "baseRefOid": "a1fd2de245cbd8689be05a844a469d7381e02a60",
      "headRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "headRefName": "revert-33-statusAttestationUpdates",
      "headRefOid": "2f53b662356b4c5a5b7f78d3822e5138839b9d33",
      "closedAt": "2024-04-30T10:20:28Z",
      "mergedAt": "2024-04-30T10:20:28Z",
      "mergedBy": "peppelinux",
      "mergeCommit": {
        "oid": "d182c8792b533f53e86265218000558d43f5a76a"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 35,
      "id": "PR_kwDOK4XJ0s5uVxmx",
      "title": "Cumulative PR - Status attestation updates",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/pull/35",
      "state": "CLOSED",
      "author": "SaraConsoliACN",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This PR addresses various commits made in the last days:\r\n- issue #30\r\nAdditionally, the expiration time (EXP) object in the attestation has been adjusted to 24 hours",
      "createdAt": "2024-05-02T10:37:22Z",
      "updatedAt": "2024-05-03T08:21:26Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "baseRefName": "saraACN",
      "baseRefOid": "c2c9784e048f5995149f532ebe550634dd9f309e",
      "headRepository": "SaraConsoliACN/draft-demarco-oauth-status-attestations",
      "headRefName": "statusAttestationUpdates",
      "headRefOid": "324dc971996147a6b98b32e8e19fc3a6250316b5",
      "closedAt": "2024-05-03T08:21:26Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "no, please close this PR and create single PR each of them aiming to resolve single issues, separately\r\n",
          "createdAt": "2024-05-03T08:19:27Z",
          "updatedAt": "2024-05-03T08:19:27Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s55Ujqd",
          "commit": {
            "abbreviatedOid": "a8aaa25"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-05-02T10:58:40Z",
          "updatedAt": "2024-05-02T10:59:49Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "missing definition here, please provide the definition of credential_pop, type Array[String] and the description of this parameter, before the validation requirements at line 266",
              "createdAt": "2024-05-02T10:58:41Z",
              "updatedAt": "2024-05-02T10:59:49Z"
            },
            {
              "originalPosition": 89,
              "body": "please provide here the definition of this parameter",
              "createdAt": "2024-05-02T10:59:11Z",
              "updatedAt": "2024-05-02T10:59:49Z"
            },
            {
              "originalPosition": 97,
              "body": "this is a consideration that is not required here, this must be merged within the definition of `credential_pop`",
              "createdAt": "2024-05-02T10:59:45Z",
              "updatedAt": "2024-05-02T10:59:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s55Zd0l",
          "commit": {
            "abbreviatedOid": "f483097"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-05-02T19:26:26Z",
          "updatedAt": "2024-05-02T19:29:04Z",
          "comments": [
            {
              "originalPosition": 72,
              "body": "please, the definition of the request parameter, where the credential_pop must be defined.",
              "createdAt": "2024-05-02T19:26:27Z",
              "updatedAt": "2024-05-02T21:03:17Z"
            },
            {
              "originalPosition": 86,
              "body": "this is not the way to define a parameter neither to define a new section.\r\n\r\nPlease follow my previous suggestion.",
              "createdAt": "2024-05-02T19:27:07Z",
              "updatedAt": "2024-05-02T19:29:04Z"
            },
            {
              "originalPosition": 88,
              "body": "as already mentioned, this must be defined in the text about the definition of the parameter. this is not good in this way.",
              "createdAt": "2024-05-02T19:28:13Z",
              "updatedAt": "2024-05-02T19:29:04Z"
            },
            {
              "originalPosition": 90,
              "body": "as mentioned, the credential_pop is now supposed to be an array, not a json object",
              "createdAt": "2024-05-02T19:28:50Z",
              "updatedAt": "2024-05-02T19:29:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s55c-st",
          "commit": {
            "abbreviatedOid": "324dc97"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-03T08:20:04Z",
          "updatedAt": "2024-05-03T08:20:05Z",
          "comments": [
            {
              "originalPosition": 245,
              "body": "this is wrong, already said. This is wrong",
              "createdAt": "2024-05-03T08:20:05Z",
              "updatedAt": "2024-05-03T08:20:05Z"
            }
          ]
        }
      ]
    },
    {
      "number": 36,
      "id": "PR_kwDOK4XJ0s5ueL78",
      "title": "breaking change: credential_pop is an array",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/pull/36",
      "state": "MERGED",
      "author": "SaraConsoliACN",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This PR:\r\n- Addresses issue #30\r\n- Fixes some editorial issues\r\n- Adds a note on the 'exp' parameter, which must be greater than the 'iat' parameter\r\n",
      "createdAt": "2024-05-03T13:03:03Z",
      "updatedAt": "2024-05-17T12:42:09Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "baseRefName": "main",
      "baseRefOid": "8bfb6d148916a4f2730afb1148e5bd3ccae8515f",
      "headRepository": "SaraConsoliACN/draft-demarco-oauth-status-attestations",
      "headRefName": "SaraConsoliACN-20240503_1",
      "headRefOid": "bfaef662970258de5b3e37d947f1815873a94dd9",
      "closedAt": "2024-05-17T12:42:09Z",
      "mergedAt": "2024-05-17T12:42:09Z",
      "mergedBy": "peppelinux",
      "mergeCommit": {
        "oid": "2b2ffe1d49898640612021fa82b0788e3e25b809"
      },
      "comments": [
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "> It is not yet clear in the text what happens if a Status Assertion Request fails due to a single or subset of clredentials. For example in the text we have the following sentence:\r\n\r\nthis would tend to introduce a json object in the response with an array of statuses",
          "createdAt": "2024-05-13T13:25:20Z",
          "updatedAt": "2024-05-13T13:25:20Z"
        },
        {
          "author": "marinaado",
          "authorAssociation": "COLLABORATOR",
          "body": "> It is not yet clear in the text what happens if a Status Assertion Request fails due to a single or subset of clredentials. For example in the text we have the following sentence:\r\n> \r\n> > In cases where a Status Assertion request is made for a Digital Credential that does not exist, has expired, been revoked, or is in any way invalid, or if the HTTP Request is compromised by missing or incorrect parameters, the Credential Issuer is required to respond with an HTTP Response. This response should have a status code of `400` and use `application/json` as the content type, including the following parameters:\r\n> \r\n> Does this mean that if the request includes Credential PoP A and Credential PoP B and the Credential B is invalid, the Credential Issuer must give an error? Probably the response should contain only the status assertion for Credential A without giving an error response?\r\n\r\nWe have two error codes in the spec - one for invalid request and the second for invalid credential. How would you differentiate between the two errors ? Can it happen that there is error in request for Credential PoP B while the request for Credential PoP A is correct? If this cannot happen then your proposal is ok. ",
          "createdAt": "2024-05-13T14:45:02Z",
          "updatedAt": "2024-05-13T14:45:02Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "> > It is not yet clear in the text what happens if a Status Assertion Request fails due to a single or subset of clredentials. For example in the text we have the following sentence:\r\n> \r\n> this would tend to introduce a json object in the response with an array of statuses\r\n\r\nor, differently\r\n\r\nregarding the response of the status assertions, instead of using a complex json object WDYT about returning an array of JWT/CWT where each JWT/CWT matches the one provided within the request and in the same order\r\n\r\nwhere\r\n\r\nthe header parameter typ would say if it is a statu sassertion or a status assertion error?\r\n\r\nWDYT @fmarino-ipzs @OR13 ?\r\nusing the power of the JWT/CWT objects we would avoid the json object envelope with unsigned (meta)data",
          "createdAt": "2024-05-13T14:52:58Z",
          "updatedAt": "2024-05-13T14:52:58Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "> > It is not yet clear in the text what happens if a Status Assertion Request fails due to a single or subset of clredentials. For example in the text we have the following sentence:\r\n> > > In cases where a Status Assertion request is made for a Digital Credential that does not exist, has expired, been revoked, or is in any way invalid, or if the HTTP Request is compromised by missing or incorrect parameters, the Credential Issuer is required to respond with an HTTP Response. This response should have a status code of `400` and use `application/json` as the content type, including the following parameters:\r\n> > \r\n> > \r\n> > Does this mean that if the request includes Credential PoP A and Credential PoP B and the Credential B is invalid, the Credential Issuer must give an error? Probably the response should contain only the status assertion for Credential A without giving an error response?\r\n> \r\n> We have two error codes in the spec - one for invalid request and the second for invalid credential. How would you differentiate between the two errors ? Can it happen that there is error in request for Credential PoP B while the request for Credential PoP A is correct? If this cannot happen then your proposal is ok.\r\n\r\n@marinaado WDYT about this conversation?\r\nhttps://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/36#discussion_r1598713649",
          "createdAt": "2024-05-13T16:22:10Z",
          "updatedAt": "2024-05-13T16:22:10Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "I think the following is a good solution for now\"\r\n\r\n```\r\nHTTP POST /status \r\ncontent-type: application/json\r\n{\r\n  \"status_assertion_requests\" : [\"${base64url(json({typ: (some pop for status-assertion)+jwt, ...}))}.payload.signature\", ... ]\r\n}\r\n... Response :\r\n{\r\n  \"status_assertions\" : [\"${base64url(json({typ: status-assertion+jwt, ...}))}.payload.signature\", ... ]\r\n}\r\n```\r\n\r\n\r\n",
          "createdAt": "2024-05-13T16:27:41Z",
          "updatedAt": "2024-05-13T16:27:57Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "Short recap\r\n\r\nin the request:\r\n- `credential_pop` renamed to `status_assertion_requests`\r\n- the position within the array of each `status_assertion_request` object must match the same position in the subsequent response\r\n\r\nin the response:\r\n- `status_assertions` renamed to `status_assertion_responses`\r\n- each element in the array is related to the element contained in the request at the same position\r\n- each element can be an error using `typ` set to `status-assertion-error+{jwt,cwt}` or `status-assertion+{jwt,cwd}`\r\n- the matching entry in the response must be of the same type requested, eg: if the entry in the request is jwt, therefore the entry at  the same position in the response must be jwt",
          "createdAt": "2024-05-13T16:32:35Z",
          "updatedAt": "2024-05-13T16:32:35Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "> I think the following is a good solution for now\"\r\n> \r\n> ```\r\n> HTTP POST /status \r\n> content-type: application/json\r\n> {\r\n>   \"status_assertion_requests\" : [\"${base64url(json({typ: (some pop for status-assertion)+jwt, ...}))}.payload.signature\", ... ]\r\n> }\r\n> ... Response :\r\n> {\r\n>   \"status_assertions\" : [\"${base64url(json({typ: status-assertion+jwt, ...}))}.payload.signature\", ... ]\r\n> }\r\n> ```\r\n\r\n@SaraConsoliACN the non normative examples must be updated with the example provided here by Orie",
          "createdAt": "2024-05-13T16:33:13Z",
          "updatedAt": "2024-05-13T16:33:13Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s55faBo",
          "commit": {
            "abbreviatedOid": "1b221a7"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-05-03T14:26:25Z",
          "updatedAt": "2024-05-03T14:30:19Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "```suggestion\r\nGiven that the Wallet may request one or more Status Attestations from the same Credential Issuer, the `credential_pop` parameter is subject to the following specification:\r\n- credential_pop: REQUIRED. It MUST be implemented as an array of strings, where each string represents a Digital Credential proof of possession.\r\n```",
              "createdAt": "2024-05-03T14:26:25Z",
              "updatedAt": "2024-05-03T14:30:19Z"
            },
            {
              "originalPosition": 47,
              "body": "```suggestion\r\n- The Credential Issuer MUST verify the signature of all elements in the `credential_pop` object using the public key contained within the Digital Credential where the `credential_pop` is referred to;\r\n```",
              "createdAt": "2024-05-03T14:27:48Z",
              "updatedAt": "2024-05-03T14:30:19Z"
            },
            {
              "originalPosition": 48,
              "body": "```suggestion\r\n- the Credential Issuer MUST verify that it is the legitimate Issuer of the Digital Credential to which the `credential_pop` refers.\r\n```",
              "createdAt": "2024-05-03T14:29:10Z",
              "updatedAt": "2024-05-03T14:30:19Z"
            },
            {
              "originalPosition": 118,
              "body": "```suggestion\r\n    \"status_attestations\": [\"eyJhbGciOiJFUzI1Ni ...\", \"...\"],\r\n```\r\n\r\nplease bring it as plural",
              "createdAt": "2024-05-03T14:30:00Z",
              "updatedAt": "2024-05-03T14:30:19Z"
            },
            {
              "originalPosition": 118,
              "body": "here and in all the text",
              "createdAt": "2024-05-03T14:30:10Z",
              "updatedAt": "2024-05-03T14:30:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s55gGBO",
          "commit": {
            "abbreviatedOid": "cfda2ed"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-03T15:52:50Z",
          "updatedAt": "2024-05-03T15:53:50Z",
          "comments": [
            {
              "originalPosition": 112,
              "body": "```suggestion\r\n| **exp** | UNIX Timestamp with the expiration time of the JWT. It MUST be superior to the value set for `iat`. | {{RFC9126}}, {{RFC7519}}, {{RFC7515}} |\r\n```",
              "createdAt": "2024-05-03T15:52:50Z",
              "updatedAt": "2024-05-03T15:53:50Z"
            },
            {
              "originalPosition": 121,
              "body": "```suggestion\r\nIf the Digital Credential is valid, the Credential Issuer MUST return an HTTP status code of 201 (Created), with the content type set to `application/json`. The response MUST include a JSON object with a member named `status_attestations`, which contains a list of Status Attestations, as illustrated in the following non-normative example:\r\n```",
              "createdAt": "2024-05-03T15:53:27Z",
              "updatedAt": "2024-05-03T15:53:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s55oGdA",
          "commit": {
            "abbreviatedOid": "cfda2ed"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-06T11:14:25Z",
          "updatedAt": "2024-05-06T11:14:25Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "since the value is an array, wouldn't be better to rename this to `credentials_pop`?\r\n\r\n@marinaado \r\n@fmarino-ipzs \r\n@OR13 ",
              "createdAt": "2024-05-06T11:14:25Z",
              "updatedAt": "2024-05-06T11:14:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s55o63h",
          "commit": {
            "abbreviatedOid": "cfda2ed"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-06T13:20:26Z",
          "updatedAt": "2024-05-06T13:20:26Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "I wonder if these are all really \"credentials\"... or are they simply assertions related to a credential that had a confirmation claim?\r\n\r\n- https://datatracker.ietf.org/doc/html/rfc7800#section-3.1\r\n- https://datatracker.ietf.org/doc/html/rfc8747#section-3.1\r\n\r\nNow that its an array, can each of these items demonstrate possession of a different key?\r\n\r\nCan methods be mixed, for example, cred-1 uses COSE Key, cred-2 use JKT ?\r\n\r\n",
              "createdAt": "2024-05-06T13:20:26Z",
              "updatedAt": "2024-05-06T13:20:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s55o7ve",
          "commit": {
            "abbreviatedOid": "cfda2ed"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "In moving to an array, a lot of new edge cases have been created.\r\n\r\nI think we should add some examples and address them while introducing this change.\r\n\r\nI'm happy to propose text, but first lets have a discussion here:\r\n\r\nhttps://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/36/files#r1591006026",
          "createdAt": "2024-05-06T13:22:10Z",
          "updatedAt": "2024-05-06T13:22:10Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s55o9vL",
          "commit": {
            "abbreviatedOid": "cfda2ed"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-06T13:26:01Z",
          "updatedAt": "2024-05-06T13:26:02Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "I wonder if this should be changed to JSON.\r\n\r\nIf it says like this, I think an example showing application/x-www-form-urlencoded of CWT and JWT would help communicate the intention here, I am happy to produce one if there is agreement.",
              "createdAt": "2024-05-06T13:26:02Z",
              "updatedAt": "2024-05-06T13:26:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s55o-mk",
          "commit": {
            "abbreviatedOid": "cfda2ed"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-06T13:27:45Z",
          "updatedAt": "2024-05-06T13:27:45Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "Given the updates from version 00 to 01, the term credentials is misleading because the items within that array are not credentials but assertions that prove credential possession. Therefore, we should rename this parameter to better reflect its purpose.",
              "createdAt": "2024-05-06T13:27:45Z",
              "updatedAt": "2024-05-06T13:27:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s55o_H7",
          "commit": {
            "abbreviatedOid": "cfda2ed"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-06T13:28:45Z",
          "updatedAt": "2024-05-06T13:28:45Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "I'm also in favor of `application/json` too\r\n\r\n@marinaado @fmarino-ipzs ^",
              "createdAt": "2024-05-06T13:28:45Z",
              "updatedAt": "2024-05-06T13:28:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s55vpWt",
          "commit": {
            "abbreviatedOid": "cfda2ed"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-07T09:05:55Z",
          "updatedAt": "2024-05-07T09:05:55Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "another solution @SaraConsoliACN @OR13 to prevent the use of `application/json` would be this\r\n\r\n`credential_pop=\"...\"&credential_pop=\"...\"&...`\r\n\r\ntaking into account that credential_pop is deprecable now and require a name change",
              "createdAt": "2024-05-07T09:05:55Z",
              "updatedAt": "2024-05-07T09:05:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s559EqS",
          "commit": {
            "abbreviatedOid": "5582bac"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-05-08T15:52:30Z",
          "updatedAt": "2024-05-08T15:54:25Z",
          "comments": [
            {
              "originalPosition": 134,
              "body": "```suggestion\r\n\r\n```",
              "createdAt": "2024-05-08T15:52:30Z",
              "updatedAt": "2024-05-08T15:54:25Z"
            },
            {
              "originalPosition": 121,
              "body": "```suggestion\r\nIf the Digital Credential is valid, the Credential Issuer MUST return an HTTP status code of 201 (Created), with the content type set to `application/json`. The response MUST include a JSON object with a member named `status_attestations`, which contains an array of strings. Each string in the array represents a Status Attestation, as illustrated in the following non-normative example:\r\n```",
              "createdAt": "2024-05-08T15:54:14Z",
              "updatedAt": "2024-05-08T15:54:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56EPTY",
          "commit": {
            "abbreviatedOid": "cfda2ed"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-09T13:15:07Z",
          "updatedAt": "2024-05-09T13:15:08Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "if we agree, we definitively use `application/json` and therefore the request would be like this:\r\n\r\n````\r\nPOST /status HTTP/1.1\r\nHost: issuer.example.org\r\nContent-Type: application/json\r\n\r\n{ \"credential_pop\" : [$CredentialPoPJWT, $CredentialPoPCWT, ... ] }\r\n````",
              "createdAt": "2024-05-09T13:15:08Z",
              "updatedAt": "2024-05-09T13:18:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56ExCL",
          "commit": {
            "abbreviatedOid": "cfda2ed"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-09T14:17:11Z",
          "updatedAt": "2024-05-09T14:17:11Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "If the data posted is not credentials, it might be better to give it a more generic name, like `presentations` or `arguments`, or `parameters`",
              "createdAt": "2024-05-09T14:17:11Z",
              "updatedAt": "2024-05-09T14:17:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56L9hK",
          "commit": {
            "abbreviatedOid": "cfda2ed"
          },
          "author": "SaraConsoliACN",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-10T12:16:23Z",
          "updatedAt": "2024-05-10T12:16:23Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "In my opinion, `parameters` could be a good choice. I'm going to suggest this modification.",
              "createdAt": "2024-05-10T12:16:23Z",
              "updatedAt": "2024-05-10T12:16:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56UuC-",
          "commit": {
            "abbreviatedOid": "cfda2ed"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-13T10:03:09Z",
          "updatedAt": "2024-05-13T10:03:10Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "we have a section defining the Digital Credential PoP here: https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/36/files#diff-6018989306b8996e79d471eb123fc3b59796d1635384b6faac8cdb36cd5f49ccR297\r\n\r\nI'm not sure about the name presentation\r\n\r\n@SaraConsoliACN please revert the change to credential_pop to allow this PR to be merged and create another issue for discussing the json member name change",
              "createdAt": "2024-05-13T10:03:09Z",
              "updatedAt": "2024-05-13T10:03:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56V932",
          "commit": {
            "abbreviatedOid": "cfda2ed"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-13T12:36:31Z",
          "updatedAt": "2024-05-13T12:36:31Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "@OR13 the discussion is moved to this issue: https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/43\r\n\r\nI'd suggest to unblock this PR and continue the discussion about the nature of the parameters and the good semantic to have outside of this PR if we agree\r\n\r\n@fmarino-ipzs @marinaado ^",
              "createdAt": "2024-05-13T12:36:31Z",
              "updatedAt": "2024-05-13T12:36:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56V-rw",
          "commit": {
            "abbreviatedOid": "13a3a78"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-13T12:38:12Z",
          "updatedAt": "2024-05-13T12:38:12Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s56WJKH",
          "commit": {
            "abbreviatedOid": "fdf7d8c"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-13T12:57:21Z",
          "updatedAt": "2024-05-13T12:57:21Z",
          "comments": [
            {
              "originalPosition": 86,
              "body": "```suggestion\r\n| JOSE Header Parameter | Description | Reference |\r\n```",
              "createdAt": "2024-05-13T12:57:21Z",
              "updatedAt": "2024-05-13T12:57:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56WPZe",
          "commit": {
            "abbreviatedOid": "fdf7d8c"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "It is not yet clear in the text what happens if a Status Assertion Request fails due to a single or subset of clredentials. \r\nFor example in the text we have the following sentence: \r\n> In cases where a Status Assertion request is made for a Digital Credential that does not exist, has expired, been revoked, or is in any way invalid, or if the HTTP Request is compromised by missing or incorrect parameters, the Credential Issuer is required to respond with an HTTP Response. This response should have a status code of `400` and use `application/json` as the content type, including the following parameters:\r\n\r\nDoes this mean that if the request includes Credential PoP A and Credential PoP B and the Credential B is invalid, the Credential Issuer must give an error? Probably the response should contain only the status assertion for Credential A without giving an error response?",
          "createdAt": "2024-05-13T13:07:41Z",
          "updatedAt": "2024-05-13T13:07:41Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s56WxMB",
          "commit": {
            "abbreviatedOid": "752ef82"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-13T13:58:12Z",
          "updatedAt": "2024-05-13T13:58:13Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "if these need more params, we might consider this interface to be an array of objects containing encoded credentials.",
              "createdAt": "2024-05-13T13:58:12Z",
              "updatedAt": "2024-05-13T13:58:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56WyDh",
          "commit": {
            "abbreviatedOid": "752ef82"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-13T13:59:38Z",
          "updatedAt": "2024-05-13T13:59:38Z",
          "comments": [
            {
              "originalPosition": 92,
              "body": "```suggestion\r\n| **exp** | UNIX Timestamp with the expiration time of the JWT. It MUST be greater than the value set for `iat`. | {{RFC9126}}, {{RFC7519}}, {{RFC7515}} |\r\n```",
              "createdAt": "2024-05-13T13:59:38Z",
              "updatedAt": "2024-05-13T14:54:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56Wyc-",
          "commit": {
            "abbreviatedOid": "752ef82"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-13T14:00:17Z",
          "updatedAt": "2024-05-13T14:00:17Z",
          "comments": [
            {
              "originalPosition": 119,
              "body": "```suggestion\r\n| **exp** | UNIX Timestamp with the expiration time of the JWT. It MUST be greater than the value set for `iat`. | {{RFC9126}}, {{RFC7519}}, {{RFC7515}} |\r\n```",
              "createdAt": "2024-05-13T14:00:17Z",
              "updatedAt": "2024-05-13T14:00:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56WykE",
          "commit": {
            "abbreviatedOid": "752ef82"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-13T14:00:27Z",
          "updatedAt": "2024-05-13T14:00:27Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s56XXDt",
          "commit": {
            "abbreviatedOid": "752ef82"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-13T14:51:19Z",
          "updatedAt": "2024-05-13T14:51:19Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "What about encoding any required parameter within the JWT/CWT according to the schema type `status-assertion-request+{jwt,cwt}`?\r\n\r\nthis would make each object consistent in its purpose\r\n\r\nwe may say that any additional parameter could be included, while only the required set of attributes, for each status request is defined within the specs",
              "createdAt": "2024-05-13T14:51:19Z",
              "updatedAt": "2024-05-13T15:58:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56X_cg",
          "commit": {
            "abbreviatedOid": "752ef82"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-13T16:00:45Z",
          "updatedAt": "2024-05-13T16:00:45Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "therefore we could rename credential_pop to `status_assertion_requests` where each element within the array configures a `typ` value set to `status-assertion-request+{jwt,cwt}`\r\n\r\nthe corresponding response would be a json array containing for each element with a `typ` value set to `status-assertion+{jwt,cwt}` or ar `status-assertion-error+{jwt,cwt}` at the same position of the corresponding one within the request.",
              "createdAt": "2024-05-13T16:00:45Z",
              "updatedAt": "2024-05-13T16:00:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56YHy7",
          "commit": {
            "abbreviatedOid": "752ef82"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-13T16:13:50Z",
          "updatedAt": "2024-05-13T16:13:50Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "You would need to verify / decode the protected header to distinguish the types... but it is nice that they are required to advertise their typ consistent with the JWT BCP.",
              "createdAt": "2024-05-13T16:13:50Z",
              "updatedAt": "2024-05-13T16:13:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56YMMw",
          "commit": {
            "abbreviatedOid": "752ef82"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-13T16:21:33Z",
          "updatedAt": "2024-05-13T16:21:34Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "yes, I was wondering about \"in object veritas\"",
              "createdAt": "2024-05-13T16:21:33Z",
              "updatedAt": "2024-05-13T16:21:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56iCHK",
          "commit": {
            "abbreviatedOid": "ec5b59c"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-14T15:24:41Z",
          "updatedAt": "2024-05-14T15:24:41Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "```suggestion\r\n         |  Status Assertion Responses [...]                      |\r\n```",
              "createdAt": "2024-05-14T15:24:41Z",
              "updatedAt": "2024-05-14T15:24:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56iDDS",
          "commit": {
            "abbreviatedOid": "ec5b59c"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-14T15:26:20Z",
          "updatedAt": "2024-05-14T15:26:20Z",
          "comments": [
            {
              "originalPosition": 57,
              "body": "```suggestion\r\n\r\nBelow a non-normative example representing a Status Assertion Request array with a\r\nsingle JWT in it.\r\n\r\n~~~\r\n```",
              "createdAt": "2024-05-14T15:26:20Z",
              "updatedAt": "2024-05-14T15:26:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56iGYi",
          "commit": {
            "abbreviatedOid": "ec5b59c"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-14T15:31:22Z",
          "updatedAt": "2024-05-14T15:31:23Z",
          "comments": [
            {
              "originalPosition": 69,
              "body": "```suggestion\r\nThe Status Assertion HTTP request can be sent to a single Credential Issuer regardng muliple Digital Credentials, and MUST contain a json object with the member `status_assertion_requests`. \r\nThe `status_assertion_requests` MUST be set with an array of strings,\r\n```",
              "createdAt": "2024-05-14T15:31:22Z",
              "updatedAt": "2024-05-14T15:31:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56iHlx",
          "commit": {
            "abbreviatedOid": "ec5b59c"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-14T15:32:31Z",
          "updatedAt": "2024-05-14T15:32:32Z",
          "comments": [
            {
              "originalPosition": 70,
              "body": "```suggestion\r\nEach string within the array MUST be a Digital Credential Status Assertion Request object, as defined in this section.\r\n````",
              "createdAt": "2024-05-14T15:32:31Z",
              "updatedAt": "2024-05-14T15:57:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56iIlh",
          "commit": {
            "abbreviatedOid": "ec5b59c"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-14T15:34:13Z",
          "updatedAt": "2024-05-14T15:34:13Z",
          "comments": [
            {
              "originalPosition": 72,
              "body": "```suggestion\r\n```\r\n\r\nthis is related to the response, not to the request. Useless saying this here.",
              "createdAt": "2024-05-14T15:34:13Z",
              "updatedAt": "2024-05-14T15:34:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56iK5u",
          "commit": {
            "abbreviatedOid": "ec5b59c"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-14T15:38:04Z",
          "updatedAt": "2024-05-14T15:38:05Z",
          "comments": [
            {
              "originalPosition": 74,
              "body": "```suggestion\r\nThe Credential Issuer that receives the Status Assertion Request MUST validate that the Wallet Instance making the request is authorized to request Status Assertions.\r\n```",
              "createdAt": "2024-05-14T15:38:05Z",
              "updatedAt": "2024-05-14T15:38:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56iV1q",
          "commit": {
            "abbreviatedOid": "231ae65"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-14T15:56:57Z",
          "updatedAt": "2024-05-14T15:56:57Z",
          "comments": [
            {
              "originalPosition": 86,
              "body": "```suggestion\r\nTherefore the following requirements MUST be satisfied:\r\n```",
              "createdAt": "2024-05-14T15:56:57Z",
              "updatedAt": "2024-05-14T15:56:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56iWAK",
          "commit": {
            "abbreviatedOid": "231ae65"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-14T15:57:16Z",
          "updatedAt": "2024-05-14T15:57:16Z",
          "comments": [
            {
              "originalPosition": 89,
              "body": "please use the term confirmation method instead of public key",
              "createdAt": "2024-05-14T15:57:16Z",
              "updatedAt": "2024-05-14T15:57:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56iW35",
          "commit": {
            "abbreviatedOid": "231ae65"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "CHANGES_REQUESTED",
          "body": "several comments needs to be addressed",
          "createdAt": "2024-05-14T15:58:54Z",
          "updatedAt": "2024-05-14T16:00:29Z",
          "comments": [
            {
              "originalPosition": 164,
              "body": "instead of cryptographic key binding we should use the term confirmation method to enable other bindings mechanisms",
              "createdAt": "2024-05-14T15:58:54Z",
              "updatedAt": "2024-05-14T16:00:29Z"
            },
            {
              "originalPosition": 187,
              "body": "```suggestion\r\nThe member `status_assertion_responses` MUST be an array of strings, \r\nwhere each of them represent a Status Assertion Response object. In particular:\r\n```",
              "createdAt": "2024-05-14T16:00:15Z",
              "updatedAt": "2024-05-14T16:00:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56vNYR",
          "commit": {
            "abbreviatedOid": "fd4a803"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-15T23:14:32Z",
          "updatedAt": "2024-05-15T23:14:33Z",
          "comments": [
            {
              "originalPosition": 79,
              "body": "```suggestion\r\nThe Status Assertion HTTP request can be sent to a single Credential Issuer\r\nregarding multiple Digital Credentials, and MUST contain a json object with\r\nthe member `status_assertion_requests`.\r\n```",
              "createdAt": "2024-05-15T23:14:33Z",
              "updatedAt": "2024-05-15T23:14:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56vNat",
          "commit": {
            "abbreviatedOid": "fd4a803"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-15T23:14:45Z",
          "updatedAt": "2024-05-15T23:14:45Z",
          "comments": [
            {
              "originalPosition": 85,
              "body": "```suggestion\r\nThe Credential Issuer that receives the Status Assertion Request\r\nMUST validate that the Wallet Instance making the request is\r\nauthorized to request Status Assertions.\r\n```",
              "createdAt": "2024-05-15T23:14:45Z",
              "updatedAt": "2024-05-15T23:14:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56vNv_",
          "commit": {
            "abbreviatedOid": "12cfb77"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-15T23:16:39Z",
          "updatedAt": "2024-05-15T23:16:39Z",
          "comments": [
            {
              "originalPosition": 85,
              "body": "```suggestion\r\nThe `status_assertion_requests` MUST be set with an array of strings, where\r\neach string within the array represents a Digital Credential Status Assertion Request.\r\n```",
              "createdAt": "2024-05-15T23:16:39Z",
              "updatedAt": "2024-05-15T23:16:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56vN4O",
          "commit": {
            "abbreviatedOid": "12cfb77"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-15T23:17:23Z",
          "updatedAt": "2024-05-15T23:17:23Z",
          "comments": [
            {
              "originalPosition": 193,
              "body": "```suggestion\r\nwhere each of them represent a Status Assertion Response object and the following requirements are met:\r\n```",
              "createdAt": "2024-05-15T23:17:23Z",
              "updatedAt": "2024-05-15T23:17:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56vOVT",
          "commit": {
            "abbreviatedOid": "12cfb77"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-15T23:18:10Z",
          "updatedAt": "2024-05-15T23:18:10Z",
          "comments": [
            {
              "originalPosition": 194,
              "body": "at the same position ... ? of what.",
              "createdAt": "2024-05-15T23:18:10Z",
              "updatedAt": "2024-05-15T23:18:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56vOX4",
          "commit": {
            "abbreviatedOid": "12cfb77"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-15T23:18:25Z",
          "updatedAt": "2024-05-15T23:18:25Z",
          "comments": [
            {
              "originalPosition": 197,
              "body": "```suggestion\r\nset to \"status-assertion-error+{jwt,cwt}\" or \"status-assertion+{jwt,cwt}\"\r\n```",
              "createdAt": "2024-05-15T23:18:25Z",
              "updatedAt": "2024-05-15T23:18:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56vOdv",
          "commit": {
            "abbreviatedOid": "12cfb77"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-15T23:18:38Z",
          "updatedAt": "2024-05-15T23:18:38Z",
          "comments": [
            {
              "originalPosition": 198,
              "body": "```suggestion\r\n- The corresponding entry in the response MUST be of the same type as requested. For example,\r\n```",
              "createdAt": "2024-05-15T23:18:38Z",
              "updatedAt": "2024-05-15T23:18:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56x5Iu",
          "commit": {
            "abbreviatedOid": "12cfb77"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-16T08:01:27Z",
          "updatedAt": "2024-05-16T08:01:27Z",
          "comments": [
            {
              "originalPosition": 194,
              "body": "```suggestion\r\n- Each element in the array MUST match the corresponding element in the request array at the same index\r\n```",
              "createdAt": "2024-05-16T08:01:27Z",
              "updatedAt": "2024-05-16T08:01:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56ywIz",
          "commit": {
            "abbreviatedOid": "d116850"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-05-16T09:18:57Z",
          "updatedAt": "2024-05-16T09:41:23Z",
          "comments": [
            {
              "originalPosition": 167,
              "body": "```suggestion\r\n| **cnf** | JSON object containing the confirmation method. Its value MUST be compliant with one contained in the related Digital Credential. For instance, if `cnf.jwk` is used within the Digital Credential, the same value MUST set within the Status Assertion Request.\r\n```",
              "createdAt": "2024-05-16T09:18:57Z",
              "updatedAt": "2024-05-16T09:41:23Z"
            },
            {
              "originalPosition": 192,
              "body": "```suggestion\r\n- Each element in the array MUST match the corresponding element in the request array at the same index to which it is related.\r\n```",
              "createdAt": "2024-05-16T09:20:07Z",
              "updatedAt": "2024-05-16T09:41:23Z"
            },
            {
              "originalPosition": 193,
              "body": "```suggestion\r\n- Each element MUST contain the error or the status of the assertion using the `typ` member.\r\n```",
              "createdAt": "2024-05-16T09:20:19Z",
              "updatedAt": "2024-05-16T09:41:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56zv_v",
          "commit": {
            "abbreviatedOid": "cbfcbe1"
          },
          "author": "marinaado",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "It looks OK to me. A separate PR will be needed thought for status assertion response errors.",
          "createdAt": "2024-05-16T10:52:24Z",
          "updatedAt": "2024-05-16T10:52:24Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s565rD7",
          "commit": {
            "abbreviatedOid": "d34cab6"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-16T21:42:52Z",
          "updatedAt": "2024-05-16T21:42:52Z",
          "comments": [
            {
              "originalPosition": 92,
              "body": "```suggestion\r\nusing the confirmation method contained within the Digital Credential where the Status Assertion Request object is referred to;\r\n```",
              "createdAt": "2024-05-16T21:42:52Z",
              "updatedAt": "2024-05-16T21:42:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s565rSU",
          "commit": {
            "abbreviatedOid": "d34cab6"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-16T21:43:37Z",
          "updatedAt": "2024-05-16T21:43:38Z",
          "comments": [
            {
              "originalPosition": 94,
              "body": "```suggestion\r\nto which each Status Assertion Request object refers.\r\n```",
              "createdAt": "2024-05-16T21:43:37Z",
              "updatedAt": "2024-05-16T21:43:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s565rlX",
          "commit": {
            "abbreviatedOid": "d34cab6"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-16T21:44:46Z",
          "updatedAt": "2024-05-16T21:44:47Z",
          "comments": [
            {
              "originalPosition": 107,
              "body": "```suggestion\r\n    \"error_description\": \"The signature of the status assertion request is not valid\"\r\n```",
              "createdAt": "2024-05-16T21:44:46Z",
              "updatedAt": "2024-05-16T21:44:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s565sAO",
          "commit": {
            "abbreviatedOid": "d34cab6"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-16T21:46:18Z",
          "updatedAt": "2024-05-16T21:46:18Z",
          "comments": [
            {
              "originalPosition": 177,
              "body": "```suggestion\r\nnamed `status_assertion_responses`, which contains the Status Assertions and or the Status Assertion Errors related to the request made by the\r\n```",
              "createdAt": "2024-05-16T21:46:18Z",
              "updatedAt": "2024-05-16T21:46:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s565sWP",
          "commit": {
            "abbreviatedOid": "d34cab6"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-16T21:47:20Z",
          "updatedAt": "2024-05-16T21:47:20Z",
          "comments": [
            {
              "originalPosition": 178,
              "body": "```suggestion\r\nWallet Instance. In the non-normative example below is represented an HTTP Response with the `status_assertion_responses` JSON member:\r\n```",
              "createdAt": "2024-05-16T21:47:20Z",
              "updatedAt": "2024-05-16T21:47:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s565tL7",
          "commit": {
            "abbreviatedOid": "d34cab6"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-16T21:48:43Z",
          "updatedAt": "2024-05-16T21:48:43Z",
          "comments": [
            {
              "originalPosition": 191,
              "body": "```suggestion\r\nwhere each of them represent a Status Assertion Response object or a Status Assertion Error object.\r\nFor each entry in the `status_assertion_responses` array, the following requirements are met:\r\n```",
              "createdAt": "2024-05-16T21:48:43Z",
              "updatedAt": "2024-05-16T21:48:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s565tVK",
          "commit": {
            "abbreviatedOid": "d34cab6"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-16T21:48:56Z",
          "updatedAt": "2024-05-16T21:48:56Z",
          "comments": [
            {
              "originalPosition": 194,
              "body": "```suggestion\r\nset to \"status-assertion-error+{jwt,cwt}\" or \"status-assertion+{jwt,cwt}\", depending by the object type.\r\n```",
              "createdAt": "2024-05-16T21:48:56Z",
              "updatedAt": "2024-05-16T21:48:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s565uKf",
          "commit": {
            "abbreviatedOid": "d3d1dd0"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-16T21:49:57Z",
          "updatedAt": "2024-05-16T21:49:57Z",
          "comments": [
            {
              "originalPosition": 80,
              "body": "```suggestion\r\nregarding multiple Digital Credentials, and MUST contain a JSON object with\r\n```",
              "createdAt": "2024-05-16T21:49:57Z",
              "updatedAt": "2024-05-16T21:49:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s565uvX",
          "commit": {
            "abbreviatedOid": "d3d1dd0"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-16T21:50:39Z",
          "updatedAt": "2024-05-16T21:50:40Z",
          "comments": [
            {
              "originalPosition": 132,
              "body": "```suggestion\r\n| **aud** | It MUST be set with the Credential Issuer Status Assertion endpoint URL as value that identify the intended audience. | {{RFC9126}}, {{RFC7519}} |\r\n```",
              "createdAt": "2024-05-16T21:50:40Z",
              "updatedAt": "2024-05-16T21:50:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s565wC_",
          "commit": {
            "abbreviatedOid": "bfaef66"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-16T21:52:20Z",
          "updatedAt": "2024-05-16T21:52:20Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s565-qV",
          "commit": {
            "abbreviatedOid": "bfaef66"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Thanks for all these updates!",
          "createdAt": "2024-05-16T22:25:56Z",
          "updatedAt": "2024-05-16T22:25:56Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s56-2KK",
          "commit": {
            "abbreviatedOid": "bfaef66"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-17T12:36:21Z",
          "updatedAt": "2024-05-17T12:36:21Z",
          "comments": []
        }
      ]
    },
    {
      "number": 37,
      "id": "PR_kwDOK4XJ0s5unkTi",
      "title": "credential_pop typ with status-attestation-request+cwt + huge editorials",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/pull/37",
      "state": "MERGED",
      "author": "SaraConsoliACN",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "this commit may resolve issue #20.",
      "createdAt": "2024-05-06T10:15:37Z",
      "updatedAt": "2024-05-20T07:59:35Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "baseRefName": "main",
      "baseRefOid": "2b2ffe1d49898640612021fa82b0788e3e25b809",
      "headRepository": "SaraConsoliACN/draft-demarco-oauth-status-attestations",
      "headRefName": "SaraConsoliACN-20240506_issue20",
      "headRefOid": "30b719e5e71b64781172e02898d97556312510cc",
      "closedAt": "2024-05-20T07:59:35Z",
      "mergedAt": "2024-05-20T07:59:35Z",
      "mergedBy": "peppelinux",
      "mergeCommit": {
        "oid": "7c3d3dff4ba99b3330d98dfc19fa61c1afb7b1ff"
      },
      "comments": [
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "This PR is ready to be merged, a further PR will be create to address @marinaado 's comment  https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/45#issuecomment-2117623296 and the table related to the errors where the placeholder is here defined: https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/37/files#diff-6018989306b8996e79d471eb123fc3b59796d1635384b6faac8cdb36cd5f49ccR472\r\n\r\nregarding the first comment, since it is required that the status assertion issuer always respond with an application/json containing the status_assertion_errors, I'd try to use a general approach without defining specialized error section for both the requests and the responses",
          "createdAt": "2024-05-17T20:22:29Z",
          "updatedAt": "2024-05-17T20:22:36Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s55oyWp",
          "commit": {
            "abbreviatedOid": "0c39d9b"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-05-06T13:02:45Z",
          "updatedAt": "2024-05-06T13:04:47Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "```suggestion\r\ndefined by JSON Web Token (JWT) {{RFC7519}}, the term \"CBOR Web Token (CWT)\" defined in {{RFC8392}}.\r\n```",
              "createdAt": "2024-05-06T13:02:45Z",
              "updatedAt": "2024-05-06T13:04:47Z"
            },
            {
              "originalPosition": 22,
              "body": "we should say here in which cases, when JWT is must be set to ... when CWT ...",
              "createdAt": "2024-05-06T13:03:21Z",
              "updatedAt": "2024-05-06T13:04:47Z"
            },
            {
              "originalPosition": 34,
              "body": "as mentioned before",
              "createdAt": "2024-05-06T13:04:07Z",
              "updatedAt": "2024-05-06T13:04:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s558S4W",
          "commit": {
            "abbreviatedOid": "0c39d9b"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-08T14:28:26Z",
          "updatedAt": "2024-05-08T14:28:26Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "if this is a JOSE header it cannot be CWT\r\n\r\nthis is related to JOSE",
              "createdAt": "2024-05-08T14:28:26Z",
              "updatedAt": "2024-05-08T14:28:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56M7K1",
          "commit": {
            "abbreviatedOid": "0770b73"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-10T14:27:45Z",
          "updatedAt": "2024-05-10T14:27:45Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "```suggestion\r\n| Header Parameter Name | Description | Reference |\r\n```",
              "createdAt": "2024-05-10T14:27:45Z",
              "updatedAt": "2024-05-10T14:27:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56M7WP",
          "commit": {
            "abbreviatedOid": "0770b73"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-10T14:28:08Z",
          "updatedAt": "2024-05-10T14:28:08Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "```suggestion\r\n| Payload Parameter Name | Description | Reference |\r\n```",
              "createdAt": "2024-05-10T14:28:08Z",
              "updatedAt": "2024-05-10T14:28:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56M7ed",
          "commit": {
            "abbreviatedOid": "0770b73"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-10T14:28:24Z",
          "updatedAt": "2024-05-10T14:28:25Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "```suggestion\r\n| Header Parameter Name | Description | Reference |\r\n```",
              "createdAt": "2024-05-10T14:28:24Z",
              "updatedAt": "2024-05-10T14:28:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56M7su",
          "commit": {
            "abbreviatedOid": "0770b73"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-10T14:28:50Z",
          "updatedAt": "2024-05-10T14:28:50Z",
          "comments": [
            {
              "originalPosition": 49,
              "body": "```suggestion\r\n| Payload Parameter Name | Description | Reference |\r\n```",
              "createdAt": "2024-05-10T14:28:50Z",
              "updatedAt": "2024-05-10T14:28:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56VJay",
          "commit": {
            "abbreviatedOid": "c0a708c"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-13T10:58:56Z",
          "updatedAt": "2024-05-13T10:58:57Z",
          "comments": [
            {
              "originalPosition": 3,
              "body": "please mention that the prosed non normative example is provided in an unencoded diagnostic representation ...",
              "createdAt": "2024-05-13T10:58:56Z",
              "updatedAt": "2024-05-13T10:58:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56VKC9",
          "commit": {
            "abbreviatedOid": "80fc807"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-13T11:00:24Z",
          "updatedAt": "2024-05-13T11:00:25Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "it is not the cnf itself bu the sub-member contained in it, such as jwk for JWT and Cose Key for CWT, while there may be other parameters like `did` for instance\r\n\r\nthis must be included in this description",
              "createdAt": "2024-05-13T11:00:24Z",
              "updatedAt": "2024-05-13T11:00:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56eccl",
          "commit": {
            "abbreviatedOid": "c0a708c"
          },
          "author": "SaraConsoliACN",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-14T09:25:44Z",
          "updatedAt": "2024-05-14T09:25:45Z",
          "comments": [
            {
              "originalPosition": 3,
              "body": "The commit that aims to resolve this is: https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/37/commits/5980f052b048e7d7cc6aad338e7f6386646e00e5",
              "createdAt": "2024-05-14T09:25:44Z",
              "updatedAt": "2024-05-14T09:25:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56ech2",
          "commit": {
            "abbreviatedOid": "80fc807"
          },
          "author": "SaraConsoliACN",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-14T09:25:53Z",
          "updatedAt": "2024-05-14T09:25:54Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "The commit that aims to resolve this is: https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/37/commits/5980f052b048e7d7cc6aad338e7f6386646e00e5",
              "createdAt": "2024-05-14T09:25:54Z",
              "updatedAt": "2024-05-14T09:25:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56eYVK",
          "commit": {
            "abbreviatedOid": "fde3ce4"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-05-14T09:18:23Z",
          "updatedAt": "2024-05-14T09:27:52Z",
          "comments": [
            {
              "originalPosition": 103,
              "body": "```suggestion\r\nBelow is a non-normative example of a Status Assertion Request object in CWT format represented in CBOR diagnostic notation format {{rfc8152}}, where the CWT headers and payload are presented without applying signature and encoding for better readability:\r\n```\r\n\r\n1. the correct term according to rfc8152 is \"CBOR diagnostic notation format\"\r\n2. according to the previous decision, we do not use the term \"credential pop\" but \"Status Assertion Request object\"",
              "createdAt": "2024-05-14T09:18:23Z",
              "updatedAt": "2024-05-14T09:27:52Z"
            },
            {
              "originalPosition": 176,
              "body": "```suggestion\r\n| **cnf** | JSON object containing the cryptographic key binding. The sub-member contained within `cnf` member, such as `jwk` for JWT and `Cose_Key` for CWT, MUST match with the one provided within the related Digital Credential. Other confirmation methods can be utilized when the referenced Digital Credential supports them, in accordance with the relevant standards. | {{RFC7800}} Section 3.1 |\r\n```",
              "createdAt": "2024-05-14T09:23:40Z",
              "updatedAt": "2024-05-14T09:27:52Z"
            },
            {
              "originalPosition": 165,
              "body": "```suggestion\r\n| **kid** | Unique identifier of the Credential Issuer JWK | {{RFC7515}} |\r\n```",
              "createdAt": "2024-05-14T09:27:34Z",
              "updatedAt": "2024-05-14T09:27:52Z"
            },
            {
              "originalPosition": 165,
              "body": "JWT != JWK therefore != CWT",
              "createdAt": "2024-05-14T09:27:48Z",
              "updatedAt": "2024-05-14T09:27:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56ee4n",
          "commit": {
            "abbreviatedOid": "fde3ce4"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-05-14T09:30:00Z",
          "updatedAt": "2024-05-14T09:36:02Z",
          "comments": [
            {
              "originalPosition": 69,
              "body": "```suggestion\r\n| **kid** | Unique identifier of the JWK or \"Cose Key\" used for the signature of the Status Attestation Request, it MUST match the one contained in the Credential. | {{RFC7515}} |\r\n```\r\n\r\nJWT != JWK and therefore != CWT\r\n\r\nplease check Cose key if good.",
              "createdAt": "2024-05-14T09:30:00Z",
              "updatedAt": "2024-05-14T09:36:02Z"
            },
            {
              "originalPosition": 73,
              "body": "```suggestion\r\n| **iss** | Wallet identifier. | {{RFC9126}}, {{RFC7519}} |\r\n```\r\n\r\nconcerns here, since a wallet identifier can be a vector of traceability. We need further explaination about the evidence that this identifier is not unique and absolute, preventing the traceability of the wallet.",
              "createdAt": "2024-05-14T09:31:52Z",
              "updatedAt": "2024-05-14T09:36:02Z"
            },
            {
              "originalPosition": 61,
              "body": "I would rephrase saying using the same confirmation method referenced ... \r\n\r\ntherefore using the elements defined in RFC7800",
              "createdAt": "2024-05-14T09:33:25Z",
              "updatedAt": "2024-05-14T09:36:02Z"
            },
            {
              "originalPosition": 133,
              "body": "```suggestion\r\nAs exemplified for the JWT format, below is a non-normative example of a Status Assertion Request object in CWT format provided in CBOR diagnostic notation format, as defined in {{rfc8152}} where the CWT headers and payload are represented without applying signature and encoding for better readability:\r\n```",
              "createdAt": "2024-05-14T09:35:34Z",
              "updatedAt": "2024-05-14T09:36:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56n7VM",
          "commit": {
            "abbreviatedOid": "49ddfd8"
          },
          "author": "SaraConsoliACN",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-15T08:34:28Z",
          "updatedAt": "2024-05-15T08:34:28Z",
          "comments": [
            {
              "originalPosition": 61,
              "body": "The commit https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/37/commits/5f23e8e156d732e1d2fbad89b81b62b7952f69fd aims to resolve this comment.",
              "createdAt": "2024-05-15T08:34:28Z",
              "updatedAt": "2024-05-15T08:34:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56n7cc",
          "commit": {
            "abbreviatedOid": "49ddfd8"
          },
          "author": "SaraConsoliACN",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-15T08:34:41Z",
          "updatedAt": "2024-05-15T08:34:42Z",
          "comments": [
            {
              "originalPosition": 73,
              "body": "The commit https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/37/commits/5f23e8e156d732e1d2fbad89b81b62b7952f69fd aims to resolve this comment.",
              "createdAt": "2024-05-15T08:34:41Z",
              "updatedAt": "2024-05-15T08:34:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56q6TF",
          "commit": {
            "abbreviatedOid": "5f23e8e"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-05-15T13:42:43Z",
          "updatedAt": "2024-05-15T13:56:11Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "the wallet identifier is not a framework",
              "createdAt": "2024-05-15T13:42:43Z",
              "updatedAt": "2024-05-15T13:56:11Z"
            },
            {
              "originalPosition": 34,
              "body": "here, we must use the term \"confirmation methods\" to not use only cryptographic key bindings",
              "createdAt": "2024-05-15T13:43:25Z",
              "updatedAt": "2024-05-15T13:56:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56rgdB",
          "commit": {
            "abbreviatedOid": "5f23e8e"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-15T14:37:14Z",
          "updatedAt": "2024-05-15T14:37:14Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "The last sentence (\"considering that....\") is not clear to me. Is there a reason why we decided to emphasize that the Wallet identifier is out of the scope of this spec? I suggest removing this sentence., if you agree.\r\n@OR13 @marinaado ",
              "createdAt": "2024-05-15T14:37:14Z",
              "updatedAt": "2024-05-15T14:37:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56ru8F",
          "commit": {
            "abbreviatedOid": "5f23e8e"
          },
          "author": "SaraConsoliACN",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-15T14:58:07Z",
          "updatedAt": "2024-05-15T14:58:07Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "Resolved with the commit https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/37/commits/ebd064bad946d0a1315417307c366642a6f625f7 ",
              "createdAt": "2024-05-15T14:58:07Z",
              "updatedAt": "2024-05-15T14:58:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56t5do",
          "commit": {
            "abbreviatedOid": "5f23e8e"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-15T19:35:44Z",
          "updatedAt": "2024-05-15T19:35:44Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "@fmarino-ipzs the way a wallet can be identified or the value to be supposed to be used for identify a wallet is definitively out of the scope of this spec",
              "createdAt": "2024-05-15T19:35:44Z",
              "updatedAt": "2024-05-15T19:35:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56t6mh",
          "commit": {
            "abbreviatedOid": "ebd064b"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-15T19:37:55Z",
          "updatedAt": "2024-05-15T19:37:55Z",
          "comments": [
            {
              "originalPosition": 70,
              "body": "the digital credential is not enclosed, an hash of it is provided in the status assertion request and the same hash in the status assertion response",
              "createdAt": "2024-05-15T19:37:55Z",
              "updatedAt": "2024-05-15T19:37:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56t7Fk",
          "commit": {
            "abbreviatedOid": "ebd064b"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-15T19:38:37Z",
          "updatedAt": "2024-05-15T19:38:38Z",
          "comments": [
            {
              "originalPosition": 91,
              "body": "```suggestion\r\nBelow is a non-normative example of a Status Assertion Request, demonstrating the proof of possession of the related Digital Credential, with\r\n```",
              "createdAt": "2024-05-15T19:38:37Z",
              "updatedAt": "2024-05-15T19:39:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56_XZn",
          "commit": {
            "abbreviatedOid": "ea76259"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-17T13:29:23Z",
          "updatedAt": "2024-05-17T13:29:23Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s57C_mw",
          "commit": {
            "abbreviatedOid": "b737797"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-17T20:54:07Z",
          "updatedAt": "2024-05-17T20:54:08Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "is there interest in suspension, revocation or other dynamic state? see https://w3c.github.io/vc-bitstring-status-list/#example-example-statuslistcredential-using-more-complex-entries\r\n\r\nSome parties have use cases that include dynamic state that is an enumeration instead of a boolean.",
              "createdAt": "2024-05-17T20:54:08Z",
              "updatedAt": "2024-05-17T20:54:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s57C_oz",
          "commit": {
            "abbreviatedOid": "b737797"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-17T20:54:15Z",
          "updatedAt": "2024-05-17T20:54:15Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s57F2zo",
          "commit": {
            "abbreviatedOid": "b737797"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-19T19:35:19Z",
          "updatedAt": "2024-05-19T19:35:20Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "thank you, moved to an issue",
              "createdAt": "2024-05-19T19:35:19Z",
              "updatedAt": "2024-05-19T19:35:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s57F20M",
          "commit": {
            "abbreviatedOid": "b737797"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-19T19:35:37Z",
          "updatedAt": "2024-05-19T19:35:37Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/49",
              "createdAt": "2024-05-19T19:35:37Z",
              "updatedAt": "2024-05-19T19:35:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s57F23W",
          "commit": {
            "abbreviatedOid": "b737797"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-19T19:37:46Z",
          "updatedAt": "2024-05-19T19:37:46Z",
          "comments": [
            {
              "originalPosition": 294,
              "body": "```suggestion\r\nHTTP/1.1 200 Created\r\n```",
              "createdAt": "2024-05-19T19:37:46Z",
              "updatedAt": "2024-05-19T19:37:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s57F24v",
          "commit": {
            "abbreviatedOid": "b737797"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-19T19:38:50Z",
          "updatedAt": "2024-05-19T19:38:50Z",
          "comments": [
            {
              "originalPosition": 330,
              "body": "```suggestion\r\n- The corresponding entry in the response MUST be of the same data format as requested. For example,\r\n```",
              "createdAt": "2024-05-19T19:38:50Z",
              "updatedAt": "2024-05-19T19:38:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s57F3Ex",
          "commit": {
            "abbreviatedOid": "e103c83"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-19T19:42:47Z",
          "updatedAt": "2024-05-19T19:42:47Z",
          "comments": [
            {
              "originalPosition": 169,
              "body": "```suggestion\r\n| **iss** | Status Assertion Request Issuer identifier. The value is supposed to be used for identifying the Wallet that has issued the request. It is out of scope for this document defining how this value must be set. | {{RFC9126}}, {{RFC7519}} |\r\n```",
              "createdAt": "2024-05-19T19:42:47Z",
              "updatedAt": "2024-05-19T19:42:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s57F3F1",
          "commit": {
            "abbreviatedOid": "e103c83"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-19T19:43:12Z",
          "updatedAt": "2024-05-19T19:43:12Z",
          "comments": [
            {
              "originalPosition": 171,
              "body": "```suggestion\r\n| **aud** | It MUST be set with the Credential Issuer Status Attestation endpoint URL as value that identify the intended audience. | {{RFC9126}}, {{RFC7519}} |\r\n| **exp** | UNIX Timestamp with the expiration time of the JWT. It MUST be superior to the value set for `iat` . | {{RFC9126}}, {{RFC7519}}, {{RFC7515}} |\r\n```",
              "createdAt": "2024-05-19T19:43:12Z",
              "updatedAt": "2024-05-19T19:43:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s57F3JY",
          "commit": {
            "abbreviatedOid": "e103c83"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-19T19:43:29Z",
          "updatedAt": "2024-05-19T19:43:29Z",
          "comments": [
            {
              "originalPosition": 195,
              "body": "```suggestion\r\n    \"credential_hash_alg\": \"sha-256\"\r\n```",
              "createdAt": "2024-05-19T19:43:29Z",
              "updatedAt": "2024-05-19T19:43:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s57Hpyr",
          "commit": {
            "abbreviatedOid": "30b719e"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-20T07:58:30Z",
          "updatedAt": "2024-05-20T07:58:30Z",
          "comments": []
        }
      ]
    },
    {
      "number": 38,
      "id": "PR_kwDOK4XJ0s5u2TkZ",
      "title": "Draft name changed",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/pull/38",
      "state": "MERGED",
      "author": "SaraConsoliACN",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This commit solves the issue #5",
      "createdAt": "2024-05-08T08:19:45Z",
      "updatedAt": "2024-05-09T16:41:23Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "baseRefName": "main",
      "baseRefOid": "d182c8792b533f53e86265218000558d43f5a76a",
      "headRepository": "SaraConsoliACN/draft-demarco-oauth-status-attestations",
      "headRefName": "SaraConsoliACN-20240508_1",
      "headRefOid": "0b275917ae1e6287e1201420fe79b208047df3db",
      "closedAt": "2024-05-09T16:41:23Z",
      "mergedAt": "2024-05-09T16:41:23Z",
      "mergedBy": "peppelinux",
      "mergeCommit": {
        "oid": "d3b2d0827a0b313bad03549aa0e180075211e8e4"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s555Tl3",
          "commit": {
            "abbreviatedOid": "5e03b67"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-08T08:56:11Z",
          "updatedAt": "2024-05-08T08:56:11Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s56EYJM",
          "commit": {
            "abbreviatedOid": "5e03b67"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-09T13:29:20Z",
          "updatedAt": "2024-05-09T13:29:20Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s56E5J5",
          "commit": {
            "abbreviatedOid": "5e03b67"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-09T14:32:16Z",
          "updatedAt": "2024-05-09T14:32:16Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s56F70O",
          "commit": {
            "abbreviatedOid": "a54ce41"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-09T16:40:10Z",
          "updatedAt": "2024-05-09T16:40:10Z",
          "comments": [
            {
              "originalPosition": 523,
              "body": "```suggestion\r\n\r\n-02\r\n\r\n* Name of the draft changed from `OAuth Status Attestations` to `OAuth Status Assertions`\r\n```",
              "createdAt": "2024-05-09T16:40:10Z",
              "updatedAt": "2024-05-09T16:40:10Z"
            }
          ]
        }
      ]
    },
    {
      "number": 42,
      "id": "PR_kwDOK4XJ0s5vFTiN",
      "title": "Editorial changes all through the specification",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/pull/42",
      "state": "MERGED",
      "author": "marinaado",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-05-10T10:14:17Z",
      "updatedAt": "2024-05-15T06:29:10Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "baseRefName": "main",
      "baseRefOid": "85337bd85e2eba1f68c885748116e328975e1935",
      "headRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "headRefName": "marinaado-patch-1",
      "headRefOid": "16edaed4c79e18db40c5f78a1b5978d63e80d8db",
      "closedAt": "2024-05-14T08:35:50Z",
      "mergedAt": "2024-05-14T08:35:50Z",
      "mergedBy": "peppelinux",
      "mergeCommit": {
        "oid": "8bfb6d148916a4f2730afb1148e5bd3ccae8515f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s56L9EO",
          "commit": {
            "abbreviatedOid": "4dea78b"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-10T12:15:10Z",
          "updatedAt": "2024-05-10T12:15:10Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nThe figure below illustrates the process by which a Wallet Instance requests a Status Assertion from the Credential Issuer and subsequently receives it.\r\n```\r\n\r\nwe already have the text under the figure defining its number.",
              "createdAt": "2024-05-10T12:15:10Z",
              "updatedAt": "2024-05-10T12:15:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56L9jH",
          "commit": {
            "abbreviatedOid": "4dea78b"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-10T12:16:27Z",
          "updatedAt": "2024-05-10T12:16:28Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "I'm wondering if it would be the good time to include a link to \"Article 8 of the European Convention on Human Rights\"",
              "createdAt": "2024-05-10T12:16:27Z",
              "updatedAt": "2024-05-10T12:16:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56L-FO",
          "commit": {
            "abbreviatedOid": "4dea78b"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-10T12:17:49Z",
          "updatedAt": "2024-05-10T12:17:50Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "it would be good having a link or a ref to \"European Union's General Data Protection Regulation (GDPR)\" as well, to specific articles defining this requirements",
              "createdAt": "2024-05-10T12:17:50Z",
              "updatedAt": "2024-05-10T12:17:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56L-9x",
          "commit": {
            "abbreviatedOid": "4dea78b"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-10T12:20:03Z",
          "updatedAt": "2024-05-10T12:20:04Z",
          "comments": [
            {
              "originalPosition": 79,
              "body": "```suggestion\r\n6. **Real-time validation**: OAuth Status Lists provide the possibility to do real-time validation of the Digital Credential status. To support the real-time status validation use cases, a Wallet MAY implement strategy to request a new Status Assertion before sending it to the Verifier.\r\n```",
              "createdAt": "2024-05-10T12:20:03Z",
              "updatedAt": "2024-05-10T12:20:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56V7YG",
          "commit": {
            "abbreviatedOid": "4dea78b"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-13T12:31:56Z",
          "updatedAt": "2024-05-13T12:31:56Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "done",
              "createdAt": "2024-05-13T12:31:56Z",
              "updatedAt": "2024-05-13T12:31:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56V_jc",
          "commit": {
            "abbreviatedOid": "4dea78b"
          },
          "author": "marinaado",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-13T12:39:56Z",
          "updatedAt": "2024-05-13T12:39:56Z",
          "comments": [
            {
              "originalPosition": 79,
              "body": "I was thinking again about this again and perhaps we should add that this is possible in online scenarios only. ",
              "createdAt": "2024-05-13T12:39:56Z",
              "updatedAt": "2024-05-13T12:39:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56WAYt",
          "commit": {
            "abbreviatedOid": "4dea78b"
          },
          "author": "marinaado",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-13T12:41:37Z",
          "updatedAt": "2024-05-13T12:41:37Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "I usually prefer to enumerate the figures and then to specifically point to them in the text. But i guess since the image is right bellow this works as well. ",
              "createdAt": "2024-05-13T12:41:37Z",
              "updatedAt": "2024-05-13T12:41:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56Wqbg",
          "commit": {
            "abbreviatedOid": "82be3b6"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-13T13:47:18Z",
          "updatedAt": "2024-05-13T13:47:18Z",
          "comments": [
            {
              "originalPosition": 84,
              "body": "we should move these to informative references ",
              "createdAt": "2024-05-13T13:47:18Z",
              "updatedAt": "2024-05-13T13:47:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56WtCB",
          "commit": {
            "abbreviatedOid": "82be3b6"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-13T13:51:18Z",
          "updatedAt": "2024-05-13T13:51:18Z",
          "comments": [
            {
              "originalPosition": 221,
              "body": "```suggestion\r\nto the confirmation claim assigned by the issuer and contained within\r\n```",
              "createdAt": "2024-05-13T13:51:18Z",
              "updatedAt": "2024-05-13T13:51:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56Wvoe",
          "commit": {
            "abbreviatedOid": "82be3b6"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-13T13:55:40Z",
          "updatedAt": "2024-05-13T13:55:40Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s56W55I",
          "commit": {
            "abbreviatedOid": "82be3b6"
          },
          "author": "SaraConsoliACN",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-13T14:11:12Z",
          "updatedAt": "2024-05-13T14:11:13Z",
          "comments": [
            {
              "originalPosition": 84,
              "body": "It may be resolved by commit https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/42/commits/82be3b6d5af95e2146bcb24c5aca642a56e4dfb7",
              "createdAt": "2024-05-13T14:11:12Z",
              "updatedAt": "2024-05-13T14:11:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56YLkl",
          "commit": {
            "abbreviatedOid": "82be3b6"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-13T16:20:08Z",
          "updatedAt": "2024-05-13T16:20:08Z",
          "comments": [
            {
              "originalPosition": 221,
              "body": "this text generalize the scope of the cnf claim within the jwt/cwt\r\n\r\nthis makes sense to me",
              "createdAt": "2024-05-13T16:20:08Z",
              "updatedAt": "2024-05-13T16:20:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56YNel",
          "commit": {
            "abbreviatedOid": "82be3b6"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-13T16:24:29Z",
          "updatedAt": "2024-05-13T16:24:30Z",
          "comments": [
            {
              "originalPosition": 84,
              "body": "@SaraConsoliACN Orie is saying that instead using a markdown href it would be better to use the informative reference section if I get it right\r\n\r\n@marinaado WDYT?",
              "createdAt": "2024-05-13T16:24:29Z",
              "updatedAt": "2024-05-13T16:24:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56d8Zl",
          "commit": {
            "abbreviatedOid": "82be3b6"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-14T08:33:33Z",
          "updatedAt": "2024-05-14T08:33:33Z",
          "comments": [
            {
              "originalPosition": 84,
              "body": "moved here: https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/44",
              "createdAt": "2024-05-14T08:33:33Z",
              "updatedAt": "2024-05-14T08:33:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56d8pA",
          "commit": {
            "abbreviatedOid": "16edaed"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-14T08:33:54Z",
          "updatedAt": "2024-05-14T08:33:54Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s56mrC2",
          "commit": {
            "abbreviatedOid": "16edaed"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-05-15T06:02:31Z",
          "updatedAt": "2024-05-15T06:29:10Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "```suggestion\nThe figure below illustrates the process by which a Wallet Instance\n```\n",
              "createdAt": "2024-05-15T06:02:31Z",
              "updatedAt": "2024-05-15T06:29:10Z"
            },
            {
              "originalPosition": 129,
              "body": "```suggestion\n6. **Real-time validation**: To support\n```\n",
              "createdAt": "2024-05-15T06:11:43Z",
              "updatedAt": "2024-05-15T06:29:10Z"
            },
            {
              "originalPosition": 177,
              "body": "This does not provide a proof of possession. It is only a necessary condition but not sufficient ",
              "createdAt": "2024-05-15T06:19:03Z",
              "updatedAt": "2024-05-15T06:29:10Z"
            }
          ]
        }
      ]
    },
    {
      "number": 45,
      "id": "PR_kwDOK4XJ0s5vr_bN",
      "title": "Extended Error Codes PR",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/pull/45",
      "state": "CLOSED",
      "author": "SaraConsoliACN",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This PR aims to resolve issue #14.",
      "createdAt": "2024-05-16T15:59:10Z",
      "updatedAt": "2024-05-17T20:52:22Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "baseRefName": "main",
      "baseRefOid": "2b2ffe1d49898640612021fa82b0788e3e25b809",
      "headRepository": "SaraConsoliACN/draft-demarco-oauth-status-attestations",
      "headRefName": "SaraConsoliACN-extendedErrorCodes-issue14",
      "headRefOid": "851a38f2864a6ca583b2bac6e7d2ba5862233591",
      "closedAt": "2024-05-17T15:04:49Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "pleaser close this PR and revamp it according the structure proposed here: https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/37/files#diff-6018989306b8996e79d471eb123fc3b59796d1635384b6faac8cdb36cd5f49ccR453",
          "createdAt": "2024-05-17T13:27:53Z",
          "updatedAt": "2024-05-17T13:27:53Z"
        },
        {
          "author": "marinaado",
          "authorAssociation": "COLLABORATOR",
          "body": "Right know, we have two sections describing errors- one in the Assertion Request chapter and second in the Assertion Response chapter. There are two types of errors also, one for bad request and second for invalid credential. I would suggest to move all the text about the errors to the Assertion Response chapter as we are talking about how to construct response in the case of one of these two errors. Then we can consolidate the text. Perhaps this is a separate PR. I can make it if we agree it is a good idea. ",
          "createdAt": "2024-05-17T13:34:55Z",
          "updatedAt": "2024-05-17T13:34:55Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "@marinaado we can find an editorial solution for this, at the current stage the status_assertion_responses is returned with both success or errors, since the request is made for several assertions where all or only part of these may raise errors\r\n\r\n",
          "createdAt": "2024-05-17T15:40:53Z",
          "updatedAt": "2024-05-17T15:40:53Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s565xKh",
          "commit": {
            "abbreviatedOid": "c8d4d6d"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-16T21:54:28Z",
          "updatedAt": "2024-05-16T21:54:29Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "```suggestion\r\nSince the Status Assertion Request is an array of strings, if one or more Status\r\nAssertion Request object are made for a Digital Credential with errors,\r\n```",
              "createdAt": "2024-05-16T21:54:28Z",
              "updatedAt": "2024-05-16T21:54:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s565xpo",
          "commit": {
            "abbreviatedOid": "c8d4d6d"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-16T21:55:32Z",
          "updatedAt": "2024-05-16T21:55:32Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "```suggestion\r\nthe HTTP response status code is set to `200` including the parameters as specified in the OAuth 2.0 RFC\r\n```\r\n\r\nI didn't get the parameters as specified ...",
              "createdAt": "2024-05-16T21:55:32Z",
              "updatedAt": "2024-05-16T21:55:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s565ykE",
          "commit": {
            "abbreviatedOid": "c8d4d6d"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-16T21:57:44Z",
          "updatedAt": "2024-05-16T21:57:45Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "no\r\n\r\nRFC6749 works in a different way, we can only say that the status assertion error object data schema is inspired by the errors defined in RFC6749, using error and error_description within the payload",
              "createdAt": "2024-05-16T21:57:44Z",
              "updatedAt": "2024-05-16T21:57:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s565y_a",
          "commit": {
            "abbreviatedOid": "c8d4d6d"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-16T21:58:55Z",
          "updatedAt": "2024-05-16T21:58:56Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "```suggestion\r\n\"${base64url(json({typ: status-assertion-error+cwt, ...}))}.payload\", ... ]\r\n```\r\n\r\n@OR13 @fmarino-ipzs WDYT if the status assertion errors may be unsigned, therefore using the alg `none`?",
              "createdAt": "2024-05-16T21:58:55Z",
              "updatedAt": "2024-05-16T21:58:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56-pJd",
          "commit": {
            "abbreviatedOid": "c8d4d6d"
          },
          "author": "SaraConsoliACN",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-17T12:16:23Z",
          "updatedAt": "2024-05-17T12:16:23Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "In my opinion, status assertion errors cannot be unsigned because the description parameter requires the reason for revocation to be specified. Depending on the level of detail in the \"error_description\" field, this could lead to privacy issues.",
              "createdAt": "2024-05-17T12:16:23Z",
              "updatedAt": "2024-05-17T12:16:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s57C0ec",
          "commit": {
            "abbreviatedOid": "c8d4d6d"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-17T20:24:44Z",
          "updatedAt": "2024-05-17T20:24:45Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "therefore we must say that the error description message MUST not contain any mention to personal data or credential types\r\n\r\nbecause it's in the scope of this specification that the status assertion must not, in any case, disclose any personal data o credential data outside of an opaque value",
              "createdAt": "2024-05-17T20:24:44Z",
              "updatedAt": "2024-05-17T20:24:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s57C_Jt",
          "commit": {
            "abbreviatedOid": "c8d4d6d"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-17T20:52:22Z",
          "updatedAt": "2024-05-17T20:52:22Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "I generally don't think any specification should be encouraging the use of alg none, in the year 2024.\r\nIf its not forbidden explicitly, it should certainly not be encouraged.",
              "createdAt": "2024-05-17T20:52:22Z",
              "updatedAt": "2024-05-17T20:52:22Z"
            }
          ]
        }
      ]
    },
    {
      "number": 48,
      "id": "PR_kwDOK4XJ0s5vz8se",
      "title": "fix: status list in offline flows",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/pull/48",
      "state": "MERGED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "This PR aims to fix some discrepancies with the considerations about how status list works in the offline flows",
      "createdAt": "2024-05-17T16:05:14Z",
      "updatedAt": "2024-05-20T08:10:48Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "baseRefName": "main",
      "baseRefOid": "2b2ffe1d49898640612021fa82b0788e3e25b809",
      "headRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "headRefName": "fix-status-list-offline",
      "headRefOid": "2f7d38ea812e33645d466bf7520777a3e7f1a981",
      "closedAt": "2024-05-20T08:10:48Z",
      "mergedAt": "2024-05-20T08:10:48Z",
      "mergedBy": "peppelinux",
      "mergeCommit": {
        "oid": "62176d1bdcc2f9ba01601e3f7723d1b3ff781037"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s57A8FL",
          "commit": {
            "abbreviatedOid": "22afe5b"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-17T16:08:07Z",
          "updatedAt": "2024-05-17T16:08:07Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\nhow to download an entire Status List or a Status List Token.\r\nIn the Status List Token, the `status_list` and `sub` members are mandatory. They provide the URL and the index of the revocation entry for the Digital Credential, enabling a Verifier to check the status of the Digital Credential when a broadband connection becomes available.\r\n```",
              "createdAt": "2024-05-17T16:08:07Z",
              "updatedAt": "2024-05-17T19:56:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s57A8Wo",
          "commit": {
            "abbreviatedOid": "22afe5b"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-17T16:08:32Z",
          "updatedAt": "2024-05-17T16:08:33Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "```suggestion\r\npersistently use their preexistent Digital Credentials, without disclosing a status URL or any remote reference to it, as long as\r\n```",
              "createdAt": "2024-05-17T16:08:32Z",
              "updatedAt": "2024-05-17T16:08:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s57CsXb",
          "commit": {
            "abbreviatedOid": "6e1adcd"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-17T20:00:11Z",
          "updatedAt": "2024-05-17T20:00:11Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "```suggestion\r\n6. **Real-time validation**: OAuth Status Lists provide the possibility\r\n```",
              "createdAt": "2024-05-17T20:00:11Z",
              "updatedAt": "2024-05-17T20:00:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s57HhTt",
          "commit": {
            "abbreviatedOid": "2f7d38e"
          },
          "author": "SaraConsoliACN",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Thank you.",
          "createdAt": "2024-05-20T07:40:29Z",
          "updatedAt": "2024-05-20T07:40:29Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s57Hu9C",
          "commit": {
            "abbreviatedOid": "2f7d38e"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-20T08:09:51Z",
          "updatedAt": "2024-05-20T08:09:51Z",
          "comments": []
        }
      ]
    },
    {
      "number": 51,
      "id": "PR_kwDOK4XJ0s5v7hQO",
      "title": "fix: removed all the comparisons with oauth status list",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/pull/51",
      "state": "MERGED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "This PR aims to resolve the issue https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/50",
      "createdAt": "2024-05-20T08:33:29Z",
      "updatedAt": "2024-05-21T08:06:43Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "baseRefName": "main",
      "baseRefOid": "62176d1bdcc2f9ba01601e3f7723d1b3ff781037",
      "headRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "headRefName": "no-status-list",
      "headRefOid": "40fa005638c132b4d758bbe96f554fd43d49a30f",
      "closedAt": "2024-05-21T08:06:43Z",
      "mergedAt": "2024-05-21T08:06:43Z",
      "mergedBy": "peppelinux",
      "mergeCommit": {
        "oid": "7b631bc7d34280487f0c9c2d60a8896f202e8fc3"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s57H9sC",
          "commit": {
            "abbreviatedOid": "0eee697"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-20T08:35:46Z",
          "updatedAt": "2024-05-20T08:35:46Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "I dind't want to get in conflict about other specifications with different assumptions about what the holder, technically, is.",
              "createdAt": "2024-05-20T08:35:46Z",
              "updatedAt": "2024-05-20T08:35:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s57H-Gd",
          "commit": {
            "abbreviatedOid": "0eee697"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-20T08:36:43Z",
          "updatedAt": "2024-05-20T08:36:43Z",
          "comments": [
            {
              "originalPosition": 141,
              "body": "according to the section below \"Considerations About Revocation Verification\"",
              "createdAt": "2024-05-20T08:36:43Z",
              "updatedAt": "2024-05-20T08:36:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s57H-Q2",
          "commit": {
            "abbreviatedOid": "0eee697"
          },
          "author": "SaraConsoliACN",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-20T08:37:02Z",
          "updatedAt": "2024-05-20T08:37:02Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s57I6yZ",
          "commit": {
            "abbreviatedOid": "0eee697"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-20T10:54:07Z",
          "updatedAt": "2024-05-20T10:54:07Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s57JOeW",
          "commit": {
            "abbreviatedOid": "0eee697"
          },
          "author": "paulbastian",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-20T11:33:27Z",
          "updatedAt": "2024-05-20T11:38:00Z",
          "comments": [
            {
              "originalPosition": 52,
              "body": "I think its okay to keep this one in",
              "createdAt": "2024-05-20T11:33:27Z",
              "updatedAt": "2024-05-20T11:38:00Z"
            },
            {
              "originalPosition": 61,
              "body": "otherwise you need a reference here?",
              "createdAt": "2024-05-20T11:33:52Z",
              "updatedAt": "2024-05-20T11:38:00Z"
            },
            {
              "originalPosition": 32,
              "body": "I think it would help if we have a common base terminology between status list and status attestations, as we are adopted by OAuth WG, we've used Client instead of Wallet and Referenced Token instead of Credential. Happy to negotiate :)",
              "createdAt": "2024-05-20T11:37:50Z",
              "updatedAt": "2024-05-20T11:38:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s57KI-l",
          "commit": {
            "abbreviatedOid": "0eee697"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-20T13:42:51Z",
          "updatedAt": "2024-05-20T13:42:51Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s57KJqT",
          "commit": {
            "abbreviatedOid": "0eee697"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-20T13:44:15Z",
          "updatedAt": "2024-05-20T13:44:15Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "I agree with this comment, we should use the term client... and explain that wallet's are a common type of client... Ideally we could all share a reference for wallet that disambiguated, hardware, mobile, cloud and virtual wallets.",
              "createdAt": "2024-05-20T13:44:15Z",
              "updatedAt": "2024-05-20T13:44:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s57LFoy",
          "commit": {
            "abbreviatedOid": "0eee697"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-20T15:47:07Z",
          "updatedAt": "2024-05-20T15:47:07Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "Client wins, thank you for this.\r\n\r\nConsider It done",
              "createdAt": "2024-05-20T15:47:07Z",
              "updatedAt": "2024-05-20T15:47:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s57QEyP",
          "commit": {
            "abbreviatedOid": "0eee697"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-21T07:52:09Z",
          "updatedAt": "2024-05-21T07:52:09Z",
          "comments": [
            {
              "originalPosition": 52,
              "body": "For the scopes of this PR, the rationale about the status assertion takes out any comparison to Status List.\r\n\r\n",
              "createdAt": "2024-05-21T07:52:09Z",
              "updatedAt": "2024-05-21T07:52:09Z"
            }
          ]
        }
      ]
    },
    {
      "number": 53,
      "id": "PR_kwDOK4XJ0s5v-0Yd",
      "title": "Extended status assertion errors table added",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/pull/53",
      "state": "MERGED",
      "author": "SaraConsoliACN",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This commit aims to resolve issue #46.",
      "createdAt": "2024-05-20T17:06:33Z",
      "updatedAt": "2024-05-25T14:37:49Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "baseRefName": "main",
      "baseRefOid": "175dff1c3f73114c781342a63664b0ad692068ea",
      "headRepository": "SaraConsoliACN/draft-demarco-oauth-status-attestations",
      "headRefName": "SaraConsoliACN-status-assertion-response-errors",
      "headRefOid": "104fab7716ff300a45ed667b3815090d26e2a1da",
      "closedAt": "2024-05-25T14:37:49Z",
      "mergedAt": "2024-05-25T14:37:49Z",
      "mergedBy": "peppelinux",
      "mergeCommit": {
        "oid": "b4cabe4cc2c9b26601f6e55ef9171e8ba3b4b5d7"
      },
      "comments": [
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "I have improved the `alg` parameter description and also proposed a section explaining the rationale behind the unsigned status assertion errors, specifying that it's an implementation choice and the requirement to validate the signature when it is present\r\n\r\n@OR13 @fmarino-ipzs  ^",
          "createdAt": "2024-05-25T13:34:10Z",
          "updatedAt": "2024-05-25T13:34:10Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s57SFSr",
          "commit": {
            "abbreviatedOid": "f8feaa1"
          },
          "author": "SaraConsoliACN",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-21T11:14:29Z",
          "updatedAt": "2024-05-21T11:14:29Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "TODO: add example here of a status assertion error object\r\n\r\nwith\r\n\r\niss\r\niat\r\ncredential_hash\r\nerror\r\nerror_description\r\n\r\nwhere all the claims are required but error_description.",
              "createdAt": "2024-05-21T11:14:29Z",
              "updatedAt": "2024-05-21T11:14:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s57SJ-2",
          "commit": {
            "abbreviatedOid": "f8feaa1"
          },
          "author": "SaraConsoliACN",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-21T11:24:42Z",
          "updatedAt": "2024-05-21T11:31:43Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nThe `error` parameter values provided in {{RFC6749}} SHOULD be included and the following values MUST be supported:\r\n```",
              "createdAt": "2024-05-21T11:24:43Z",
              "updatedAt": "2024-05-21T13:26:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s57Uhfx",
          "commit": {
            "abbreviatedOid": "3b3099a"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-21T15:35:48Z",
          "updatedAt": "2024-05-21T15:35:48Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nThe `error` parameter for the Status Assertion Error object MUST be set with one of the values defined in the table below, in addition to the values specified in {{RFC6749}}:\r\n```",
              "createdAt": "2024-05-21T15:35:48Z",
              "updatedAt": "2024-05-21T15:35:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s57UuST",
          "commit": {
            "abbreviatedOid": "6e04a90"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-21T15:53:47Z",
          "updatedAt": "2024-05-21T15:53:47Z",
          "comments": [
            {
              "originalPosition": 68,
              "body": "```suggestion\r\n* Name of the draft changed from `OAuth Status Attestations` to `OAuth Status Assertions`.\r\n```",
              "createdAt": "2024-05-21T15:53:47Z",
              "updatedAt": "2024-05-21T15:53:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s57UuYJ",
          "commit": {
            "abbreviatedOid": "6e04a90"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-21T15:53:58Z",
          "updatedAt": "2024-05-21T15:53:58Z",
          "comments": [
            {
              "originalPosition": 69,
              "body": "```suggestion\r\n* Extended Status Assertion errors table added in [the section Status Error](#status-assertion-error).\r\n```",
              "createdAt": "2024-05-21T15:53:58Z",
              "updatedAt": "2024-05-21T15:54:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s57Uu8g",
          "commit": {
            "abbreviatedOid": "6e04a90"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-21T15:55:03Z",
          "updatedAt": "2024-05-21T15:55:03Z",
          "comments": [
            {
              "originalPosition": 54,
              "body": "```suggestion\r\n| **credential_revoked** | The Digital Credential results as already revoked. The reason of revocation MAY be provided in the `error_description` field. | this specification |\r\n```",
              "createdAt": "2024-05-21T15:55:03Z",
              "updatedAt": "2024-05-21T15:55:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s57UvvO",
          "commit": {
            "abbreviatedOid": "6e04a90"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-21T15:56:30Z",
          "updatedAt": "2024-05-21T15:56:30Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "```suggestion\r\n| **credential_updated** | One or more information contained in the Digital Credential are changed. The `error_description` field SHOULD contain a human-readable text describing the general parameters updated without specifying each one. | this specification |\r\n```\r\n\r\nthis seems to be overlapping with `credential_revoked` since if the credential was updated it should be therefore revoked",
              "createdAt": "2024-05-21T15:56:30Z",
              "updatedAt": "2024-05-21T15:56:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s57Uv_r",
          "commit": {
            "abbreviatedOid": "6e04a90"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-21T15:56:59Z",
          "updatedAt": "2024-05-21T15:56:59Z",
          "comments": [
            {
              "originalPosition": 56,
              "body": "```suggestion\r\n| **credential_invalid** | The Digital Credential is invalid. The `error_description` field SHOULD contain the reason of invalidation. | this specification |\r\n```",
              "createdAt": "2024-05-21T15:56:59Z",
              "updatedAt": "2024-05-21T15:56:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s57UyL1",
          "commit": {
            "abbreviatedOid": "6e04a90"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-21T16:01:00Z",
          "updatedAt": "2024-05-21T16:01:00Z",
          "comments": [
            {
              "originalPosition": 57,
              "body": "```suggestion\r\n| **invalid_request_signature** | The Status Assertion Request signature validation has failed. This error type is used when the proof of possession of the Digital Credential is found not valid within the Status Assertion Request. | this specification |\r\n```",
              "createdAt": "2024-05-21T16:01:00Z",
              "updatedAt": "2024-05-21T16:01:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s57U6US",
          "commit": {
            "abbreviatedOid": "6e04a90"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-21T16:14:43Z",
          "updatedAt": "2024-05-21T16:14:43Z",
          "comments": [
            {
              "originalPosition": 58,
              "body": "```suggestion\r\n| **credential_not_found** | The `credential_hash` value provided in the Status Assertion Request doesn't match with any active Digital Credential. | this specification |\r\n```",
              "createdAt": "2024-05-21T16:14:43Z",
              "updatedAt": "2024-05-21T16:14:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s57U-xX",
          "commit": {
            "abbreviatedOid": "6e04a90"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-21T16:24:05Z",
          "updatedAt": "2024-05-21T16:24:06Z",
          "comments": [
            {
              "originalPosition": 59,
              "body": "```suggestion\r\n| **unsupported_hash_alg** | The hash algorithm set in `credential_hash_alg` is not supported. | this specification |\r\n```",
              "createdAt": "2024-05-21T16:24:06Z",
              "updatedAt": "2024-05-21T16:24:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s57VAOG",
          "commit": {
            "abbreviatedOid": "ebece95"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-21T16:26:45Z",
          "updatedAt": "2024-05-21T16:26:46Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nBelow a non-normative example of a Status Assertion Error object in JWT format, with the headers and payload represented in JSON format and without applying the signature.\r\n```",
              "createdAt": "2024-05-21T16:26:46Z",
              "updatedAt": "2024-05-21T16:26:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s57VAh4",
          "commit": {
            "abbreviatedOid": "ebece95"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-21T16:27:25Z",
          "updatedAt": "2024-05-21T16:27:25Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "```suggestion\r\n    \"error_description\": \"Credential is revoked.\"\r\n```",
              "createdAt": "2024-05-21T16:27:25Z",
              "updatedAt": "2024-05-21T16:46:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s57VL1n",
          "commit": {
            "abbreviatedOid": "bdec77b"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-21T16:51:25Z",
          "updatedAt": "2024-05-21T16:51:25Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\n    \"alg\": \"ES256\",\r\n    \"typ\": \"status-assertion-error+jwt\",\r\n    \"kid\": \"Issuer-JWK-KID\"\r\n```",
              "createdAt": "2024-05-21T16:51:25Z",
              "updatedAt": "2024-05-21T16:51:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s57VQEj",
          "commit": {
            "abbreviatedOid": "ce2c28a"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-21T17:00:44Z",
          "updatedAt": "2024-05-21T17:00:44Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "```suggestion\r\n| **alg** | REQUIRED. For the Status Assertion Error that do not need to be signed the `alg` value MUST set be to `none`. | {{RFC7516}} Section 4.1.1 |\r\n```",
              "createdAt": "2024-05-21T17:00:44Z",
              "updatedAt": "2024-05-21T17:00:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s57bXgX",
          "commit": {
            "abbreviatedOid": "6e3684b"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-22T10:16:19Z",
          "updatedAt": "2024-05-22T10:16:20Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\nBelow a non-normative example of a Status Assertion Error object in JWT format, with the headers and payload represented in JSON and without applying the signature.\r\n```",
              "createdAt": "2024-05-22T10:16:19Z",
              "updatedAt": "2024-05-22T10:16:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s57bXzO",
          "commit": {
            "abbreviatedOid": "1db6c24"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-22T10:16:56Z",
          "updatedAt": "2024-05-22T10:16:56Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "```suggestion\r\n| **alg** | REQUIRED. For the Status Assertion Error that do not need to be signed the `alg` value MUST be set to `none`. | {{RFC7516}} Section 4.1.1 |\r\n```",
              "createdAt": "2024-05-22T10:16:56Z",
              "updatedAt": "2024-05-22T10:16:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s57bdS0",
          "commit": {
            "abbreviatedOid": "d942c33"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-22T10:25:39Z",
          "updatedAt": "2024-05-22T10:25:40Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "```suggestion\r\n| **credential_hash** | REQUIRED. The hash value MUST match the one contained in the Status Assertion Request to which the Status Assertion Error is related. | this specification |\r\n```",
              "createdAt": "2024-05-22T10:25:39Z",
              "updatedAt": "2024-05-22T10:25:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s57bdw7",
          "commit": {
            "abbreviatedOid": "d942c33"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-22T10:26:42Z",
          "updatedAt": "2024-05-22T10:26:43Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "```suggestion\r\n| **credential_hash_alg** |  REQUIRED. The hash algorithm MUST match the one contained in the Status Assertion Request to which the Status Assertion Error is related. | this specification |\r\n```",
              "createdAt": "2024-05-22T10:26:42Z",
              "updatedAt": "2024-05-22T10:26:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s57bfBA",
          "commit": {
            "abbreviatedOid": "d942c33"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-22T10:29:17Z",
          "updatedAt": "2024-05-22T10:29:18Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "```suggestion\r\n| **error** | REQUIRED. The value SHOULD be assigned with one of the error types defined in {{RFC6749}}[Section 5.2](https://tools.ietf.org/html/rfc6749#section-5.2) or defined in the Section [Status Assertion Error Values](status-assertion-error-values).  | {{RFC7519}} Section 4.1.7 |\r\n```",
              "createdAt": "2024-05-22T10:29:18Z",
              "updatedAt": "2024-05-22T10:29:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s57bfKt",
          "commit": {
            "abbreviatedOid": "d942c33"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-22T10:29:33Z",
          "updatedAt": "2024-05-22T10:29:33Z",
          "comments": [
            {
              "originalPosition": 48,
              "body": "```suggestion\r\n\r\n## Status Assertion Error Values\r\n\r\n```",
              "createdAt": "2024-05-22T10:29:33Z",
              "updatedAt": "2024-05-22T10:29:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s57bgZQ",
          "commit": {
            "abbreviatedOid": "50df835"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-22T10:32:13Z",
          "updatedAt": "2024-05-22T10:32:13Z",
          "comments": [
            {
              "originalPosition": 47,
              "body": "```suggestion\r\n| **error_description** | OPTIONAL. Text that clarifies the nature of the error, such as attribute changes, revocation reasons, in relation to the `error` value.  | {{RFC7519}} Section 4.1.7 |\r\n```",
              "createdAt": "2024-05-22T10:32:13Z",
              "updatedAt": "2024-05-22T10:32:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s57bgzk",
          "commit": {
            "abbreviatedOid": "461cb6a"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-22T10:33:06Z",
          "updatedAt": "2024-05-22T10:33:06Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s57ctEf",
          "commit": {
            "abbreviatedOid": "461cb6a"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-22T12:58:00Z",
          "updatedAt": "2024-05-22T12:58:00Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": ": (\r\n\r\nMUST use alg none .... ",
              "createdAt": "2024-05-22T12:58:00Z",
              "updatedAt": "2024-05-22T12:58:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s57cvRs",
          "commit": {
            "abbreviatedOid": "461cb6a"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-22T13:01:37Z",
          "updatedAt": "2024-05-22T13:01:37Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "In this case, the holder can never prove the credential is revoked, they can only prove if its not.\r\n\r\nI wonder if treating revocation as an error is a good idea. I can see pro's and con's.\r\n\r\nAn alternative would be to issue an assertion that the credential was revoked, and return a different structure for errors with the request or on the server (4xx, 5xx).",
              "createdAt": "2024-05-22T13:01:37Z",
              "updatedAt": "2024-05-22T13:01:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s57kwoO",
          "commit": {
            "abbreviatedOid": "461cb6a"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-23T08:25:44Z",
          "updatedAt": "2024-05-23T08:25:45Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "There may be situations where an adversary may send hundreds of fake status assertion request objects forcing the issuer to sign hundreds of Status Assertion Errors.\r\n\r\nthis would consume computational resources and in some cases, depending by the implementation and deployment of the issuer, may cause a resource exhaustion attack\r\n\r\nI would change it from MUST to SHOULD if this relaxes our concerns @OR13 ",
              "createdAt": "2024-05-23T08:25:44Z",
              "updatedAt": "2024-05-23T08:25:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s573age",
          "commit": {
            "abbreviatedOid": "461cb6a"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-24T22:17:49Z",
          "updatedAt": "2024-05-24T22:17:49Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "please do a proposal, I would like to have draft 03 before the next interim meeting\r\n\r\nI used status code set to 200 for two reasons:\r\n\r\n1. the result is an array with multiple embedded responses, be these assertions or errors\r\n2. adversaries won't take any behavioral information from the endpoint without inspecting the JWT/CWT contained in the response array\r\n\r\nI want to know from you if you want a different approach or if you only want remove this error type about the already revoked credential",
              "createdAt": "2024-05-24T22:17:49Z",
              "updatedAt": "2024-05-24T22:17:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s575z98",
          "commit": {
            "abbreviatedOid": "461cb6a"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-25T06:21:53Z",
          "updatedAt": "2024-05-25T06:50:33Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "```suggestion\n| **typ** | REQUIRED. Depending on the related Status Assertion Request object format, it MUST be set to `status-assertion-error+jwt` or `status-assertion-error+cwt`. | {{RFC7516}} Section 4.1.1 |\n```\n",
              "createdAt": "2024-05-25T06:21:53Z",
              "updatedAt": "2024-05-25T06:50:33Z"
            },
            {
              "originalPosition": 32,
              "body": "I don't see any requirement for mandating the signature of the error response. We can use MUST, SHOULD or even MAY, this is probably an implementation choice of the issuers. But if there are some cases where the signature is required then we should clarify which are the cases.",
              "createdAt": "2024-05-25T06:50:09Z",
              "updatedAt": "2024-05-25T06:50:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s576usP",
          "commit": {
            "abbreviatedOid": "56679ca"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-25T13:22:04Z",
          "updatedAt": "2024-05-25T13:22:04Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "```suggestion\r\n| **alg** | REQUIRED. Algorithm used to verify the cryptographic signature of the Status Assertion Error. Status Assertion Error that do not need to be signed SHOULD set the `alg` value to `none`. For further clarification about the requirement of signing the Status Assertion Errors, see Section [Rationale About The Unsigned Status Assertion Errors](#rationale-about-the-unsigned-status-assertion-errors). | {{RFC7516}} Section 4.1.1 |\r\n```",
              "createdAt": "2024-05-25T13:22:04Z",
              "updatedAt": "2024-05-25T13:29:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s576vED",
          "commit": {
            "abbreviatedOid": "56679ca"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-25T13:26:25Z",
          "updatedAt": "2024-05-25T13:26:25Z",
          "comments": [
            {
              "originalPosition": 48,
              "body": "```suggestion\r\n\r\n## Rationale About The Unsigned Status Assertion Errors \r\nTo mitigate potential resource exhaustion attacks where an adversary could issue hundreds of fake status assertion requests to force an Issuer to sign numerous Status Assertion Errors, it is advisable to set the header parameter`alg` value to `none` for Status Assertion Errors that do not require signatures. This approach conserves computational resources and prevents abuse, especially in scenarios where the Issuer's implementation could be vulnerable to  resource exhaustion attack. However, even if it is out of the scopes of this specification determine in which  in cases the Status Error Assertion signatures are necessary, when the Issuer signs the Status Assertion Errors the Client that received them MUST validate the signature.\r\n```",
              "createdAt": "2024-05-25T13:26:25Z",
              "updatedAt": "2024-05-25T13:26:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s576wUW",
          "commit": {
            "abbreviatedOid": "9383217"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-25T13:36:10Z",
          "updatedAt": "2024-05-25T13:36:10Z",
          "comments": [
            {
              "originalPosition": 50,
              "body": "```suggestion\r\nTo mitigate potential resource exhaustion attacks where an adversary could issue hundreds of fake Status Assertion Requests to force an Issuer to sign numerous Status Assertion Errors, it is advisable to set the header parameter`alg` value to `none` for Status Assertion Errors that do not require signatures. This approach conserves computational resources and prevents abuse, especially in scenarios where the Issuer's implementation could be vulnerable to resource exhaustion attacks. However, even if it is out of the scopes of this specification determine in which the Status Error Assertion signatures are necessary, when the Issuer signs the Status Assertion Errors the Client that received them MUST validate the signature.\r\n```",
              "createdAt": "2024-05-25T13:36:10Z",
              "updatedAt": "2024-05-25T13:37:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5764_d",
          "commit": {
            "abbreviatedOid": "104fab7"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-25T14:27:51Z",
          "updatedAt": "2024-05-25T14:27:51Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s576682",
          "commit": {
            "abbreviatedOid": "104fab7"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-25T14:34:12Z",
          "updatedAt": "2024-05-25T14:34:12Z",
          "comments": []
        }
      ]
    },
    {
      "number": 54,
      "id": "PR_kwDOK4XJ0s5wDJLo",
      "title": "feat: added IANA media types for status assertions, status assertion requests and errors",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/pull/54",
      "state": "MERGED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "this PR aligns the IANA registry section according to the last changes about the new media type used in this specifications:\r\n\r\n- status assertion requests\r\n- status assertion request errors\r\n\r\nIt also fixes some misalignment with the already defined media types about status-assertions",
      "createdAt": "2024-05-21T08:15:11Z",
      "updatedAt": "2024-05-24T22:19:01Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "baseRefName": "main",
      "baseRefOid": "410ebfa08caade168f1674698f0c22b30bab3149",
      "headRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "headRefName": "iana",
      "headRefOid": "0d6652abc95d03e16db8a87ab5b576f8fcf4b1f8",
      "closedAt": "2024-05-24T22:19:01Z",
      "mergedAt": "2024-05-24T22:19:01Z",
      "mergedBy": "peppelinux",
      "mergeCommit": {
        "oid": "f29d6b27d89d486f2a54180008d1578c949dbe68"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s57QX8t",
          "commit": {
            "abbreviatedOid": "36089d7"
          },
          "author": "SaraConsoliACN",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-21T08:17:30Z",
          "updatedAt": "2024-05-21T08:17:30Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s57crsv",
          "commit": {
            "abbreviatedOid": "0d6652a"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-22T12:55:42Z",
          "updatedAt": "2024-05-22T12:55:43Z",
          "comments": [
            {
              "originalPosition": 73,
              "body": "I wonder why the error needs to be protected... why not just use https://datatracker.ietf.org/doc/html/rfc7807 ?",
              "createdAt": "2024-05-22T12:55:42Z",
              "updatedAt": "2024-05-22T12:55:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s57cr68",
          "commit": {
            "abbreviatedOid": "0d6652a"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-22T12:56:05Z",
          "updatedAt": "2024-05-22T12:56:05Z",
          "comments": [
            {
              "originalPosition": 95,
              "body": "same comment as above",
              "createdAt": "2024-05-22T12:56:05Z",
              "updatedAt": "2024-05-22T12:56:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s57cr_d",
          "commit": {
            "abbreviatedOid": "0d6652a"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-22T12:56:12Z",
          "updatedAt": "2024-05-22T12:56:12Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s57oQ9b",
          "commit": {
            "abbreviatedOid": "0d6652a"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-23T14:28:27Z",
          "updatedAt": "2024-05-23T14:28:28Z",
          "comments": [
            {
              "originalPosition": 73,
              "body": "point taken, moved to https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/57",
              "createdAt": "2024-05-23T14:28:28Z",
              "updatedAt": "2024-05-23T14:28:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s57zM7g",
          "commit": {
            "abbreviatedOid": "0d6652a"
          },
          "author": "marinaado",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "This looks good to me.",
          "createdAt": "2024-05-24T14:00:00Z",
          "updatedAt": "2024-05-24T14:00:00Z",
          "comments": []
        }
      ]
    },
    {
      "number": 55,
      "id": "PR_kwDOK4XJ0s5wDc13",
      "title": "Better generalization about the confirmation methods",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/pull/55",
      "state": "MERGED",
      "author": "SaraConsoliACN",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This commit aims to resolve issue #47.",
      "createdAt": "2024-05-21T08:53:31Z",
      "updatedAt": "2024-05-27T08:41:14Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "baseRefName": "main",
      "baseRefOid": "410ebfa08caade168f1674698f0c22b30bab3149",
      "headRepository": "SaraConsoliACN/draft-demarco-oauth-status-attestations",
      "headRefName": "SaraConsoliACN-issue47",
      "headRefOid": "c53c1e12cdc20b44b9b1fe5927f4e2104ae6e439",
      "closedAt": "2024-05-25T10:53:15Z",
      "mergedAt": "2024-05-25T10:53:15Z",
      "mergedBy": "peppelinux",
      "mergeCommit": {
        "oid": "abaca5d74850cebfcf07933f98a8f58290a8a75d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s57oUSn",
          "commit": {
            "abbreviatedOid": "7aab940"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-23T14:33:02Z",
          "updatedAt": "2024-05-23T14:33:02Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "```suggestion\r\n2. Controlling the confirmation method of the Credential, using the Credential's `cnf` parameter.\r\n\r\nThe essence of requiring proof of possession over the Credential\r\nthrough the confirmation method, such has proving the control of the cryptographic material related to a Credential, is\r\nto ensure that the entity in possession of the Credential can execute\r\nactions exclusively reserved to the legitimate Holder.\r\nThe dual-layered approach of requiring both possession of the\r\nCredential and control over it, reinforces the security and integrity of the status\r\nassertion process.\r\nThis ensures that the Holder requesting a Status Attestation is indeed\r\nthe same Holder to which the Credential was originally issued,\r\n```",
              "createdAt": "2024-05-23T14:33:02Z",
              "updatedAt": "2024-05-23T14:33:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s57zBlX",
          "commit": {
            "abbreviatedOid": "ecf9b77"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-24T13:42:04Z",
          "updatedAt": "2024-05-24T13:42:04Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "```suggestion\r\nCredential and control over it, reinforces the security and integrity of the Status\r\nAssertion process.\r\n```",
              "createdAt": "2024-05-24T13:42:04Z",
              "updatedAt": "2024-05-24T13:42:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s57zBrn",
          "commit": {
            "abbreviatedOid": "ecf9b77"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-24T13:42:15Z",
          "updatedAt": "2024-05-24T13:42:16Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "```suggestion\r\nThis ensures that the Holder requesting a Status Assertion is indeed\r\n```",
              "createdAt": "2024-05-24T13:42:15Z",
              "updatedAt": "2024-05-24T13:42:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s573d78",
          "commit": {
            "abbreviatedOid": "c53c1e1"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-24T22:28:40Z",
          "updatedAt": "2024-05-24T22:28:40Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s573edT",
          "commit": {
            "abbreviatedOid": "c53c1e1"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-24T22:30:03Z",
          "updatedAt": "2024-05-24T22:30:03Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s575vHF",
          "commit": {
            "abbreviatedOid": "c53c1e1"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-25T06:12:15Z",
          "updatedAt": "2024-05-25T06:12:15Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s57__RT",
          "commit": {
            "abbreviatedOid": "c53c1e1"
          },
          "author": "marinaado",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Looks good to me",
          "createdAt": "2024-05-27T08:41:14Z",
          "updatedAt": "2024-05-27T08:41:14Z",
          "comments": []
        }
      ]
    },
    {
      "number": 56,
      "id": "PR_kwDOK4XJ0s5wNMYx",
      "title": "fix: Status Assertion and Status Assertion Request headers ",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/pull/56",
      "state": "MERGED",
      "author": "SaraConsoliACN",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": " PR that aims to resolve issues #19 and #39",
      "createdAt": "2024-05-22T13:44:16Z",
      "updatedAt": "2024-05-25T14:39:09Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "baseRefName": "main",
      "baseRefOid": "175dff1c3f73114c781342a63664b0ad692068ea",
      "headRepository": "SaraConsoliACN/draft-demarco-oauth-status-attestations",
      "headRefName": "SaraConsoliACN-issue19_39",
      "headRefOid": "7700198ce07efc859721722a6b7eff29036e053a",
      "closedAt": "2024-05-25T14:39:09Z",
      "mergedAt": "2024-05-25T14:39:09Z",
      "mergedBy": "peppelinux",
      "mergeCommit": {
        "oid": "e2edac4a89ebf28bc959156153c73d7f9508e239"
      },
      "comments": [
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "At the current status of this PR it doesn't address well these points:\r\n\r\n- https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/19#issuecomment-1969076847\r\n- it doesn't resolve #39 since it refers only to status assertion headers and not to status assertion request headers",
          "createdAt": "2024-05-24T22:27:20Z",
          "updatedAt": "2024-05-24T22:27:20Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s573bPA",
          "commit": {
            "abbreviatedOid": "1082ff8"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-24T22:22:37Z",
          "updatedAt": "2024-05-24T22:22:37Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n| **kid** | Required when `x5c` is not used. It is the Unique identifier of the `JWK` or `Cose_Key` used for the signature of the Status Attestation Request, it MUST match the one contained in the Credential. | {{RFC7515}} |\r\n```",
              "createdAt": "2024-05-24T22:22:37Z",
              "updatedAt": "2024-05-24T22:22:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s573drO",
          "commit": {
            "abbreviatedOid": "2d8036c"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "CHANGES_REQUESTED",
          "body": "this doesn't resolve the issues that it claimed to resolve.",
          "createdAt": "2024-05-24T22:27:58Z",
          "updatedAt": "2024-05-24T22:27:58Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s576jIc",
          "commit": {
            "abbreviatedOid": "72b6649"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "I have fixed the `typ` for the status assertion request object and provided a proposl for the `kid`, `did` and `x5c` header parameters\r\n\r\nI look forward for @OR13 and @marinaado and @fmarino-ipzs revisions",
          "createdAt": "2024-05-25T11:24:38Z",
          "updatedAt": "2024-05-25T11:24:38Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s576tU2",
          "commit": {
            "abbreviatedOid": "72b6649"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-25T13:15:48Z",
          "updatedAt": "2024-05-25T13:15:49Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\n| **kid** | It is the Unique identifier of the `JWK` or `Cose_Key` owned by the Holder and used for validating the signature of the Status Assertion Request. When the Credential confirmation method uses a cryptographic material, it MUST match the one contained in the Credential. The header parameter `kid` is required when `did` or other methods are not used.  | {{RFC7515}} |\r\n```",
              "createdAt": "2024-05-25T13:15:48Z",
              "updatedAt": "2024-05-25T13:15:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s576tZP",
          "commit": {
            "abbreviatedOid": "72b6649"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-25T13:17:58Z",
          "updatedAt": "2024-05-25T13:17:58Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "seems like it could be required when `did` is present, since `kid` is often part of absolute DID URLs... If its possible to avoid introducing `did` in this spec, I think thats preferable.",
              "createdAt": "2024-05-25T13:17:58Z",
              "updatedAt": "2024-05-25T13:17:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5761ID",
          "commit": {
            "abbreviatedOid": "25b2276"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-25T13:56:41Z",
          "updatedAt": "2024-05-25T13:56:41Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\n| **kid** | It is the Unique identifier of the `JWK` or `Cose_Key` owned by the Holder and used for validating the signature of the Status Assertion Request. When the Credential confirmation method uses a cryptographic material, it MUST match the one contained in the Credential. The header parameter `kid` is required when other cryptographic public key identification methods are not used, such as `x5c`.  | {{RFC7515}} |\r\n```",
              "createdAt": "2024-05-25T13:56:41Z",
              "updatedAt": "2024-05-25T13:56:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5761bk",
          "commit": {
            "abbreviatedOid": "25b2276"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-25T13:57:24Z",
          "updatedAt": "2024-05-25T13:57:25Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "```suggestion\r\n| **kid** | Unique identifier of the Credential Issuer JWK. It is required when `x5c` or other cryptographic public key resolution identifiers are not used. | {{RFC7515}} |\r\n```",
              "createdAt": "2024-05-25T13:57:24Z",
              "updatedAt": "2024-05-25T13:57:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5764sr",
          "commit": {
            "abbreviatedOid": "25b2276"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-25T14:23:59Z",
          "updatedAt": "2024-05-25T14:23:59Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s5767FJ",
          "commit": {
            "abbreviatedOid": "0544b89"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-25T14:36:21Z",
          "updatedAt": "2024-05-25T14:36:21Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s5767J2",
          "commit": {
            "abbreviatedOid": "0544b89"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-25T14:38:45Z",
          "updatedAt": "2024-05-25T14:38:45Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "```suggestion\r\n| **x5c** | X.509 certificate chain about the Credential Issuer. It is required when `kid` or other parameter are not used. | {{RFC7515}} |\r\n```",
              "createdAt": "2024-05-25T14:38:45Z",
              "updatedAt": "2024-05-25T14:38:45Z"
            }
          ]
        }
      ]
    },
    {
      "number": 58,
      "id": "PR_kwDOK4XJ0s5wcWfW",
      "title": "fix: Requirements",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/pull/58",
      "state": "MERGED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "this PR fixes a mistake that probably was brought with some editorial review and left behind.\r\n\r\nthe issuance time of a status assertion cannot be superior of the issuance of a verifiable presentation, because the status assertion is provided during the presentation phase",
      "createdAt": "2024-05-24T10:04:02Z",
      "updatedAt": "2024-05-27T08:57:59Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "baseRefName": "main",
      "baseRefOid": "410ebfa08caade168f1674698f0c22b30bab3149",
      "headRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "headRefName": "fix-req-1",
      "headRefOid": "45ce5048f8ac89449b4f3cb10561faaa97be9d8e",
      "closedAt": "2024-05-25T10:59:53Z",
      "mergedAt": "2024-05-25T10:59:53Z",
      "mergedBy": "peppelinux",
      "mergeCommit": {
        "oid": "cda96ebb99b5b17d474c1b35f40027ef9107bf95"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s573gaM",
          "commit": {
            "abbreviatedOid": "9b9879f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-24T22:37:17Z",
          "updatedAt": "2024-05-24T22:38:37Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "I might leave off the validity alignment that's implied here. The validity of the assertion and the validity of the credential could be subject to different verifier policies.... There might be multiple status assertion for a single credential, and a policy would accept m of n.",
              "createdAt": "2024-05-24T22:37:17Z",
              "updatedAt": "2024-05-24T22:38:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5759WW",
          "commit": {
            "abbreviatedOid": "9b9879f"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-25T07:05:34Z",
          "updatedAt": "2024-05-25T07:05:34Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s576dkj",
          "commit": {
            "abbreviatedOid": "9b9879f"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-25T10:55:30Z",
          "updatedAt": "2024-05-25T10:55:30Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "Very good point. Moved to an issue for future evaluations",
              "createdAt": "2024-05-25T10:55:30Z",
              "updatedAt": "2024-05-25T10:55:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s576dzR",
          "commit": {
            "abbreviatedOid": "9b9879f"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-25T10:59:05Z",
          "updatedAt": "2024-05-25T10:59:06Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\nDigital Credential issuance which it refers;\r\n```",
              "createdAt": "2024-05-25T10:59:05Z",
              "updatedAt": "2024-05-25T10:59:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s58AHrb",
          "commit": {
            "abbreviatedOid": "45ce504"
          },
          "author": "marinaado",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Makes sense to me",
          "createdAt": "2024-05-27T08:57:59Z",
          "updatedAt": "2024-05-27T08:57:59Z",
          "comments": []
        }
      ]
    },
    {
      "number": 59,
      "id": "PR_kwDOK4XJ0s5wcduy",
      "title": "fix: missing attestation to assertion replacements this PR resolves several missing definitions",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/pull/59",
      "state": "MERGED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-05-24T10:17:41Z",
      "updatedAt": "2024-05-27T09:06:26Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "baseRefName": "main",
      "baseRefOid": "cda96ebb99b5b17d474c1b35f40027ef9107bf95",
      "headRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "headRefName": "fix-assertion",
      "headRefOid": "813922b4d569c022bb2eb16f373b410952ea1837",
      "closedAt": "2024-05-25T11:06:45Z",
      "mergedAt": "2024-05-25T11:06:45Z",
      "mergedBy": "peppelinux",
      "mergeCommit": {
        "oid": "175dff1c3f73114c781342a63664b0ad692068ea"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s573exZ",
          "commit": {
            "abbreviatedOid": "d62010f"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-24T22:32:15Z",
          "updatedAt": "2024-05-24T22:32:15Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "these was addressed in the PR https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/58 and must be ignored here, I'll take care about any conflict/alignment during the merge",
              "createdAt": "2024-05-24T22:32:15Z",
              "updatedAt": "2024-05-24T22:32:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s573gjh",
          "commit": {
            "abbreviatedOid": "d62010f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-24T22:37:31Z",
          "updatedAt": "2024-05-24T22:37:31Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s5759Nn",
          "commit": {
            "abbreviatedOid": "d62010f"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-25T07:01:30Z",
          "updatedAt": "2024-05-25T07:01:30Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s58AMJ7",
          "commit": {
            "abbreviatedOid": "813922b"
          },
          "author": "marinaado",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "ok",
          "createdAt": "2024-05-27T09:06:26Z",
          "updatedAt": "2024-05-27T09:06:26Z",
          "comments": []
        }
      ]
    },
    {
      "number": 61,
      "id": "PR_kwDOK4XJ0s5wjTiZ",
      "title": "Detailed status assertions",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/pull/61",
      "state": "OPEN",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "breaking-change"
      ],
      "body": "Addressing:\r\n\r\nhttps://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/53#discussion_r1614083883\r\n\r\nThe purpose of this pull request is to define the signed information which can be conveyed to a verifier, to clarify the constraints on verifier policies.\r\n\r\nWith other status list approaches, there is an ability to communicate a single boolean, multiple boolean, or enumerations.\r\n\r\nWith our approach here, we are not limited by the bitstring data structure, so dynamic state is less constrained.\r\n\r\nThis PR also highlights the current design decision to use alg = none, to signal revocation, without providing an assertion that can be consumed by a verifier.\r\n\r\nThere may be very legitimate reasons to prefer to return unsigned information for boolean status, but for complex status, unsigned information is more dangerous to consume.\r\n\r\nI believe the specification should leave some of these decisions up to profiles.",
      "createdAt": "2024-05-25T13:19:46Z",
      "updatedAt": "2024-07-27T16:16:51Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "baseRefName": "main",
      "baseRefOid": "73316fd7e515056d54a3d8043d39a2f3a4ae7141",
      "headRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "headRefName": "assertions-of-invalidity",
      "headRefOid": "e6239f587439d34adf58acf72f31ad3bc0e9c6aa",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "The discussion is getting along the requirement to extend the status assertions to include different states.\r\n\r\nthere may be a brand new claim, boolean, saying it the status assertion points to a valid credential or to an invalid credential. \r\nthere may be the requirement to include an extendible json object to describe several failure state, when the related credential is not valid anymore",
          "createdAt": "2024-05-25T14:21:34Z",
          "updatedAt": "2024-05-25T14:21:34Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "this PR aims to resolve the issue #60 ",
          "createdAt": "2024-05-25T14:39:57Z",
          "updatedAt": "2024-05-25T14:39:57Z"
        },
        {
          "author": "marinaado",
          "authorAssociation": "COLLABORATOR",
          "body": "I do not understand the use cases that we are trying to support here. IMHO it would be very useful to give a use case that cannot be solved by boolean or enumerated list approach, and then give an example of how complex state solves it. ",
          "createdAt": "2024-05-27T14:51:12Z",
          "updatedAt": "2024-05-27T14:51:12Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "The purpose of a status assertion is to communicate an updated state, without reissuing the full credential.\n\nImagine a fast pass border clearance credential, where you can move quickly through a checkpoint when the following are true:\n\n1. All ingredients in your product have not been recalled.\n2. All ingredients suppliers, are not on a sanctioned entities list.\n3. Your legal entity is recognized to be in good standing with countries A,B,C,D\n\nImagine that each of these status details are synchronized at different time intervals, and under different policies.\n\nThe credential is simply an identifier and a public key.\n\nYou don't need to reissue this credential, unless the hsm holding the private key breaks.\n\nYou do need a fresh status assertion, to cross the border, but it can be up to a day old.\n\nSome verifiers may care about certain real-time status indicators more than others.\n\nThe issuer doesn't know the verifiers policy, so the issuer cannot pre compute a boolean or enumeration, the issuer can only supply the latest state associated to the public key bound to the credential.\n",
          "createdAt": "2024-05-31T02:34:15Z",
          "updatedAt": "2024-05-31T02:36:31Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "To enhance the specification's flexibility and extendibility, it is proposed to introduce a mandatory parameter credential_status, set to True when the credential is fully operational and active. Verifiers should be required to check this parameter along with the typ value and the assertion's signature.\r\n\r\nAdditionally, an optional parameter, credential_status_description, could be introduced, allowing issuers to provide human-readable information about the credential_status.\r\n\r\nThis modification would allow the specification to accommodate future drafts or extensions aiming to elaborate on the data schema of the assertion. It would establish a consistent baseline to prevent misinterpretation and potential security issues related to complex credential statuses.\r\n\r\nthese future draft and any other possibility connected and allowed by this change could be further described in an dedicated annex, if @OR13 wants to bring some example and use cases that matters from his perspective",
          "createdAt": "2024-05-31T09:54:28Z",
          "updatedAt": "2024-05-31T09:54:28Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "I think it is helpful for the issuer to indicate if they think the latest status information should be treated as breaking validity (like expiration or a tampered signature would), or if the new information is just an additional claim ( could be an updated counter for example).\n\nIt's always the verifiers choice to accept issuer claims, and dynamic state / status is just an issue claims that can change during the validity period of a credential.\n\nI'm fine to add language recommending against complex state, because it is true that the more complex a credential the harder it is to write verifier policies and the more likely that policy errors could lead to processing errors.\n\nAnother alternative to complex state is refreshing the credential or requesting independent credentials and presenting multiple credentials in a predefined workflow.",
          "createdAt": "2024-05-31T12:40:19Z",
          "updatedAt": "2024-05-31T12:41:46Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "I've marked this ready for review.\r\n\r\nThe general intention is to enable an issuer to convey status information that is not limited to boolean or enumerations.\r\n\r\nEnumeration status are common in workflows, where items can proceed through several states, such as \"submitted\", \"in-review\", \"accepted\", \"rejected\".\r\n\r\ncomplex state that is not boolean or enumeration is common in status updates that represent aggregations of signals, another example of where these show up is - https://blog.cloudflare.com/deep-dive-privacy-preserving-measurement",
          "createdAt": "2024-06-03T13:46:15Z",
          "updatedAt": "2024-06-03T13:46:15Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "@OR13 see also these:\r\n\r\n- https://github.com/italia/eudi-wallet-it-docs/pull/302\r\n- https://github.com/italia/eudi-wallet-it-docs/issues/264",
          "createdAt": "2024-06-20T12:44:22Z",
          "updatedAt": "2024-06-20T12:44:22Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "@marinaado your question is one of my original motivations for exposing this representation.\r\n\r\nIn other status mechanisms, a verifier can obtain an issuer signed status that is \"negative\" such as \"revoked or suspended\".\r\n\r\nGetting a signed assertion that something is not valid is different than being unable to get a signed assertion that something is still valid.\r\n\r\nIn more complex state machines, where there are more states than valid, revoked, suspended... getting a signed assertion of \"pending\" or \"in progress\", or \"6/10 items completed\"... can be more useful to policy automation than an error.\r\n\r\nI think the error responses make sense, when there is no status to provide back, or the issuer policy is to not provide a status for certain states.\r\n\r\nEven in a more complicated status assertion system, the issuer might return errors at certain times of the day (too close to a rollover window), or for certain states, such as \"update in progress\", or \"pending\".\r\n\r\nWe should probably provide some guidance to implementers on when to choose \"valid\" or \"error\", and when to choose \"latest status\" or \"error\".\r\n\r\nIn the context of HTTP errors, I think of status assertion errors as coming in 2 forms:\r\n\r\n5xx - issuer rejects the request for internal reasons beyond the control of the holder.\r\n4xx - issuer rejects the request because the holder has made a mistake.\r\n\r\nRegardless of what the issuer ultimately returns boolean, enumeration, or objects... I can still see some value in also returning 4xx or 5xx in some cases.\r\n\r\nI hope this answers your question.",
          "createdAt": "2024-07-18T13:18:26Z",
          "updatedAt": "2024-07-18T13:18:26Z"
        },
        {
          "author": "marinaado",
          "authorAssociation": "COLLABORATOR",
          "body": "@OR13 Yes it makes sense. Are you suggesting that we change the Status Assertion Errors section?",
          "createdAt": "2024-07-22T12:35:28Z",
          "updatedAt": "2024-07-22T12:35:28Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s576yDj",
          "commit": {
            "abbreviatedOid": "c99c696"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-25T13:48:57Z",
          "updatedAt": "2024-05-25T13:48:57Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\n# Extendibility of the Status Assertions\r\n\r\nStatus Assertions are used to represent the binary state of a Credential, such as valid or invalid, particularly in cases where a Credential has been revoked, resulting in either a validity Status Assertion or a Status Assertion Error.\r\n\r\nHowever, there are instances where implementations might use this specification to characterize additional states of a Credential, such as suspension.\r\n\r\nFor instance, an Issuer MAY provide Status Assertions of invalidity.\r\n\r\nEven if these cases are out of the scopes of this specification, these enable verifier policies to be conditioned on the presence of signed positive or negative state from the issuer, instead of the absence of information.\r\n\r\nIn these cases, in addition of the parameter defined in this specification about the Status Assertions ...\r\n```\r\n\r\n@OR13 the problem I see is that by extending the data set we may incur in implementations that only evaluates the `typ` for the binary state of non revoked, therefore valid.\r\n\r\nThis means that we should add another required claim with a set of extendible values and say what the verifier should do when gets a status value that it doesn't recognize. According to the OAuth phylosophy it should ignore the single parameter, while while in this case, for security reason, it should invalidate the entire assertion ",
              "createdAt": "2024-05-25T13:48:57Z",
              "updatedAt": "2024-05-25T13:48:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5761th",
          "commit": {
            "abbreviatedOid": "c99c696"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-25T13:58:41Z",
          "updatedAt": "2024-05-25T13:58:41Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "My mental model for status assertions is that they represent dynamic state of the credential, under control of the issuer, which can be provided after issuance. \r\n\r\nIn my mental model, state is not limited to booleans, and it is the verifier who ultimately determines validity (or more accurately acceptability of complex state), the issuer simply provides the input to their decision process.\r\n\r\nRevocation is a special case of boolean value, and is somewhat overloaded in the context of credentials, since keys and certificates can be revoked, as well as claims.\r\n\r\n",
              "createdAt": "2024-05-25T13:58:41Z",
              "updatedAt": "2024-05-25T13:58:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5767Zo",
          "commit": {
            "abbreviatedOid": "9e6e06c"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-25T14:47:06Z",
          "updatedAt": "2024-05-25T14:47:06Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "```suggestion\r\nThe `validity_reasons` claim MAY be present and if present MUST be an object.\r\n```",
              "createdAt": "2024-05-25T14:47:06Z",
              "updatedAt": "2024-05-25T14:47:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5767dO",
          "commit": {
            "abbreviatedOid": "b6c6954"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-25T14:49:09Z",
          "updatedAt": "2024-05-25T14:49:10Z",
          "comments": [
            {
              "originalPosition": 134,
              "body": "```suggestion\r\nFor example, in a healthcare setting, a patient should not have medical reasons for a suspended credential disclosed in assertions of suspension.\r\n```",
              "createdAt": "2024-05-25T14:49:10Z",
              "updatedAt": "2024-05-25T14:49:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5-wki-",
          "commit": {
            "abbreviatedOid": "c99c696"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-18T22:18:37Z",
          "updatedAt": "2024-06-18T22:18:38Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "I can't apply this suggestion, as it is outdated.",
              "createdAt": "2024-06-18T22:18:37Z",
              "updatedAt": "2024-06-18T22:18:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5_FaPc",
          "commit": {
            "abbreviatedOid": "acdc495"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-21T08:40:33Z",
          "updatedAt": "2024-06-21T08:40:34Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "wdyt about\r\n\r\n`validity` -> `credential_status_validity`\r\n`validity_reason` -> `credential_status`",
              "createdAt": "2024-06-21T08:40:34Z",
              "updatedAt": "2024-06-21T08:40:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5_Faex",
          "commit": {
            "abbreviatedOid": "acdc495"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-21T08:41:03Z",
          "updatedAt": "2024-06-21T08:41:03Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "where `credential_status_validity` is required, therefore all the other section must be updated accordingly\r\n",
              "createdAt": "2024-06-21T08:41:03Z",
              "updatedAt": "2024-06-21T08:41:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5_G3Z1",
          "commit": {
            "abbreviatedOid": "acdc495"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-21T12:04:30Z",
          "updatedAt": "2024-06-21T12:04:31Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "```suggestion\r\n    \"credential_status_validity\": false,\r\n```",
              "createdAt": "2024-06-21T12:04:31Z",
              "updatedAt": "2024-06-21T12:04:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5_G3io",
          "commit": {
            "abbreviatedOid": "acdc495"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-21T12:04:51Z",
          "updatedAt": "2024-06-21T12:04:51Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "```suggestion\r\n    \"credential_status\": {\r\n```",
              "createdAt": "2024-06-21T12:04:51Z",
              "updatedAt": "2024-06-21T12:04:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5_G4FF",
          "commit": {
            "abbreviatedOid": "f201a8e"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-21T12:06:16Z",
          "updatedAt": "2024-06-21T12:06:17Z",
          "comments": [
            {
              "originalPosition": 60,
              "body": "```suggestion\r\n    \"credential_status_validity\": false,\r\n```",
              "createdAt": "2024-06-21T12:06:16Z",
              "updatedAt": "2024-06-21T12:06:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5_G4Ia",
          "commit": {
            "abbreviatedOid": "f201a8e"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-21T12:06:23Z",
          "updatedAt": "2024-06-21T12:06:23Z",
          "comments": [
            {
              "originalPosition": 92,
              "body": "```suggestion\r\n    \"credential_status_validity\": true,\r\n```",
              "createdAt": "2024-06-21T12:06:23Z",
              "updatedAt": "2024-06-21T12:06:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5_G4O3",
          "commit": {
            "abbreviatedOid": "f201a8e"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-21T12:06:37Z",
          "updatedAt": "2024-06-21T12:06:37Z",
          "comments": [
            {
              "originalPosition": 61,
              "body": "```suggestion\r\n    \"credential_status\": {\r\n```",
              "createdAt": "2024-06-21T12:06:37Z",
              "updatedAt": "2024-06-21T12:06:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5_G4b1",
          "commit": {
            "abbreviatedOid": "f201a8e"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-21T12:07:06Z",
          "updatedAt": "2024-06-21T12:07:07Z",
          "comments": [
            {
              "originalPosition": 93,
              "body": "```suggestion\r\n    \"credential_status\": {\r\n```",
              "createdAt": "2024-06-21T12:07:06Z",
              "updatedAt": "2024-06-21T12:07:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5_G5YT",
          "commit": {
            "abbreviatedOid": "b8c7314"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-21T12:09:24Z",
          "updatedAt": "2024-06-21T12:09:24Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\nThe `credential_status_validity` claim MUST be present and be either `true` or `false`.\r\n```",
              "createdAt": "2024-06-21T12:09:24Z",
              "updatedAt": "2024-06-21T12:09:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5_G5dv",
          "commit": {
            "abbreviatedOid": "b8c7314"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-21T12:09:37Z",
          "updatedAt": "2024-06-21T12:09:37Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "```suggestion\r\nThe `credential_status` claim MAY be present and if present MUST be an object.\r\n```",
              "createdAt": "2024-06-21T12:09:37Z",
              "updatedAt": "2024-06-21T12:09:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5_G5k8",
          "commit": {
            "abbreviatedOid": "b8c7314"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-21T12:09:53Z",
          "updatedAt": "2024-06-21T12:09:54Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\nThe semantics of the claims within the `credential_status` object are determined by the issuer.\r\n```",
              "createdAt": "2024-06-21T12:09:53Z",
              "updatedAt": "2024-06-21T12:09:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5_HBe7",
          "commit": {
            "abbreviatedOid": "418f232"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-21T12:29:05Z",
          "updatedAt": "2024-06-21T12:29:05Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\n# Detailed Status Assertions\r\n```",
              "createdAt": "2024-06-21T12:29:05Z",
              "updatedAt": "2024-06-21T12:29:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5_HBtj",
          "commit": {
            "abbreviatedOid": "418f232"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "CHANGES_REQUESTED",
          "body": "ILGTM in general and for the value of this additional feature\r\n\r\nwe need to to ana accurate revision to find any misalignment than might occur, such as the one related to the general requirements\r\n\r\nwe need to align all the other non-normative example introducing the claim `credential_status_validity` and add the normative checks in the related section about the verifiers in particular",
          "createdAt": "2024-06-21T12:29:37Z",
          "updatedAt": "2024-06-21T12:34:56Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nStatus Assertions can introduce a more accurate level of detail, and therefore not necessarly limited to simple boolean information.\r\n```",
              "createdAt": "2024-06-21T12:29:37Z",
              "updatedAt": "2024-06-21T12:34:56Z"
            },
            {
              "originalPosition": 7,
              "body": "```suggestion\r\nThis enables Verifier policies to be conditioned on the presence of secured information, instead of the absence of information.\r\n```",
              "createdAt": "2024-06-21T12:29:55Z",
              "updatedAt": "2024-06-21T12:34:56Z"
            },
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nThis section proposes syntax to support detailed assertions.\r\n```",
              "createdAt": "2024-06-21T12:30:14Z",
              "updatedAt": "2024-06-21T12:34:56Z"
            },
            {
              "originalPosition": 11,
              "body": "```suggestion\r\nThe semantics of the claims within the `credential_status` object are determined by the Credential Issuer.\r\n```",
              "createdAt": "2024-06-21T12:30:38Z",
              "updatedAt": "2024-06-21T12:34:56Z"
            },
            {
              "originalPosition": 132,
              "body": "```suggestion\r\nStatus Assertions may disclose details about the Holder or subject that were not initially committed to during the original Credential issuance. This can potentially expose additional information that was not part of the original credentialing process.\r\n```\r\n\r\nok, we need to align the general requirements mandating not having subject's information within the assertions",
              "createdAt": "2024-06-21T12:32:26Z",
              "updatedAt": "2024-06-21T12:34:56Z"
            },
            {
              "originalPosition": 133,
              "body": "```suggestion\r\nProviding a reason that a Digital Credential is no longer valid can be essential to certain use cases, and unacceptable for others\r\n```",
              "createdAt": "2024-06-21T12:32:45Z",
              "updatedAt": "2024-06-21T12:34:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5_HE-E",
          "commit": {
            "abbreviatedOid": "418f232"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-21T12:36:57Z",
          "updatedAt": "2024-06-21T12:36:57Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "What about define at least two known credential_statuses\r\n\r\nsuspendend, revoked\r\n\r\n(we might find them also in the EUDIW ARF 1.4)\r\n\r\n",
              "createdAt": "2024-06-21T12:36:57Z",
              "updatedAt": "2024-06-21T12:36:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5_HFBy",
          "commit": {
            "abbreviatedOid": "418f232"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-21T12:37:07Z",
          "updatedAt": "2024-06-21T12:37:07Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-06-21T12:37:07Z",
              "updatedAt": "2024-06-21T12:37:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5_HFL-",
          "commit": {
            "abbreviatedOid": "418f232"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-21T12:37:31Z",
          "updatedAt": "2024-06-21T12:37:31Z",
          "comments": [
            {
              "originalPosition": 66,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-06-21T12:37:31Z",
              "updatedAt": "2024-06-21T12:37:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5_HFPy",
          "commit": {
            "abbreviatedOid": "418f232"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-21T12:37:40Z",
          "updatedAt": "2024-06-21T12:37:41Z",
          "comments": [
            {
              "originalPosition": 98,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-06-21T12:37:40Z",
              "updatedAt": "2024-06-21T12:37:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5_HG_w",
          "commit": {
            "abbreviatedOid": "3003acd"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-21T12:41:49Z",
          "updatedAt": "2024-06-21T12:41:49Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "```suggestion\r\n      \"revoked\": false,\r\n      \"suspended\": true,\r\n```",
              "createdAt": "2024-06-21T12:41:49Z",
              "updatedAt": "2024-06-21T12:41:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5_HLw7",
          "commit": {
            "abbreviatedOid": "79709aa"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-21T12:52:26Z",
          "updatedAt": "2024-06-21T12:52:26Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nsuch as the non-revocation, of a digital credential\r\n```",
              "createdAt": "2024-06-21T12:52:26Z",
              "updatedAt": "2024-06-21T12:52:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5_HMlx",
          "commit": {
            "abbreviatedOid": "1d878b1"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-21T12:54:16Z",
          "updatedAt": "2024-06-21T12:54:16Z",
          "comments": [
            {
              "originalPosition": 183,
              "body": "```suggestion\r\nDepending by the scopes of how the detailed Status Assertions are implemented, these may disclose details about the Holder or subject that were not initially committed to during the original Credential issuance. This can potentially expose additional information that was not part of the original credentialing process.\r\n```",
              "createdAt": "2024-06-21T12:54:16Z",
              "updatedAt": "2024-06-21T12:54:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5_HN49",
          "commit": {
            "abbreviatedOid": "1d878b1"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-21T12:57:02Z",
          "updatedAt": "2024-06-21T12:57:03Z",
          "comments": [
            {
              "originalPosition": 49,
              "body": "```suggestion\r\n| **credential_status_validity**| Boolean value indicating the absolute validity of the Credential linked to the Status Assertion. This parameter is REQUIRED, and the Verifier MUST verify its presence and value to assess the Credential's validity. | this specification |\r\n```",
              "createdAt": "2024-06-21T12:57:02Z",
              "updatedAt": "2024-06-21T12:57:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5_KtNd",
          "commit": {
            "abbreviatedOid": "465dcbb"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-06-21T23:23:06Z",
          "updatedAt": "2024-06-21T23:23:06Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s6AZpZk",
          "commit": {
            "abbreviatedOid": "465dcbb"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-07-02T15:33:25Z",
          "updatedAt": "2024-07-02T15:34:09Z",
          "comments": [
            {
              "originalPosition": 49,
              "body": "`credential_status_detail` missing here\r\n\r\nFYI here I propose also `credential_status` -> `credential_status_detail`\r\n\r\n@fmarino-ipzs ^",
              "createdAt": "2024-07-02T15:33:25Z",
              "updatedAt": "2024-07-02T15:34:09Z"
            },
            {
              "originalPosition": 82,
              "body": "```suggestion\r\n    \"credential_status_detail\": {\r\n```",
              "createdAt": "2024-07-02T15:33:40Z",
              "updatedAt": "2024-07-02T15:34:09Z"
            },
            {
              "originalPosition": 114,
              "body": "```suggestion\r\n    \"credential_status_detail\": {\r\n```",
              "createdAt": "2024-07-02T15:33:49Z",
              "updatedAt": "2024-07-02T15:34:09Z"
            },
            {
              "originalPosition": 145,
              "body": "```suggestion\r\n    \"credential_status_detail\": {\r\n```",
              "createdAt": "2024-07-02T15:33:56Z",
              "updatedAt": "2024-07-02T15:34:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s6BwwBq",
          "commit": {
            "abbreviatedOid": "e6239f5"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-15T07:38:03Z",
          "updatedAt": "2024-07-15T07:38:03Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s6B9Ly4",
          "commit": {
            "abbreviatedOid": "e6239f5"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-16T13:44:44Z",
          "updatedAt": "2024-07-16T13:44:44Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s6CAxds",
          "commit": {
            "abbreviatedOid": "e6239f5"
          },
          "author": "leifj",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "I don't see any major issues here but I suggest rewriting the normative language about PII along the lines I suggested.",
          "createdAt": "2024-07-16T20:23:32Z",
          "updatedAt": "2024-07-16T20:29:21Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "So this is the right sentiment but I think the way to express this is that a verifier MUST NOT be able to derive information about the credential or the subject that isn't already provided in a proof to the verifier.",
              "createdAt": "2024-07-16T20:23:32Z",
              "updatedAt": "2024-07-16T20:29:21Z"
            },
            {
              "originalPosition": 23,
              "body": "Simply talking about PII doesn't cover all the cases you can screw up basically.",
              "createdAt": "2024-07-16T20:23:55Z",
              "updatedAt": "2024-07-16T20:29:21Z"
            },
            {
              "originalPosition": 62,
              "body": "How do we represent a \"pending\" revocation?",
              "createdAt": "2024-07-16T20:26:30Z",
              "updatedAt": "2024-07-16T20:29:21Z"
            },
            {
              "originalPosition": 62,
              "body": "Pending beeing neither valid or invalid...",
              "createdAt": "2024-07-16T20:27:28Z",
              "updatedAt": "2024-07-16T20:29:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s6CCA0G",
          "commit": {
            "abbreviatedOid": "e6239f5"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-17T01:08:00Z",
          "updatedAt": "2024-07-17T01:08:00Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "pending is an half state, my pythonic mind says that 0.5 is not true\r\n\r\n![immagine](https://github.com/user-attachments/assets/d071cab4-3e99-42e9-aba3-ee3b605c22bb)\r\n",
              "createdAt": "2024-07-17T01:08:00Z",
              "updatedAt": "2024-07-17T01:11:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s6CCEmd",
          "commit": {
            "abbreviatedOid": "e6239f5"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-17T01:13:15Z",
          "updatedAt": "2024-07-17T01:13:15Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "In the W3C Bitstring Status list, there is a purpose called \"message\" which is not revoked or suspended... You can use it to signal any message the issuer chooses.... Including pending.\n\nThe more I have thought about this, the more I conclude that credential status is a separate category of validity information... It's not as simple as being inside or outside a validity period... Or revoked or suspended being invalid and their opposites being valid.\n\nI think it's better to allow the verifier to determine validity, and for the issuer to simply focus on clearly communicating.",
              "createdAt": "2024-07-17T01:13:15Z",
              "updatedAt": "2024-07-17T01:13:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s6CI8G8",
          "commit": {
            "abbreviatedOid": "e6239f5"
          },
          "author": "leifj",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-17T16:06:00Z",
          "updatedAt": "2024-07-17T16:06:00Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "so why don't we elliminate the boolean entirely and just have an IANA registry for the status semantic - the spec would register \"valid\" and \"invalid\" as two standard semantics. Everybody else get to define their own. The problem with mixing a boolean with \"extra information\" is that you get into a criciality issue: what if somebody defines a semantic that critically modifies the truthyness of the boolean. This is something that has plagued extensions in X509 btw.",
              "createdAt": "2024-07-17T16:06:00Z",
              "updatedAt": "2024-07-17T16:06:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s6CI8_m",
          "commit": {
            "abbreviatedOid": "e6239f5"
          },
          "author": "leifj",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-17T16:07:25Z",
          "updatedAt": "2024-07-17T16:07:25Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "I suggest something along the lines of \"MUST NOT contain information about the data subject (user) that isn't already made available to the validator\"",
              "createdAt": "2024-07-17T16:07:25Z",
              "updatedAt": "2024-07-17T16:07:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s6CO5lB",
          "commit": {
            "abbreviatedOid": "e6239f5"
          },
          "author": "marinaado",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Is there a relation between the Status Assertion Errors and the Credential_status_validity being false?\r\n\r\nWhile specification says that revoked credential should generate Status Assertion Error, the following example from the spec is IMHO conflicting that. \r\n\r\nShouldn't a revoked credential generate an Status Assertion Error response message with the Credential_status_validity being false?\r\n\r\n\r\n```\r\n{\r\n    \"alg\": \"ES256\",\r\n    \"typ\": \"status-assertion+jwt\",\r\n    \"kid\": \"w8ZOZRcx21Zpry7H-0VLBsH7Wf7WXb6TeK3qVMCpY44\"\r\n}\r\n.\r\n{\r\n    \"iss\": \"https://issuer.example.org\",\r\n    \"iat\": 1504699136,\r\n    \"exp\": 1504785536,\r\n    \"credential_hash\": \"xnlAq6Ma8fgu1z4hdGphJnKLulaVHpLCFeZFUGpQ2dA\",\r\n    \"credential_hash_alg\": \"sha-256\",\r\n    \"credential_status_validity\": false,\r\n    \"credential_status_detail\": {\r\n      \"state\": \"suspended\", // or \"revoked\"\r\n    },\r\n```",
          "createdAt": "2024-07-18T07:25:56Z",
          "updatedAt": "2024-07-18T07:25:56Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s6CSTL6",
          "commit": {
            "abbreviatedOid": "e6239f5"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-18T13:31:09Z",
          "updatedAt": "2024-07-18T13:31:09Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "hmm, thats undermining one of my use cases.\r\n\r\nLets imagine a truck that can be loaded with different products, and each product has a different weight.\r\n\r\nThe truck is empty waiting to be loaded, it is loaded with copper ore, it drives over a weighing station which creates a status assertion for the truck that asserts: copper, weight.\r\n\r\nThe rest of the truck credential may have an \"unloaded weight\", but it won't have \"copper\".\r\n\r\nLet me give a personal credentials use case that centers around new PII disclosures as well.\r\n\r\nLets say a person has no children when their credential is issued, but a few days later then have twins.\r\n\r\nThe status assertion could be: children: true, or children: 2 ... in either case, it would be new information to a verifier.\r\n\r\nIf your point is that \"determining what is PII is a can of worms\"... I agree.\r\n\r\nI might recommend we simple avoid the discussion of PII outside of security considerations, and treat the status assertion as conveying information which the issuer can only provide about the subject after the credential has been issued and bound to the subjects public key... this information could be related to time or location or changes in physical traits, the subject of a credential is not necessarily a natural or legal person... see security considerations section __ for guidance on informed consent for personal information related to natural persons, etc....\r\n\r\nI've offered an alternative here: https://github.com/peppelinux/draft-demarco-oauth-status-assertions/pull/61/files#r1682850960",
              "createdAt": "2024-07-18T13:31:09Z",
              "updatedAt": "2024-07-18T13:33:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s6CSUh4",
          "commit": {
            "abbreviatedOid": "e6239f5"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-18T13:33:07Z",
          "updatedAt": "2024-07-18T13:33:08Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "```suggestion\r\n- SHOULD NOT contain new information about natural person subjects, without gathering informed consent.\r\n```",
              "createdAt": "2024-07-18T13:33:07Z",
              "updatedAt": "2024-07-18T13:33:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s6CSU0Z",
          "commit": {
            "abbreviatedOid": "e6239f5"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-18T13:33:37Z",
          "updatedAt": "2024-07-18T14:06:39Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "I have come to the position that boolean values are a mistake for status assertions... and that it is verifier policy that determines if a status is cause to reject a presentation.\r\n\r\nI've also come to the conclusion that IANA registries are not necessarily the best scalable solution for status assertions in complex domains (chemistry, logistics, healthcare, cyber).\r\n\r\nIf there are assertions that need to be \"globally understood\" then IANA makes sense, but I don't see a global registry that starts with \"suspended\" or \"revoked\" growing well.\r\n\r\nI think many of the entries that might be entered in such a registry are probably much more domain specific.\r\n\r\nThe guidance to experts would typically be, \"make sure there is no existing registry entry that solves this problem\"... I imagine adjudicating new requests for all use cases in a single registry to be extremely difficult... and producing the same outcome you mention above, just with multiple status options, or multiple status values... criticality is lost, and verifier behavior becomes undefined.\r\n\r\nIn my mental model, status assertions are always credential type specific.\r\n\r\nAlthough it might look like both a business license and a drivers license are \"revoked\"... \"revoked\" actually means different things, depending on the credential type.\r\n\r\nWe want to ensure that \"revoked\" does not mean different things for the same credential type across different issuers.\r\n\r\nThis is better accomplished with credential type registries, than status registries.\r\n\r\nIn a credential type registry, you could have:\r\n\r\n\r\n|  type                      |  assertions                       |\r\n| -----------------  | -----------------------  |\r\n|  drivers license     |  suspended, revoked      |\r\n|  business license  |  pending, revoked           |\r\n\r\n\r\nStatuses are relative to a credential type, and complexity and interoperability are constrained by \"registered credential types\"... In order to understand \"drivers license\", you MUST understand \"suspended\" or \"revoked\".\r\n\r\nThis approach also works in the open world model. \r\n\r\nFor example, we use JSON Schema to enable this kind of status scheme for W3C Verifiable Credentials in a supply chain context.\r\n\r\nThe issuer can publish the documentation that verifiers can use to determine how to process the credential, and the status assertions for each credential type that the issuer supports.\r\n\r\nIf the credential contains a reference to its own schema, there is a single point point of discovery for all this information.\r\n\r\nComing back to the spec text we have.\r\n\r\nI think it is fine for the issuer to try to be helpful and tell the verifier \"new information, don't reject this\", or \"new information, please reject this\".\r\n\r\nBut its still going to be the verifier's decision what to do... In that sense, I don't see the value of the boolean as being particularly high.\r\n\r\nIf the credential type tells you there must be a status assertion and the verifier does not get one, reject.\r\nOtherwise, let the verifier apply their policy to the credential and the status assertion, and determine if they should reject or accept.\r\n",
              "createdAt": "2024-07-18T14:06:39Z",
              "updatedAt": "2024-07-18T14:07:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s6CzHE2",
          "commit": {
            "abbreviatedOid": "e6239f5"
          },
          "author": "leifj",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-23T16:09:46Z",
          "updatedAt": "2024-07-23T16:09:47Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "what I am really looking for is a clear resolution to #31 here by aligning the language as best we can with that of the regulation which this proposal doesn't do imo.",
              "createdAt": "2024-07-23T16:09:46Z",
              "updatedAt": "2024-07-23T16:11:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s6DQyPu",
          "commit": {
            "abbreviatedOid": "e6239f5"
          },
          "author": "paulbastian",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-26T16:06:24Z",
          "updatedAt": "2024-07-26T16:06:25Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "In StatusList we have come to the same conclusion as Leif and we already have a regristration for the IANA Status semantic, you can think of piggybacking on this one. This is a potential for symmtry and symbioses between the specs.",
              "createdAt": "2024-07-26T16:06:24Z",
              "updatedAt": "2024-07-26T16:06:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s6DQ3vn",
          "commit": {
            "abbreviatedOid": "e6239f5"
          },
          "author": "leifj",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-26T16:19:23Z",
          "updatedAt": "2024-07-26T16:19:23Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "That is not a bad idea",
              "createdAt": "2024-07-26T16:19:23Z",
              "updatedAt": "2024-07-26T16:19:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s6DUiiB",
          "commit": {
            "abbreviatedOid": "e6239f5"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-27T15:58:45Z",
          "updatedAt": "2024-07-27T15:58:46Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "I'm very supportive of aligning the status list and status assertion claims and semantics everywhere we can.\n\n",
              "createdAt": "2024-07-27T15:58:46Z",
              "updatedAt": "2024-07-27T15:58:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s6DUinp",
          "commit": {
            "abbreviatedOid": "e6239f5"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-27T16:02:23Z",
          "updatedAt": "2024-07-27T16:02:23Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "I filed https://github.com/peppelinux/draft-demarco-oauth-status-assertions/issues/81",
              "createdAt": "2024-07-27T16:02:23Z",
              "updatedAt": "2024-07-27T16:02:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s6DUi_L",
          "commit": {
            "abbreviatedOid": "e6239f5"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-27T16:16:51Z",
          "updatedAt": "2024-07-27T16:16:51Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "Thanks for the pointer.\n\nLet's unpack the requirements:\n\n> not allow providers of electronic attestations of attributes or any other party, after the issuance of the attestation of attributes, to obtain data that allows transactions or user behaviour to be tracked, linked or correlated, or knowledge of transactions or user behaviour to be otherwise obtained, unless explicitly authorised by the user;\n\nThe key part of this is last bit.\n\nIf the user (holder) provides additional information to the issuer, the assertion can contain new information, including potential tracking.\n\nIn the case the holder discloses a status assertion or potentially even as fresh disclosure of a disclosable status assertion.. the holder controls what information other parties receive.\n\nIn status assertion the biggest privacy risk comes from issuer tracking, based on when fresh assertions are requested.\n\nJustin mentioned this at the mic line in the oauth session at IETF 120.\n\nWe should provide guidance on the privacy trade offs.\n\n\n",
              "createdAt": "2024-07-27T16:16:51Z",
              "updatedAt": "2024-07-27T16:16:51Z"
            }
          ]
        }
      ]
    },
    {
      "number": 63,
      "id": "PR_kwDOK4XJ0s5xy7L2",
      "title": "Added additional requirement againts the audience of the Status Assertions and their Errors",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/pull/63",
      "state": "MERGED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "This PR aims to resolve https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/62",
      "createdAt": "2024-06-07T13:00:56Z",
      "updatedAt": "2024-06-10T20:03:35Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "baseRefName": "main",
      "baseRefOid": "e2edac4a89ebf28bc959156153c73d7f9508e239",
      "headRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "headRefName": "ass-aud",
      "headRefOid": "7fca888a543b35c9e66967aa95fa179b558d9a14",
      "closedAt": "2024-06-10T20:03:35Z",
      "mergedAt": "2024-06-10T20:03:35Z",
      "mergedBy": "peppelinux",
      "mergeCommit": {
        "oid": "2fe178d7ecbdc59793664f41c68eb1466a3998aa"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s59dgYy",
          "commit": {
            "abbreviatedOid": "d76e4e7"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-06-07T15:41:58Z",
          "updatedAt": "2024-06-07T15:41:58Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s59g9IL",
          "commit": {
            "abbreviatedOid": "d76e4e7"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-08T07:19:37Z",
          "updatedAt": "2024-06-08T07:20:44Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "@peppelinux please help me to understand this logical implication (Therefore,...). I agree that the response MUST NOT to be presented to a Verifier, but saying that it MUST NOT contain the aud parameter seems to me strong. The logical implication is that\n- the aud MAY be used\n- if it is used MUST be only the client \n- the client MUST check that the aud parameter only contains the client.\n\nIn this way we force the response to be not presented to third party and the aud parameter could also be used as security check. WDYT?",
              "createdAt": "2024-06-08T07:19:37Z",
              "updatedAt": "2024-06-08T07:20:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s59hTsd",
          "commit": {
            "abbreviatedOid": "d76e4e7"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-08T16:46:22Z",
          "updatedAt": "2024-06-08T16:46:22Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "we were moved from a json error message to a jwt. Therefore I didn't see the value of adding so much requirements for the data schema of the errors.\r\n\r\nI tend to reduce the options (may) aiming to give clear paths to the implementers. However, this requirement to keep out aud from the dataset is not critical to me. I would therefore remove the MUST NOT and not include at the same time the `aud` parameter definition in the assertion error data set",
              "createdAt": "2024-06-08T16:46:22Z",
              "updatedAt": "2024-06-08T16:46:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s59hTuU",
          "commit": {
            "abbreviatedOid": "d76e4e7"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-08T16:47:17Z",
          "updatedAt": "2024-06-08T16:47:17Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "@fmarino-ipzs do you agree? Do I have to remove that MUST NOT to get this PR merged?",
              "createdAt": "2024-06-08T16:47:17Z",
              "updatedAt": "2024-06-08T16:47:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s59iUoA",
          "commit": {
            "abbreviatedOid": "d76e4e7"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-09T11:36:06Z",
          "updatedAt": "2024-06-09T11:36:07Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "I get your point. I think that forcing third parties to not consume the response jwt can be properly done by using aud parameter as it is stated in the [RFC7519](https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.3). But in this PR you are explicitly saying that aud claim MUST NOT to be used and this seems a little bit strange to me..\nAnyway it is not critical for me as well so I'm going to approve this PR and we can came to this point later if you think it is valuable ",
              "createdAt": "2024-06-09T11:36:06Z",
              "updatedAt": "2024-06-09T11:36:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s59iUoS",
          "commit": {
            "abbreviatedOid": "d76e4e7"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-06-09T11:36:14Z",
          "updatedAt": "2024-06-09T11:36:14Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s59r139",
          "commit": {
            "abbreviatedOid": "d76e4e7"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-10T19:58:06Z",
          "updatedAt": "2024-06-10T19:58:06Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "```suggestion\r\nthat has requested the Status Assertion. Therefore,\r\nit is not necessary that the Status Assertion Error\r\ncontains the parameter `aud` within its payload.\r\n```",
              "createdAt": "2024-06-10T19:58:06Z",
              "updatedAt": "2024-06-10T19:58:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s59r28k",
          "commit": {
            "abbreviatedOid": "d76e4e7"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-10T20:00:54Z",
          "updatedAt": "2024-06-10T20:00:54Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\n- The corresponding entry in the response MUST NOT contain any\r\ninformation regarding the Verifier to whom it may be presented,\r\nsuch as the Verifier identifier as the intended audience.\r\n```",
              "createdAt": "2024-06-10T20:00:54Z",
              "updatedAt": "2024-06-10T20:00:54Z"
            }
          ]
        }
      ]
    },
    {
      "number": 65,
      "id": "PR_kwDOK4XJ0s5yBwvN",
      "title": "editorial review",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/pull/65",
      "state": "MERGED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "This review reflects my fresh perspective after thoroughly re-reading the specifications following a significant break since my last review.",
      "createdAt": "2024-06-10T21:16:24Z",
      "updatedAt": "2024-06-12T07:49:35Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "baseRefName": "main",
      "baseRefOid": "7042596b5c3edb08d7ec90dbbc6876aa2beef207",
      "headRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "headRefName": "editorial-rev-2",
      "headRefOid": "fcea79814a988a7f9b60f8a62267bb0405c18589",
      "closedAt": "2024-06-12T07:49:35Z",
      "mergedAt": "2024-06-12T07:49:35Z",
      "mergedBy": "peppelinux",
      "mergeCommit": {
        "oid": "a876c920ab8f5ee0729a8f1aac7a9766f2dd6e19"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s59sUPf",
          "commit": {
            "abbreviatedOid": "79c8c9d"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-10T21:17:53Z",
          "updatedAt": "2024-06-10T21:17:54Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "@fmarino-ipzs I think that this example matters for the readers",
              "createdAt": "2024-06-10T21:17:53Z",
              "updatedAt": "2024-06-10T21:17:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s59sUYc",
          "commit": {
            "abbreviatedOid": "79c8c9d"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-10T21:18:20Z",
          "updatedAt": "2024-06-10T21:18:21Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "```suggestion\r\n- The Status Assertion Request object MUST be signed with the private key corresponding\r\n```",
              "createdAt": "2024-06-10T21:18:20Z",
              "updatedAt": "2024-06-10T21:18:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s59sU8r",
          "commit": {
            "abbreviatedOid": "79c8c9d"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-10T21:19:52Z",
          "updatedAt": "2024-06-10T21:19:52Z",
          "comments": [
            {
              "originalPosition": 100,
              "body": "```suggestion\r\ncontains the parameter `aud`; if present, it MUST be set to the same value as the `iss` parameter used by the Wallet in the corresponding Status Assertion Request object.\r\n```",
              "createdAt": "2024-06-10T21:19:52Z",
              "updatedAt": "2024-06-10T21:19:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s59yE9n",
          "commit": {
            "abbreviatedOid": "7971257"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-06-11T12:22:32Z",
          "updatedAt": "2024-06-11T12:22:32Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s59zxqd",
          "commit": {
            "abbreviatedOid": "7971257"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-11T14:58:22Z",
          "updatedAt": "2024-06-11T14:58:22Z",
          "comments": [
            {
              "originalPosition": 103,
              "body": "```suggestion\r\ncontains the parameter `aud`; if present, it MUST be set to the same\r\nvalue as the `iss` parameter used by the Wallet in the corresponding\r\nStatus Assertion Request object.\r\n```",
              "createdAt": "2024-06-11T14:58:22Z",
              "updatedAt": "2024-06-11T14:58:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s593YFg",
          "commit": {
            "abbreviatedOid": "fcea798"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-12T00:15:53Z",
          "updatedAt": "2024-06-12T00:15:54Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "Not all credentials expire.\r\n\r\nI think we should provide examples for all cases of vc + sa with `iat` and `exp`.\r\n\r\nThere is also `nbf` which could interact negatively with `iat` and `exp`.\r\n\r\n",
              "createdAt": "2024-06-12T00:15:53Z",
              "updatedAt": "2024-06-12T00:16:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s593YmD",
          "commit": {
            "abbreviatedOid": "fcea798"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-12T00:18:46Z",
          "updatedAt": "2024-06-12T00:18:47Z",
          "comments": [
            {
              "originalPosition": 66,
              "body": "in CBOR, this structure might be a better solution for this:\r\n\r\n```\r\nCOSE_X509 = bstr / [ 2*certs: bstr ]\r\nCOSE_CertHash = [ hashAlg: (int / tstr), hashValue: bstr ]\r\n```\r\n\r\nSee https://datatracker.ietf.org/doc/html/rfc9360",
              "createdAt": "2024-06-12T00:18:47Z",
              "updatedAt": "2024-06-12T00:18:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s593ZKy",
          "commit": {
            "abbreviatedOid": "fcea798"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-12T00:21:11Z",
          "updatedAt": "2024-06-12T00:21:12Z",
          "comments": [
            {
              "originalPosition": 140,
              "body": "I think readers will wonder why this isn't normative.\r\n\r\n",
              "createdAt": "2024-06-12T00:21:11Z",
              "updatedAt": "2024-06-12T00:21:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s593Zs3",
          "commit": {
            "abbreviatedOid": "fcea798"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-12T00:24:26Z",
          "updatedAt": "2024-06-12T00:24:26Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "I'd like to take a stab at addressing this complexity more explicitly, but I will save that for another PR",
              "createdAt": "2024-06-12T00:24:26Z",
              "updatedAt": "2024-06-12T00:24:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s593hPR",
          "commit": {
            "abbreviatedOid": "fcea798"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-12T01:09:19Z",
          "updatedAt": "2024-06-12T01:09:19Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "good point. Issue here: https://github.com/peppelinux/draft-demarco-oauth-status-assertions/issues/71",
              "createdAt": "2024-06-12T01:09:19Z",
              "updatedAt": "2024-06-12T01:09:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s593hfX",
          "commit": {
            "abbreviatedOid": "fcea798"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-12T01:10:47Z",
          "updatedAt": "2024-06-12T01:10:47Z",
          "comments": [
            {
              "originalPosition": 140,
              "body": "because it is in a section for the considerations, I learned these kind of things by Mike :-)\r\n\r\nor, still not learned but I remember this!",
              "createdAt": "2024-06-12T01:10:47Z",
              "updatedAt": "2024-06-12T01:10:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s593hrF",
          "commit": {
            "abbreviatedOid": "fcea798"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-12T01:11:49Z",
          "updatedAt": "2024-06-12T01:11:50Z",
          "comments": [
            {
              "originalPosition": 66,
              "body": "issue here: https://github.com/peppelinux/draft-demarco-oauth-status-assertions/issues/72\r\n\r\nI admit that I didn't get it, we'll continue the conversation in the issue",
              "createdAt": "2024-06-12T01:11:49Z",
              "updatedAt": "2024-06-12T01:11:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5938rI",
          "commit": {
            "abbreviatedOid": "fcea798"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-12T02:29:43Z",
          "updatedAt": "2024-06-12T02:29:43Z",
          "comments": [
            {
              "originalPosition": 140,
              "body": "You can have normative language in security considerations, but you are correct that normally the BCP 14 language is reserved for \"ensuring interop\".... this comes ups a surprising amount in IESG reviews.",
              "createdAt": "2024-06-12T02:29:43Z",
              "updatedAt": "2024-06-12T02:29:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5938tr",
          "commit": {
            "abbreviatedOid": "fcea798"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-06-12T02:29:56Z",
          "updatedAt": "2024-06-12T02:29:56Z",
          "comments": []
        }
      ]
    },
    {
      "number": 67,
      "id": "PR_kwDOK4XJ0s5yGNkA",
      "title": "fix: CNF.JWK doesn't necessarly have kid in its members",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/pull/67",
      "state": "MERGED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-06-11T11:13:22Z",
      "updatedAt": "2024-06-12T01:08:15Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "baseRefName": "main",
      "baseRefOid": "d34980c8f705954296254557341767a8fcb514a0",
      "headRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "headRefName": "cnf-jwk-kid",
      "headRefOid": "6fa4deb1cb313bafd4376a158fac6f2305dbf7ab",
      "closedAt": "2024-06-12T01:08:15Z",
      "mergedAt": "2024-06-12T01:08:15Z",
      "mergedBy": "peppelinux",
      "mergeCommit": {
        "oid": "9dac7da690a4a7fbf6bc9fd59c7506ea8cc9afdf"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s59yDVc",
          "commit": {
            "abbreviatedOid": "6fa4deb"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-06-11T12:20:04Z",
          "updatedAt": "2024-06-11T12:20:04Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s593Zya",
          "commit": {
            "abbreviatedOid": "6fa4deb"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-06-12T00:24:55Z",
          "updatedAt": "2024-06-12T00:24:55Z",
          "comments": []
        }
      ]
    },
    {
      "number": 76,
      "id": "PR_kwDOK4XJ0s5ycsMd",
      "title": "fix: CWT.cti, editorials and IANA refs",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/pull/76",
      "state": "MERGED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-06-14T07:35:08Z",
      "updatedAt": "2024-06-17T09:08:36Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "baseRefName": "main",
      "baseRefOid": "a876c920ab8f5ee0729a8f1aac7a9766f2dd6e19",
      "headRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "headRefName": "ed2",
      "headRefOid": "93f9c18d6ccf60b31c1734f006f4666bd7d458af",
      "closedAt": "2024-06-17T09:08:36Z",
      "mergedAt": "2024-06-17T09:08:36Z",
      "mergedBy": "peppelinux",
      "mergeCommit": {
        "oid": "1af1b02435ecc351bce487a0ace16b506e579d6d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s5-RS0-",
          "commit": {
            "abbreviatedOid": "337af28"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-14T13:56:24Z",
          "updatedAt": "2024-06-14T13:56:25Z",
          "comments": [
            {
              "originalPosition": 66,
              "body": "```suggestion\r\nvalidity status.\r\n```",
              "createdAt": "2024-06-14T13:56:24Z",
              "updatedAt": "2024-06-17T09:00:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5-RTZ0",
          "commit": {
            "abbreviatedOid": "337af28"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-14T13:57:25Z",
          "updatedAt": "2024-06-14T13:57:25Z",
          "comments": [
            {
              "originalPosition": 66,
              "body": "This of course assumes that status information is not limited to revocation.",
              "createdAt": "2024-06-14T13:57:25Z",
              "updatedAt": "2024-06-14T13:57:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5-RTyS",
          "commit": {
            "abbreviatedOid": "337af28"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-14T13:58:06Z",
          "updatedAt": "2024-06-14T13:58:07Z",
          "comments": [
            {
              "originalPosition": 83,
              "body": "```suggestion\r\n: An entity that possesses Verifiable Credentials and has\r\n```",
              "createdAt": "2024-06-14T13:58:07Z",
              "updatedAt": "2024-06-14T13:58:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5-RULT",
          "commit": {
            "abbreviatedOid": "337af28"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Some nits, but I'm not attached to them",
          "createdAt": "2024-06-14T13:58:51Z",
          "updatedAt": "2024-06-14T13:58:51Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s5-SIHf",
          "commit": {
            "abbreviatedOid": "337af28"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-06-14T15:38:25Z",
          "updatedAt": "2024-06-14T15:38:35Z",
          "comments": [
            {
              "originalPosition": 66,
              "body": "Maybe it is better to say validity status instead of current status. The Status Assertion only gives a validity proof.",
              "createdAt": "2024-06-14T15:38:25Z",
              "updatedAt": "2024-06-14T15:38:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5-gETq",
          "commit": {
            "abbreviatedOid": "93f9c18"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-06-17T09:07:08Z",
          "updatedAt": "2024-06-17T09:07:08Z",
          "comments": []
        }
      ]
    },
    {
      "number": 77,
      "id": "PR_kwDOK4XJ0s5zLmnS",
      "title": "some hints about the detailes status",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/pull/77",
      "state": "MERGED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-06-21T12:43:42Z",
      "updatedAt": "2024-06-21T12:46:30Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "baseRefName": "assertions-of-invalidity",
      "baseRefOid": "3003acdb3a4179bfbcf1f59ba147f16c22285d2b",
      "headRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "headRefName": "detailed-status",
      "headRefOid": "5d9c4ca0c446a0b0f97bc3680edd5fe1941a7d18",
      "closedAt": "2024-06-21T12:46:30Z",
      "mergedAt": "2024-06-21T12:46:30Z",
      "mergedBy": "OR13",
      "mergeCommit": {
        "oid": "79709aa1f997e59dd008d24cb6580b6f61dcb6bd"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 78,
      "id": "PR_kwDOK4XJ0s5zfnzu",
      "title": "Further clarifications about credential validity without status assertions",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/pull/78",
      "state": "MERGED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "As discussed this PR offers more details about what we intend to be valid/invalid following the evidence brought or not borught using hte status assertions",
      "createdAt": "2024-06-25T12:44:08Z",
      "updatedAt": "2024-07-01T14:16:45Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "baseRefName": "main",
      "baseRefOid": "73316fd7e515056d54a3d8043d39a2f3a4ae7141",
      "headRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "headRefName": "dg-val",
      "headRefOid": "e76c8904cc377bf725e6aa546e55fb78aab62efa",
      "closedAt": "2024-07-01T14:16:45Z",
      "mergedAt": "2024-07-01T14:16:45Z",
      "mergedBy": "OR13",
      "mergeCommit": {
        "oid": "b49765707b9ab30139beab7045aecef5c58461a9"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s5__VCH",
          "commit": {
            "abbreviatedOid": "a962b9f"
          },
          "author": "SaraConsoliACN",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-06-28T07:56:03Z",
          "updatedAt": "2024-06-28T07:56:03Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s6ACFbG",
          "commit": {
            "abbreviatedOid": "a962b9f"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-06-28T13:32:48Z",
          "updatedAt": "2024-06-28T13:32:48Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s6AHdy7",
          "commit": {
            "abbreviatedOid": "a962b9f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "When we said SHOULD, we need to explain when it can be ignored, and when it becomes MUST.",
          "createdAt": "2024-06-29T09:38:03Z",
          "updatedAt": "2024-06-29T09:39:05Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\nand the Digital Credential referred to SHOULD NOT\nbe considered as having a valid status, unless there exists some specific verifier policy that provides stronger guidance.\nThe expiration datetime MUST be\n```\n",
              "createdAt": "2024-06-29T09:38:03Z",
              "updatedAt": "2024-06-29T09:39:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s6AJyGn",
          "commit": {
            "abbreviatedOid": "e76c890"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-06-30T13:03:15Z",
          "updatedAt": "2024-06-30T13:03:15Z",
          "comments": []
        }
      ]
    },
    {
      "number": 79,
      "id": "PR_kwDOK4XJ0s500rUe",
      "title": "Update README.md",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/pull/79",
      "state": "OPEN",
      "author": "Sascha-Block",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Features and benefits of OAuth Status Assertions to clearly communicate their use and privacy benefits .",
      "createdAt": "2024-07-09T12:01:12Z",
      "updatedAt": "2024-07-25T10:01:20Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "baseRefName": "main",
      "baseRefOid": "b49765707b9ab30139beab7045aecef5c58461a9",
      "headRepository": "Sascha-Block/draft-demarco-oauth-status-assertions",
      "headRefName": "patch-1",
      "headRefOid": "2adec28a4121f0b4575be7954acc9b18127156f6",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s6CW73F",
          "commit": {
            "abbreviatedOid": "ab466d6"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-18T23:16:21Z",
          "updatedAt": "2024-07-18T23:16:21Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-07-18T23:16:21Z",
              "updatedAt": "2024-07-18T23:16:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s6CW77P",
          "commit": {
            "abbreviatedOid": "ab466d6"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-18T23:16:47Z",
          "updatedAt": "2024-07-18T23:16:47Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "```suggestion\r\n**Independence**: Verifiers do not need direct interaction with the issuer to confirm the validity of a credential, which increases the privacy and security of the process.\r\n```",
              "createdAt": "2024-07-18T23:16:47Z",
              "updatedAt": "2024-07-18T23:16:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s6CW8IT",
          "commit": {
            "abbreviatedOid": "ab466d6"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-18T23:18:05Z",
          "updatedAt": "2024-07-18T23:18:06Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "```suggestion\r\nIn both secure and privacy-friendly way, OAuth Status Assertions provide an effective way to manage the validity and status of digital credentials.\r\n```",
              "createdAt": "2024-07-18T23:18:05Z",
              "updatedAt": "2024-07-18T23:18:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s6CW8Kq",
          "commit": {
            "abbreviatedOid": "ab466d6"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-18T23:18:18Z",
          "updatedAt": "2024-07-18T23:18:18Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s6CbSNZ",
          "commit": {
            "abbreviatedOid": "ab466d6"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-19T13:05:44Z",
          "updatedAt": "2024-07-19T13:05:44Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nStatus assertions are used to provide time sensitive claims that impact the validity of digital credentials without the need for a direct request from third parties. They are periodically issued to the holders of the credentials, who can present them to the verifiers together with the corresponding digital credentials.\r\n```",
              "createdAt": "2024-07-19T13:05:44Z",
              "updatedAt": "2024-07-19T13:05:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s6DDWJX",
          "commit": {
            "abbreviatedOid": "2adec28"
          },
          "author": "marinaado",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-25T08:42:19Z",
          "updatedAt": "2024-07-25T08:42:19Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "\"direct request from third parties\" in the first sentence is a bit ambiguous.  Perhaps say instead: \"without introducing third parties in the trust framework and changes in the flow of credential issuance and presentation.\" \r\n\r\n\"They are periodically issued to the holders of the credentials\" in the second sentence is not correct IMHO as they are issued per request of the Holder. So perhaps rephrase to: \"They are issued on request of the credential Holder\"",
              "createdAt": "2024-07-25T08:42:19Z",
              "updatedAt": "2024-07-25T08:42:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s6DDXGp",
          "commit": {
            "abbreviatedOid": "2adec28"
          },
          "author": "marinaado",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-25T08:43:57Z",
          "updatedAt": "2024-07-25T08:43:57Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "Perhaps we should stick to the terminology: \"verify the status of the digital credentials\". It is up to the Verifier to determine what valid means in their context. ",
              "createdAt": "2024-07-25T08:43:57Z",
              "updatedAt": "2024-07-25T08:43:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s6DD7hZ",
          "commit": {
            "abbreviatedOid": "2adec28"
          },
          "author": "marinaado",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-25T09:52:19Z",
          "updatedAt": "2024-07-25T09:52:20Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "The same comment about the used terminology as above i.e confirm the status of credential.\r\n\r\nI would say that this \"preserves\" privacy instead of \"increases\". Increase is relative. ",
              "createdAt": "2024-07-25T09:52:20Z",
              "updatedAt": "2024-07-25T09:52:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s6DD8wo",
          "commit": {
            "abbreviatedOid": "2adec28"
          },
          "author": "marinaado",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-25T09:54:51Z",
          "updatedAt": "2024-07-25T09:54:51Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "Should the generation not happen after the request? Or it is implementation-dependent. ",
              "createdAt": "2024-07-25T09:54:51Z",
              "updatedAt": "2024-07-25T09:54:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s6DD-Z4",
          "commit": {
            "abbreviatedOid": "2adec28"
          },
          "author": "marinaado",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-25T09:57:03Z",
          "updatedAt": "2024-07-25T09:57:03Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "We should say that NO data is presented to third parties (not only the unnecessary).",
              "createdAt": "2024-07-25T09:57:03Z",
              "updatedAt": "2024-07-25T09:57:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s6DECRZ",
          "commit": {
            "abbreviatedOid": "2adec28"
          },
          "author": "marinaado",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-25T10:00:45Z",
          "updatedAt": "2024-07-25T10:00:45Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "Verifiers do not need direct interaction with the issuer **or other third parties** to confirm the **status** of a credential, which **preservers** the privacy and security of the process.",
              "createdAt": "2024-07-25T10:00:45Z",
              "updatedAt": "2024-07-25T10:00:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s6DEC6p",
          "commit": {
            "abbreviatedOid": "2adec28"
          },
          "author": "marinaado",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-25T10:01:20Z",
          "updatedAt": "2024-07-25T10:01:20Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "Overall suggestion is to capitalise Holder, Verifier and Issuer through the text.",
              "createdAt": "2024-07-25T10:01:20Z",
              "updatedAt": "2024-07-25T10:01:20Z"
            }
          ]
        }
      ]
    },
    {
      "number": 80,
      "id": "PR_kwDOK4XJ0s52RStK",
      "title": "added requirements about not specifying the audience of a status assertion",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-assertions/pull/80",
      "state": "OPEN",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "status assertions do not disclose their intended audience to the credential issuers",
      "createdAt": "2024-07-23T22:21:42Z",
      "updatedAt": "2024-07-25T08:23:10Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "baseRefName": "main",
      "baseRefOid": "b49765707b9ab30139beab7045aecef5c58461a9",
      "headRepository": "peppelinux/draft-demarco-oauth-status-assertions",
      "headRefName": "no-aud-req",
      "headRefOid": "e71f7396b6854ec04394917fb9a2db43fa007145",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s6C31_3",
          "commit": {
            "abbreviatedOid": "e71f739"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-24T05:31:01Z",
          "updatedAt": "2024-07-24T05:31:01Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s6DDL5K",
          "commit": {
            "abbreviatedOid": "e71f739"
          },
          "author": "marinaado",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-25T08:23:09Z",
          "updatedAt": "2024-07-25T08:23:10Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Perhaps rephrase the second part of the statement after the comma: (e.g. disclose the Verifier's identifier to specify the intended audience)",
              "createdAt": "2024-07-25T08:23:10Z",
              "updatedAt": "2024-07-25T08:23:10Z"
            }
          ]
        }
      ]
    }
  ]
}